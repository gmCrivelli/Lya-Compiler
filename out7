Integer Mode: int
Integer Mode: int
Integer Mode: int
Procedure declaration: gcd
Integer Mode: int
Identifier: ID "g" type "var int"
ERROR (line 5): Identifier y was not defined
ERROR (line 5): Mismatched assignment types int and ^UNDEFINED^
Assigning to g with operator =
Boolean expression
ERROR (line 7): Identifier x was not defined
Integer Literal: 0
Relational or Membership operator: >
ERROR (line 7): Type ^UNDEFINED^ not found
ERROR (line 7): Binary operator > does not have matching types: void and int
ERROR (line 7): Expected boolean expression, found void
Identifier: ID "g" type "var int"
ERROR (line 8): Identifier x was not defined
ERROR (line 8): Mismatched assignment types int and ^UNDEFINED^
Assigning to g with operator =
ERROR (line 9): Identifier x was not defined
ERROR (line 9): Identifier y was not defined
ERROR (line 9): Identifier y was not defined
ERROR (line 9): Identifier x was not defined
Binary operator: /
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Binary operator / not supported on RHS of expression
ERROR (line 9): Identifier x was not defined
Binary operator: *
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Binary operator * not supported on RHS of expression
Binary operator: -
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Type ^UNDEFINED^ not found
ERROR (line 9): Binary operator - not supported on RHS of expression
ERROR (line 9): Assignment to unsupported dcl_type ^UNDEFINED^
ERROR (line 10): Identifier y was not defined
Identifier: ID "g" type "var int"
ERROR (line 10): Assignment to unsupported dcl_type ^UNDEFINED^
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7fb53b4ba438>, 'bool': <semantic.ExprType object at 0x7fb53b4c0f60>, 'char': <semantic.ExprType object at 0x7fb53b4c0fd0>, 'string': <semantic.ExprType object at 0x7fb53b442048>}
{'gcd': ['proc', 'int', False, [['int', False], ['int', False]]]}
{'g': ['var', 'int', False]}
{}
Identifier: ID "g" type "var int"
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7fb53b4ba438>, 'bool': <semantic.ExprType object at 0x7fb53b4c0f60>, 'char': <semantic.ExprType object at 0x7fb53b4c0fd0>, 'string': <semantic.ExprType object at 0x7fb53b442048>}
{'gcd': ['proc', 'int', False, [['int', False], ['int', False]]]}
{'g': ['var', 'int', False]}
Integer Mode: int
Builtin Name: print
Character String Literal: "give-me two integers separated by space:"
Builtin Name: read
Identifier: ID "a" type "var int"
Identifier: ID "b" type "var int"
Builtin Name: print
Character String Literal: "GCD of "
Identifier: ID "a" type "var int"
Identifier: ID "b" type "var int"
Character String Literal: " is "
Identifier: ID "gcd" type "proc int"
Identifier: ID "a" type "var int"
Identifier: ID "b" type "var int"
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7fb53b4ba438>, 'bool': <semantic.ExprType object at 0x7fb53b4c0f60>, 'char': <semantic.ExprType object at 0x7fb53b4c0fd0>, 'string': <semantic.ExprType object at 0x7fb53b442048>}
{'a': ['var', 'int', False], 'b': ['var', 'int', False], 'gcd': ['proc', 'int', False, [['int', False], ['int', False]]]}
