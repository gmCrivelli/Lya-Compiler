Integer Literal: 10
Integer Mode: int
Integer Literal: 1
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Integer Mode: int
Identifier: ID "stack" type "mode $int"
Integer Mode: int
Procedure declaration: push
If Action
Boolean expression
ERROR (line 6): Identifier s was not defined
ERROR (line 6): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Identifier: ID "top" type "synonym int"
Relational or Membership operator: ==
ERROR (line 6): Operand <ast.Identifier object at 0x7f0f77f218d0> has no type
ERROR (line 6): Expected boolean expression, found None
Builtin Name: print
Character String Literal: "stack is full"
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
{}
ERROR (line 9): Identifier s was not defined
ERROR (line 9): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Integer Literal: 1
ERROR (line 9): Assignment to unsupported dcl_type ^UNDEFINED^
ERROR (line 10): Identifier s was not defined
ERROR (line 10): Attempted subscript in non-array element
ERROR (line 10): Identifier s was not defined
ERROR (line 10): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
ERROR (line 10): Identifier elem was not defined
ERROR (line 10): Assignment to unsupported dcl_type ^UNDEFINED^
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
{}
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
Identifier: ID "stack" type "mode $int"
Integer Mode: int
Procedure declaration: pop
If Action
Boolean expression
ERROR (line 15): Identifier s was not defined
ERROR (line 15): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Integer Literal: 0
Relational or Membership operator: ==
ERROR (line 15): Operand <ast.Integer_Literal object at 0x7f0f76e39e48> has no type
ERROR (line 15): Expected boolean expression, found None
Builtin Name: print
Character String Literal: "empty stack"
Integer Literal: 0
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'pop': ['proc', 'int', False, [['$int', True]]], 'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
{}
ERROR (line 19): Identifier s was not defined
ERROR (line 19): Attempted subscript in non-array element
ERROR (line 19): Identifier s was not defined
ERROR (line 19): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
ERROR (line 20): Identifier s was not defined
ERROR (line 20): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Integer Literal: 1
ERROR (line 20): Assignment to unsupported dcl_type ^UNDEFINED^
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'pop': ['proc', 'int', False, [['$int', True]]], 'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
{}
ERROR (line 14): Procedure pop has no return
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'pop': ['proc', 'int', False, [['$int', True]]], 'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
Identifier: ID "stack" type "mode $int"
Procedure declaration: init
ERROR (line 25): Identifier s was not defined
ERROR (line 25): Attempted subscript in non-array element
Identifier: ID "top" type "synonym int"
Integer Literal: 1
Binary operator: +
Integer Literal: 0
ERROR (line 25): Assignment to unsupported dcl_type ^UNDEFINED^
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'pop': ['proc', 'int', False, [['$int', True]]], 'init': ['proc', 'void', False, [['$int', True]]], 'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'stack': ['mode', '$int', False], 'top': ['synonym', 'int', False]}
{}
Identifier: ID "stack" type "mode $int"
Integer Mode: int
Identifier: ID "init" type "proc void"
Identifier: ID "q" type "var $int"
Builtin Name: read
Identifier: ID "v1" type "var int"
Identifier: ID "v2" type "var int"
Identifier: ID "push" type "proc void"
Identifier: ID "q" type "var $int"
Identifier: ID "v1" type "var int"
Identifier: ID "push" type "proc void"
Identifier: ID "q" type "var $int"
Identifier: ID "v2" type "var int"
Builtin Name: print
Identifier: ID "pop" type "proc int"
Identifier: ID "q" type "var $int"
Identifier: ID "pop" type "proc int"
Identifier: ID "q" type "var $int"
Binary operator: +
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f0f77f5a048>, 'int': <semantic.ExprType object at 0x7f0f77fd2438>, 'char': <semantic.ExprType object at 0x7f0f77fd8fd0>, 'bool': <semantic.ExprType object at 0x7f0f77fd8f60>}
{'stack': ['mode', '$int', False], 'q': ['var', '$int', False], 'push': ['proc', 'void', False, [['$int', True], ['int', False]]], 'top': ['synonym', 'int', False], 'v1': ['var', 'int', False], 'pop': ['proc', 'int', False, [['$int', True]]], 'init': ['proc', 'void', False, [['$int', True]]], 'v2': ['var', 'int', False]}
