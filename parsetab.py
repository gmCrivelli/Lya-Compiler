
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST WHILE BY TRUE ELSIF ELSE READ TO RESULT RETURN RETURNS ARRAY REF IF LENGTH NUM FALSE CHAR CHARS BOOL LOC DOWN ASC UPPER LOWER SYN NULL IN FI DO TYPE FOR INT PRINT EXIT OD THEN END ABS PROC DCLprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list initialization\n                              | identifier_list mode initializationnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'INCREASE':([3,8,19,23,29,35,37,38,40,41,42,57,162,166,202,211,230,232,233,297,305,],[-60,53,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-187,-197,-56,-69,-64,-188,-198,-72,-66,]),'MINUS':([3,11,14,19,22,29,35,37,38,40,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,89,91,92,103,104,105,115,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,162,166,207,209,210,211,212,214,218,219,220,221,229,230,231,232,233,236,237,239,243,259,260,263,264,276,297,302,305,306,308,309,314,317,328,336,],[-60,73,73,-17,73,-57,-58,-59,-186,-185,-61,-153,-152,-150,-147,-149,-151,-148,73,-63,73,-80,-87,73,-82,-131,-84,73,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,129,-81,-85,-86,-83,-88,-62,-115,-75,73,73,73,73,73,-134,-120,-121,-117,73,-119,-118,-128,-107,-112,-108,73,-113,-111,-105,-114,-110,-104,-109,-106,73,-126,-124,-125,-187,-197,73,73,73,-69,-92,73,-116,129,-123,73,73,-64,73,-188,-198,73,73,73,73,73,73,73,-89,-56,-72,73,-66,73,73,73,73,73,-90,73,]),'CHAR':([19,99,106,119,157,168,227,236,245,286,289,306,307,323,],[-17,-15,180,180,180,180,-16,180,180,180,180,180,180,180,]),'END':([4,5,20,30,34,44,96,97,154,186,200,205,250,251,252,295,324,],[-2,-8,-5,-6,-7,-4,-3,-135,-23,-9,249,-18,296,-136,-207,-210,-211,]),'DECREASE':([3,8,19,23,29,35,37,38,40,41,42,57,162,166,202,211,230,232,233,297,305,],[-60,51,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-187,-197,-56,-69,-64,-188,-198,-72,-66,]),'LPAREN':([2,11,14,17,19,22,23,24,25,26,27,28,32,33,49,50,51,52,53,54,55,56,58,61,65,73,78,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,171,172,174,175,176,177,180,183,184,199,202,207,209,210,214,221,229,231,236,237,239,243,259,260,263,271,276,287,288,293,302,306,308,309,310,312,314,317,318,336,],[-203,61,61,-201,-17,61,104,105,-199,-204,-205,-202,-200,-206,-153,-152,-150,-147,-149,-151,-148,61,61,61,61,-129,104,61,-130,61,61,61,61,61,-120,-121,-117,61,-119,-118,-107,-112,-108,61,-113,-111,-105,-114,-110,-104,-109,-106,61,-126,-124,-125,237,-33,-31,-34,-36,-35,-37,-32,239,247,104,61,61,61,61,61,61,61,61,61,61,61,61,61,61,237,309,237,239,323,61,61,61,61,-39,-38,61,61,237,61,]),'ARRAY':([19,99,106,119,157,168,227,289,307,323,],[-17,-15,170,170,170,170,-16,170,170,170,]),'MULCREASE':([3,8,19,23,29,35,37,38,40,41,42,57,162,166,202,211,230,232,233,297,305,],[-60,54,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-187,-197,-56,-69,-64,-188,-198,-72,-66,]),'EXIT':([0,4,5,15,20,30,34,43,44,96,97,109,110,117,153,154,186,188,190,198,200,205,223,225,241,250,251,252,267,295,324,],[7,-2,-8,7,-5,-6,-7,7,-4,-3,-135,-158,7,7,7,-23,-9,-159,7,7,7,-18,7,7,7,7,-136,-207,7,-210,-211,]),'OD':([43,97,109,110,188,190,241,251,],[111,-135,-158,189,-159,242,282,-136,]),'ELSE':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,97,109,128,135,152,153,162,166,188,211,212,213,218,219,220,225,230,232,233,251,261,262,264,297,298,304,305,325,326,328,342,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-135,-158,-134,-128,223,-156,-187,-197,-159,-69,-92,259,-116,-103,-123,-157,-64,-188,-198,-136,259,-98,-89,-72,-95,223,-66,-100,-96,-90,-101,]),'IF':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,96,97,103,104,105,109,110,115,117,127,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[11,-2,-8,65,65,11,-5,65,-6,-7,11,-4,-153,-152,-150,-147,-149,-151,-148,65,65,65,65,-3,-135,65,65,65,-158,11,65,11,65,11,-23,-9,-159,11,11,11,-18,65,65,65,65,65,11,11,65,65,65,65,65,11,65,11,-136,-207,65,65,65,11,-210,65,65,65,65,65,65,-211,65,]),'LESSEQ':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,140,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'GREATEREQ':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,141,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'GREATER':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,144,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'ASC':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[32,-2,-8,32,32,32,-5,32,-6,-7,32,-4,-153,-152,-150,-147,-149,-151,-148,32,32,32,32,-129,32,32,-130,-3,-135,32,32,32,-158,32,32,32,32,-120,-121,-117,32,-119,-118,-107,-112,-108,32,-113,-111,-105,-114,-110,-104,-109,-106,32,-126,-124,-125,32,-23,-9,-159,32,32,32,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-136,-207,32,32,32,32,-210,32,32,32,32,32,32,-211,32,]),'DIVIDE':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,80,81,82,85,86,89,91,92,128,135,162,166,211,212,218,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-81,-85,-86,-83,-88,-62,151,-75,-134,-128,-187,-197,-69,-92,151,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'RETURN':([0,4,5,15,20,30,34,43,44,96,97,109,110,117,153,154,186,188,190,198,200,205,223,225,241,250,251,252,267,295,324,],[14,-2,-8,14,-5,-6,-7,14,-4,-3,-135,-158,14,14,14,-23,-9,-159,14,14,14,-18,14,14,14,14,-136,-207,14,-210,-211,]),'BOOL':([19,99,106,119,157,168,227,236,245,286,289,306,307,323,],[-17,-15,176,176,176,176,-16,176,176,176,176,176,176,176,]),'AND':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,147,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'TYPE':([0,4,5,15,20,30,34,44,96,97,154,186,200,205,250,251,252,295,324,],[18,-2,-8,18,-5,-6,-7,-4,-3,-135,-23,-9,18,-18,18,-136,-207,-210,-211,]),'BY':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,283,284,285,297,298,305,326,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,314,-177,-181,-72,-95,-66,-96,-90,]),'PLUS':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,133,-81,-85,-86,-83,-88,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,133,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'LESS':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,137,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'COMMA':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,98,99,100,101,106,107,108,119,123,124,128,135,162,163,164,165,166,167,169,171,172,174,175,176,177,178,179,180,181,182,183,184,185,211,212,218,219,220,226,227,228,230,232,233,234,235,240,254,256,257,264,270,271,272,273,277,289,290,291,297,298,305,310,311,312,319,320,326,328,330,331,332,333,334,339,340,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,155,-15,-24,156,156,-10,187,156,-70,210,-134,-128,-187,-189,231,-191,-197,231,-12,-28,-33,-31,-34,-36,-35,-30,-27,-37,-45,-46,-32,-40,-29,-69,-92,-116,-103,-123,-25,-16,-26,-64,-188,-198,-44,-13,-11,-14,-43,-71,-89,-190,-52,306,-53,-50,156,322,-214,-72,-95,-66,-39,-47,-38,-217,-216,-96,-90,-51,-54,-49,-41,-191,-218,-215,]),'LBRACKET':([3,8,10,19,23,29,35,37,38,40,41,42,57,59,60,62,63,64,66,68,69,71,74,76,77,78,80,81,82,85,86,89,92,128,162,166,170,173,202,211,212,230,232,233,264,276,297,305,328,],[-60,-73,58,-17,103,-57,-58,-59,-186,-185,-62,-61,-63,-80,-87,-82,-73,-84,-78,127,-91,-79,-77,-76,-74,103,-81,-85,-86,-83,-88,-62,-75,-73,-187,-197,236,238,103,-69,-92,-64,-188,-198,-89,103,-72,-66,-90,]),'ARROW':([3,8,11,14,19,22,23,29,35,37,38,40,41,42,49,50,51,52,53,54,55,56,57,58,61,63,65,73,78,83,84,89,103,104,105,115,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,162,166,202,207,209,210,211,214,221,229,230,231,232,233,236,237,239,243,259,260,263,276,297,302,305,306,308,309,314,317,336,],[-60,57,75,75,-17,75,-56,-57,-58,-59,-186,-185,-62,-61,-153,-152,-150,-147,-149,-151,-148,75,-63,75,75,57,75,-129,-56,75,-130,-62,75,75,75,75,75,57,-120,-121,-117,75,-119,-118,-107,-112,-108,75,-113,-111,-105,-114,-110,-104,-109,-106,75,-126,-124,-125,-187,-197,-56,75,75,75,-69,75,75,75,-64,75,-188,-198,75,75,75,75,75,75,75,-56,-72,75,-66,75,75,75,75,75,75,]),'FOR':([43,],[113,]),'LOC':([19,171,172,174,175,176,177,178,179,180,181,182,183,184,185,234,310,311,312,319,331,332,341,],[-17,-28,-33,-31,-34,-36,-35,-30,-27,-37,-45,-46,-32,-40,-29,-44,-39,-47,-38,339,-54,-49,344,]),'FALSE':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[64,64,64,-153,-152,-150,-147,-149,-151,-148,64,64,64,64,-129,64,-130,64,64,64,64,64,-120,-121,-117,64,-119,-118,-107,-112,-108,64,-113,-111,-105,-114,-110,-104,-109,-106,64,-126,-124,-125,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'RESULT':([0,4,5,15,20,30,34,43,44,96,97,109,110,117,153,154,186,188,190,198,200,205,223,225,241,250,251,252,267,295,324,],[22,-2,-8,22,-5,-6,-7,22,-4,-3,-135,-158,22,22,22,-23,-9,-159,22,22,22,-18,22,22,22,22,-136,-207,22,-210,-211,]),'ELSIF':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,97,109,128,135,152,153,162,166,188,211,212,213,218,219,220,225,230,232,233,251,261,262,264,297,298,304,305,325,326,328,342,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-135,-158,-134,-128,221,-156,-187,-197,-159,-69,-92,260,-116,-103,-123,-157,-64,-188,-198,-136,302,-98,-89,-72,-95,221,-66,-100,-96,-90,-101,]),'ABS':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[25,-2,-8,25,25,25,-5,25,-6,-7,25,-4,-153,-152,-150,-147,-149,-151,-148,25,25,25,25,-129,25,25,-130,-3,-135,25,25,25,-158,25,25,25,25,-120,-121,-117,25,-119,-118,-107,-112,-108,25,-113,-111,-105,-114,-110,-104,-109,-106,25,-126,-124,-125,25,-23,-9,-159,25,25,25,-18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-136,-207,25,25,25,25,-210,25,25,25,25,25,25,-211,25,]),'COLON':([3,19,23,29,35,37,38,40,42,45,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,116,122,123,128,135,158,159,161,162,166,211,212,215,217,218,219,220,230,232,233,264,274,275,276,297,298,305,326,328,334,],[-60,-17,-137,-57,-58,-59,-186,-185,-61,117,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,198,209,-42,-134,-128,229,-67,-55,-187,-197,-69,-92,263,-42,-116,-103,-123,-64,-188,-198,-89,-42,308,-56,-72,-95,-66,-96,-90,-42,]),'PRINT':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[33,-2,-8,33,33,33,-5,33,-6,-7,33,-4,-153,-152,-150,-147,-149,-151,-148,33,33,33,33,-129,33,33,-130,-3,-135,33,33,33,-158,33,33,33,33,-120,-121,-117,33,-119,-118,-107,-112,-108,33,-113,-111,-105,-114,-110,-104,-109,-106,33,-126,-124,-125,33,-23,-9,-159,33,33,33,-18,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-136,-207,33,33,33,33,-210,33,33,33,33,33,33,-211,33,]),'INT':([19,99,106,119,157,168,227,236,245,286,289,306,307,323,],[-17,-15,177,177,177,177,-16,177,177,177,177,177,177,177,]),'CHARS':([19,99,106,119,157,168,227,289,307,323,],[-17,-15,173,173,173,173,-16,173,173,173,]),'$end':([4,5,12,15,20,30,34,44,96,97,154,186,205,251,252,],[-2,-8,0,-1,-5,-6,-7,-4,-3,-135,-23,-9,-18,-136,-207,]),'MOD':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,80,81,82,85,86,89,91,92,128,135,162,166,211,212,218,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-81,-85,-86,-83,-88,-62,149,-75,-134,-128,-187,-197,-69,-92,149,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'OR':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,136,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'ASSIGN':([3,8,19,23,29,35,37,38,40,41,42,57,99,101,119,162,166,169,171,172,174,175,176,177,178,179,180,181,182,183,184,185,191,195,202,206,211,227,230,232,233,234,297,305,310,311,312,331,332,],[-60,52,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-15,157,207,-187,-197,207,-28,-33,-31,-34,-36,-35,-30,-27,-37,-45,-46,-32,-40,-29,243,-176,-56,207,-69,-16,-64,-188,-198,-44,-72,-66,-39,-47,-38,-54,-49,]),'REF':([19,99,106,119,157,168,227,289,307,323,],[-17,-15,168,168,168,168,-16,168,168,168,]),'CCONST':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[82,82,82,-153,-152,-150,-147,-149,-151,-148,82,82,82,82,-129,82,-130,82,82,82,82,82,-120,-121,-117,82,-119,-118,-107,-112,-108,82,-113,-111,-105,-114,-110,-104,-109,-106,82,-126,-124,-125,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'PROC':([117,],[199,]),'UPPER':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[28,-2,-8,28,28,28,-5,28,-6,-7,28,-4,-153,-152,-150,-147,-149,-151,-148,28,28,28,28,-129,28,28,-130,-3,-135,28,28,28,-158,28,28,28,28,-120,-121,-117,28,-119,-118,-107,-112,-108,28,-113,-111,-105,-114,-110,-104,-109,-106,28,-126,-124,-125,28,-23,-9,-159,28,28,28,-18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-136,-207,28,28,28,28,-210,28,28,28,28,28,28,-211,28,]),'RETURNS':([248,292,321,],[293,-212,-213,]),'LOWER':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[2,-2,-8,2,2,2,-5,2,-6,-7,2,-4,-153,-152,-150,-147,-149,-151,-148,2,2,2,2,-129,2,2,-130,-3,-135,2,2,2,-158,2,2,2,2,-120,-121,-117,2,-119,-118,-107,-112,-108,2,-113,-111,-105,-114,-110,-104,-109,-106,2,-126,-124,-125,2,-23,-9,-159,2,2,2,-18,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-136,-207,2,2,2,2,-210,2,2,2,2,2,2,-211,2,]),'DO':([0,4,5,15,20,30,34,43,44,96,97,109,110,117,153,154,186,188,190,198,200,205,223,225,241,250,251,252,267,295,324,],[43,-2,-8,43,-5,-6,-7,43,-4,-3,-135,-158,43,43,43,-23,-9,-159,43,43,43,-18,43,43,43,43,-136,-207,43,-210,-211,]),'LENGTH':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[26,-2,-8,26,26,26,-5,26,-6,-7,26,-4,-153,-152,-150,-147,-149,-151,-148,26,26,26,26,-129,26,26,-130,-3,-135,26,26,26,-158,26,26,26,26,-120,-121,-117,26,-119,-118,-107,-112,-108,26,-113,-111,-105,-114,-110,-104,-109,-106,26,-126,-124,-125,26,-23,-9,-159,26,26,26,-18,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-136,-207,26,26,26,26,-210,26,26,26,26,26,26,-211,26,]),'TO':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,128,135,161,162,166,211,212,218,219,220,230,232,233,264,283,284,285,297,298,305,315,316,326,328,335,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-134,-128,-55,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,317,-177,-181,-72,-95,-66,336,317,-96,-90,-178,]),'NULL':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[60,60,60,-153,-152,-150,-147,-149,-151,-148,60,60,60,60,-129,60,-130,60,60,60,60,60,-120,-121,-117,60,-119,-118,-107,-112,-108,60,-113,-111,-105,-114,-110,-104,-109,-106,60,-126,-124,-125,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ICONST':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,238,239,243,259,260,263,302,306,308,309,314,317,336,],[85,85,85,-153,-152,-150,-147,-149,-151,-148,85,85,85,85,-129,85,-130,85,85,85,85,85,-120,-121,-117,85,-119,-118,-107,-112,-108,85,-113,-111,-105,-114,-110,-104,-109,-106,85,-126,-124,-125,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'SEMI':([1,3,6,9,13,14,16,19,21,29,31,35,36,37,38,40,41,42,47,48,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,94,95,98,100,102,107,108,111,112,114,118,120,121,128,135,162,166,169,171,172,174,175,176,177,178,179,180,181,182,183,184,185,189,192,193,194,196,197,201,203,204,208,211,212,218,219,220,224,226,228,230,232,233,234,235,240,242,246,248,249,253,254,264,266,282,285,287,292,294,296,297,298,305,310,311,312,313,318,321,326,328,331,332,337,338,343,345,346,],[-141,-60,-143,-145,-138,-193,97,-17,-142,-57,-139,-58,-144,-59,-186,-185,-140,-61,-137,-192,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-97,-115,-75,-194,-196,154,-24,-195,-10,186,-164,190,-168,205,-19,-146,-134,-128,-187,-197,-12,-28,-33,-31,-34,-36,-35,-30,-27,-37,-45,-46,-32,-40,-29,-166,-171,-169,-173,-172,-184,251,252,-20,-21,-69,-92,-116,-103,-123,-154,-25,-26,-64,-188,-198,-44,-13,-11,-165,-170,295,-208,-22,-14,-89,-155,-167,-181,-182,-212,324,-209,-72,-95,-66,-39,-47,-38,-174,-183,-213,-96,-90,-54,-49,-175,-179,-180,-219,-220,]),'MODCREASE':([3,8,19,23,29,35,37,38,40,41,42,57,162,166,202,211,230,232,233,297,305,],[-60,49,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-187,-197,-56,-69,-64,-188,-198,-72,-66,]),'STRCAT':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,130,-81,-85,-86,-83,-88,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,130,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'ID':([0,3,4,5,7,11,14,15,18,19,20,22,29,30,34,35,37,38,39,40,42,43,44,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,96,97,99,103,104,105,106,109,110,113,115,117,118,119,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,162,166,168,186,187,188,190,198,200,204,205,207,208,209,210,211,212,214,218,219,220,221,223,225,227,229,230,231,232,233,236,237,239,241,243,245,247,250,251,252,253,254,259,260,263,264,267,286,289,295,297,298,302,305,306,307,308,309,314,317,322,323,324,326,328,336,],[19,-60,-2,-8,19,19,19,19,19,-17,-5,19,-57,-6,-7,-58,-59,-186,19,-185,-61,19,-4,19,-153,-152,-150,-147,-149,-151,-148,19,-63,19,-80,-87,19,-82,-131,-84,19,-78,-127,-133,-122,-79,-132,-129,-77,19,-76,-74,-56,-102,-81,-85,-86,19,-130,-83,-88,-93,-94,-62,-115,-75,-3,-135,-15,19,19,19,19,-158,19,19,19,19,19,19,-19,19,-134,-120,-121,-117,19,-119,-118,-128,-107,-112,-108,19,-113,-111,-105,-114,-110,-104,-109,-106,19,-126,-124,-125,19,-23,19,19,19,-187,-197,19,-9,19,-159,19,19,19,-20,-18,19,-21,19,19,-69,-92,19,-116,-103,-123,19,19,19,-16,19,-64,19,-188,-198,19,19,19,19,19,19,19,19,-136,-207,-22,-14,19,19,19,-89,19,19,19,-210,-72,-95,19,-66,19,19,19,19,19,19,19,19,-211,-96,-90,19,]),'TIMES':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,80,81,82,85,86,89,91,92,128,135,162,166,211,212,218,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-81,-85,-86,-83,-88,-62,150,-75,-134,-128,-187,-197,-69,-92,150,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'DCL':([0,4,5,15,20,30,34,44,96,97,154,186,200,205,250,251,252,295,324,],[39,-2,-8,39,-5,-6,-7,-4,-3,-135,-23,-9,39,-18,39,-136,-207,-210,-211,]),'SCONST':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[86,86,86,-153,-152,-150,-147,-149,-151,-148,86,86,86,86,-129,86,-130,86,86,86,86,86,-120,-121,-117,86,-119,-118,-107,-112,-108,86,-113,-111,-105,-114,-110,-104,-109,-106,86,-126,-124,-125,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'FI':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,97,109,128,135,152,153,162,166,188,211,212,218,219,220,222,223,225,230,232,233,251,258,264,267,297,298,299,301,304,305,326,328,329,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-135,-158,-134,-128,224,-156,-187,-197,-159,-69,-92,-116,-103,-123,266,-160,-157,-64,-188,-198,-136,298,-89,-161,-72,-95,-99,326,-162,-66,-96,-90,-163,]),'RPAREN':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,104,105,125,128,135,162,163,164,165,166,167,171,172,174,175,176,177,178,179,180,181,182,183,184,185,211,212,218,219,220,230,232,233,234,247,256,264,270,278,281,290,291,297,298,305,309,310,311,312,319,320,326,328,331,332,333,334,339,340,341,344,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,162,166,212,-134,-128,-187,-189,232,-191,-197,233,-28,-33,-31,-34,-36,-35,-30,-27,-37,-45,-46,-32,-40,-29,-69,-92,-116,-103,-123,-64,-188,-198,-44,292,-43,-89,-190,310,312,321,-214,-72,-95,-66,162,-39,-47,-38,-217,-216,-96,-90,-54,-49,-41,-191,-218,-215,345,346,]),'DIFF':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,146,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'EQUAL':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,211,212,218,219,220,230,232,233,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,138,-62,-115,-75,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,-56,-72,-66,-90,]),'DOWN':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,128,135,161,162,166,191,195,211,212,218,219,220,230,232,233,264,283,284,285,297,298,305,316,326,328,335,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-134,-128,-55,-187,-197,244,-176,-69,-92,-116,-103,-123,-64,-188,-198,-89,315,-177,-181,-72,-95,-66,315,-96,-90,-178,]),'DIVCREASE':([3,8,19,23,29,35,37,38,40,41,42,57,162,166,202,211,230,232,233,297,305,],[-60,50,-17,-56,-57,-58,-59,-186,-185,-62,-61,-63,-187,-197,-56,-69,-64,-188,-198,-72,-66,]),'NOT':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[84,84,84,-153,-152,-150,-147,-149,-151,-148,84,84,84,84,84,84,84,84,84,-120,-121,-117,84,-119,-118,-107,-112,-108,84,-113,-111,-105,-114,-110,-104,-109,-106,84,-126,-124,-125,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'TRUE':([11,14,22,49,50,51,52,53,54,55,56,58,61,65,73,83,84,103,104,105,115,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[81,81,81,-153,-152,-150,-147,-149,-151,-148,81,81,81,81,-129,81,-130,81,81,81,81,81,-120,-121,-117,81,-119,-118,-107,-112,-108,81,-113,-111,-105,-114,-110,-104,-109,-106,81,-126,-124,-125,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'IN':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,89,91,92,128,135,162,166,191,195,211,212,218,219,220,230,232,233,244,264,276,297,305,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,143,-62,-115,-75,-134,-128,-187,-197,245,-176,-69,-92,-116,-103,-123,-64,-188,-198,286,-89,-56,-72,-66,-90,]),'RBRACKET':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,123,124,128,135,159,160,161,162,166,172,174,175,176,177,180,183,211,212,216,217,218,219,220,230,232,233,255,256,257,264,268,269,271,272,273,277,279,280,297,298,303,305,310,312,326,328,330,333,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-70,211,-134,-128,-65,230,-55,-187,-197,-33,-31,-34,-36,-35,-37,-32,-69,-92,264,-55,-116,-103,-123,-64,-188,-198,297,-43,-71,-89,-68,305,-52,307,-53,-50,-48,311,-72,-95,328,-66,-39,-38,-96,-90,-51,-41,]),'WHILE':([3,19,29,35,37,38,40,42,43,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,91,92,128,135,162,166,172,174,175,176,177,180,183,192,193,194,196,211,212,218,219,220,230,232,233,264,285,287,297,298,305,310,312,313,318,326,328,337,338,343,],[-60,-17,-57,-58,-59,-186,-185,-61,115,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-115,-75,-134,-128,-187,-197,-33,-31,-34,-36,-35,-37,-32,-171,115,-173,-172,-69,-92,-116,-103,-123,-64,-188,-198,-89,-181,-182,-72,-95,-66,-39,-38,-174,-183,-96,-90,-175,-179,-180,]),'NUM':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[17,-2,-8,17,17,17,-5,17,-6,-7,17,-4,-153,-152,-150,-147,-149,-151,-148,17,17,17,17,-129,17,17,-130,-3,-135,17,17,17,-158,17,17,17,17,-120,-121,-117,17,-119,-118,-107,-112,-108,17,-113,-111,-105,-114,-110,-104,-109,-106,17,-126,-124,-125,17,-23,-9,-159,17,17,17,-18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-136,-207,17,17,17,17,-210,17,17,17,17,17,17,-211,17,]),'THEN':([3,19,29,35,37,38,40,42,57,59,60,62,63,64,66,67,69,70,71,72,74,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,126,128,135,162,166,211,212,218,219,220,230,232,233,264,265,297,298,300,305,326,327,328,],[-60,-17,-57,-58,-59,-186,-185,-61,-63,-80,-87,-82,-131,-84,-78,-127,-133,-122,-79,-132,-77,-76,-74,-56,-102,-81,-85,-86,-83,-88,-93,-94,-62,-97,-115,-75,153,214,-134,-128,-187,-197,-69,-92,-116,-103,-123,-64,-188,-198,-89,153,-72,-95,214,-66,-96,214,-90,]),'SYN':([0,4,5,15,20,30,34,44,96,97,154,186,200,205,250,251,252,295,324,],[46,-2,-8,46,-5,-6,-7,-4,-3,-135,-23,-9,46,-18,46,-136,-207,-210,-211,]),'READ':([0,4,5,11,14,15,20,22,30,34,43,44,49,50,51,52,53,54,55,56,58,61,65,73,75,83,84,96,97,103,104,105,109,110,115,117,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,186,188,190,198,200,205,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,251,252,259,260,263,267,295,302,306,308,309,314,317,324,336,],[27,-2,-8,27,27,27,-5,27,-6,-7,27,-4,-153,-152,-150,-147,-149,-151,-148,27,27,27,27,-129,27,27,-130,-3,-135,27,27,27,-158,27,27,27,27,-120,-121,-117,27,-119,-118,-107,-112,-108,27,-113,-111,-105,-114,-110,-104,-109,-106,27,-126,-124,-125,27,-23,-9,-159,27,27,27,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-136,-207,27,27,27,27,-210,27,27,27,27,27,27,-211,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exit_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'statement':([0,15,200,250,],[4,96,4,96,]),'range_enumeration':([113,],[194,]),'start_value':([243,],[283,]),'synonym_definition':([46,118,],[120,204,]),'character_string_literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'location':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[8,63,63,8,63,8,63,63,63,63,128,63,63,63,63,8,63,8,63,63,63,63,8,8,8,8,63,63,63,63,63,8,8,63,63,63,63,63,8,63,8,63,63,63,8,63,63,63,63,63,63,63,]),'do_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'result_spec':([248,],[294,]),'else_expression':([213,261,],[258,301,]),'integer_literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,238,239,243,259,260,263,302,306,308,309,314,317,336,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,279,66,66,66,66,66,66,66,66,66,66,66,66,]),'program':([0,],[12,]),'formal_procedure_head':([117,],[200,]),'array_primitive_value':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operand3':([11,14,22,56,58,61,65,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,220,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'formal_parameter':([247,322,],[291,340,]),'composite_mode':([106,119,157,168,289,307,323,],[178,178,178,178,178,178,178,]),'boolean_literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'loop_counter':([113,],[191,]),'synonym_statement':([0,15,200,250,],[20,20,20,20,]),'string_mode':([106,119,157,168,289,307,323,],[181,181,181,181,181,181,181,]),'referenced_location':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'parenthesized_expression':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'for_control':([113,],[193,]),'bracketed_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'value_array_slice':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'then_clause':([93,265,],[152,304,]),'element_mode':([307,],[332,]),'boolean_mode':([106,119,157,168,236,245,286,289,306,307,323,],[183,183,183,183,183,183,183,183,183,183,183,]),'literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'builtin_name':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'assigning_operator':([8,],[56,]),'initialization':([119,169,206,],[208,235,253,]),'formal_parameter_list':([247,],[290,]),'discrete_mode':([106,119,157,168,236,245,286,289,306,307,323,],[171,171,171,171,271,287,318,171,271,171,171,]),'builtin_call':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'assignment_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'membership_operator':([87,],[142,]),'operator2':([79,219,],[132,132,]),'relational_operator':([87,],[145,]),'procedure_statement':([0,15,200,250,],[34,34,34,34,]),'string_slice':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'literal_range':([236,237,239,306,309,],[273,278,281,273,281,]),'if_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operand0':([11,14,22,56,58,61,65,103,104,105,115,127,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'conditional_expression':([11,14,22,56,58,61,65,103,104,105,115,127,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'array_element':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'mode_definition':([18,155,],[100,226,]),'then_expression':([126,300,327,],[213,325,342,]),'string_concatenation_operator':([79,219,],[134,134,]),'value_array_element':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'parameter_spec':([289,],[320,]),'array_slice':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'character_literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'control_part':([43,],[112,]),'action_statement':([0,15,43,110,153,190,200,223,225,241,250,267,],[5,5,109,188,109,109,5,109,188,188,5,188,]),'parameter':([104,105,231,309,],[163,163,270,163,]),'result':([14,22,],[94,102,]),'result_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'character_mode':([106,119,157,168,236,245,286,289,306,307,323,],[172,172,172,172,172,172,172,172,172,172,172,]),'array_location':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'string_length':([238,],[280,]),'operator1':([87,],[139,]),'call_action':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[41,89,89,41,89,41,89,89,89,89,89,89,89,89,89,41,89,41,89,89,89,89,41,41,41,41,89,89,89,89,89,41,41,89,89,89,89,89,41,89,41,89,89,89,41,89,89,89,89,89,89,89,]),'declaration':([39,187,],[107,240,]),'integer_mode':([106,119,157,168,236,245,286,289,306,307,323,],[174,174,174,174,174,174,174,174,174,174,174,]),'left_element':([103,],[158,]),'operand4':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[67,67,67,67,67,67,67,135,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'boolean_expression':([11,65,115,221,260,302,],[93,126,197,265,300,327,]),'discrete_range_mode':([106,119,157,168,236,245,286,289,306,307,323,],[175,175,175,175,175,175,175,175,175,175,175,]),'statement_list':([0,200,],[15,250,]),'primitive_value':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression':([11,14,22,56,58,61,65,103,104,105,115,127,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[90,95,95,121,123,125,90,161,165,165,90,217,254,256,257,262,90,161,165,274,274,274,285,299,90,256,90,274,256,334,161,285,285,]),'identifier_list':([18,39,46,118,155,187,247,322,],[101,106,119,119,101,106,289,289,]),'index_mode_list':([236,],[272,]),'discrete_expression':([243,317,336,],[284,338,343,]),'right_element':([229,],[269,]),'mode_name':([106,119,157,168,289,307,323,],[179,179,179,179,179,179,179,]),'newmode_list':([18,],[98,]),'integer_expression':([103,127,229,314,],[159,216,268,335,]),'action_statement_list':([43,153,190,223,],[110,225,241,267,]),'identifier':([0,7,11,14,15,18,22,39,43,46,56,58,61,65,75,83,103,104,105,106,110,113,115,117,118,119,127,132,139,148,153,155,156,157,168,187,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,245,247,250,259,260,263,267,286,289,302,306,307,308,309,314,317,322,323,336,],[23,47,78,78,23,99,78,99,23,99,78,78,78,78,78,78,78,78,78,184,23,195,78,202,99,184,78,78,78,78,23,99,227,184,184,99,23,202,23,78,78,78,78,78,23,23,78,78,276,78,78,23,78,288,99,23,78,78,78,23,288,184,78,276,184,78,78,78,78,99,184,78,]),'elsif_expression':([213,],[261,]),'operand1':([11,14,22,56,58,61,65,103,104,105,115,127,139,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[79,79,79,79,79,79,79,79,79,79,79,79,219,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'empty_literal':([11,14,22,56,58,61,65,83,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[16,16,16,16,201,16,16,201,16,16,16,16,16,16,]),'reference_mode':([106,119,157,168,289,307,323,],[185,185,185,185,185,185,185,]),'end_value':([283,316,],[313,337,]),'array_mode':([106,119,157,168,289,307,323,],[182,182,182,182,182,182,182,]),'mode':([106,119,157,168,289,307,323,],[169,206,228,234,319,331,341,]),'upper_bound':([209,263,308,],[255,303,333,]),'arithmetic_additive_operator':([79,219,],[131,131,]),'monadic_operator':([11,14,22,56,58,61,65,103,104,105,115,127,132,139,148,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'dereferenced_reference':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'newmode_statement':([0,15,200,250,],[30,30,30,30,]),'else_clause':([152,304,],[222,329,]),'step_enumeration':([113,],[196,]),'return_action':([0,15,43,110,117,153,190,198,200,223,225,241,250,267,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'string_element':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'lower_bound':([58,127,236,237,239,306,309,],[122,215,275,275,275,275,275,]),'procedure_definition':([117,],[203,]),'start_element':([103,],[160,]),'while_control':([43,193,],[114,246,]),'declaration_list':([39,],[108,]),'expression_list':([58,],[124,]),'parenthesis_gambiarra':([199,],[248,]),'procedure_call':([0,11,14,15,22,43,56,58,61,65,75,83,103,104,105,110,115,117,127,132,139,148,153,190,198,200,207,209,210,214,221,223,225,229,231,236,237,239,241,243,250,259,260,263,267,302,306,308,309,314,317,336,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'parameter_list':([104,105,309,],[164,167,164,]),'iteration':([113,],[192,]),'arithmetic_multiplicative_operator':([91,218,],[148,148,]),'synonym_list':([46,],[118,]),'index_mode':([236,306,],[277,330,]),'step_value':([283,],[316,]),'declaration_statement':([0,15,200,250,],[44,44,44,44,]),'operand2':([11,14,22,56,58,61,65,103,104,105,115,127,132,139,207,209,210,214,221,229,231,236,237,239,243,259,260,263,302,306,308,309,314,317,336,],[91,91,91,91,91,91,91,91,91,91,91,91,218,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'label_id':([0,7,15,43,110,153,190,200,223,225,241,250,267,],[45,48,45,116,116,116,116,45,116,116,116,45,116,]),'closed_dyadic_operator':([8,],[55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',29),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',30),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',41),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',46),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',51),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',52),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',59),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',60),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',82),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',97),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',98),
  ('synonym_definition -> identifier_list initialization','synonym_definition',2,'p_synonym_definition','parser.py',105),
  ('synonym_definition -> identifier_list mode initialization','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',118),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',132),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',138),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',139),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',141),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',146),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',154),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',159),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',164),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',169),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',177),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',187),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',192),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',198),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',204),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',216),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',222),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',228),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',234),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',235),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',242),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',243),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',248),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',254),
  ('location -> identifier','location',1,'p_location','parser.py',260),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',261),
  ('location -> string_element','location',1,'p_location','parser.py',262),
  ('location -> string_slice','location',1,'p_location','parser.py',263),
  ('location -> array_element','location',1,'p_location','parser.py',264),
  ('location -> array_slice','location',1,'p_location','parser.py',265),
  ('location -> call_action','location',1,'p_location','parser.py',266),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',271),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',277),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',283),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',289),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',299),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',305),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',311),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',317),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',318),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',325),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',331),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',337),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',338),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',339),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',340),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',346),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',347),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',348),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',349),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',350),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',355),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',361),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',362),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',369),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',375),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',382),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',388),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',394),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',400),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',406),
  ('expression -> operand0','expression',1,'p_expression','parser.py',413),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',414),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',441),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',447),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',448),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',458),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',465),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',466),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',471),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',472),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',473),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',474),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',478),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',483),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',488),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',489),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',497),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',498),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',503),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',504),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',510),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',514),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',515),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',522),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',523),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',524),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',529),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',530),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',538),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',539),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',544),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',545),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',546),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',551),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',556),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',557),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',566),
  ('action -> bracketed_action','action',1,'p_action','parser.py',571),
  ('action -> assignment_action','action',1,'p_action','parser.py',572),
  ('action -> call_action','action',1,'p_action','parser.py',573),
  ('action -> exit_action','action',1,'p_action','parser.py',574),
  ('action -> return_action','action',1,'p_action','parser.py',575),
  ('action -> result_action','action',1,'p_action','parser.py',576),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',581),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',582),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',587),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',606),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',607),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',612),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',613),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',614),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',615),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',616),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',621),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',622),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',631),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',632),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',641),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',642),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',649),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',650),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',651),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',652),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',667),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',668),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',669),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',670),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',684),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',685),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',686),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',695),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',700),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',701),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',706),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',707),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',714),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',719),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',724),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',729),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',730),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',738),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',743),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',744),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',751),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',756),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',761),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',769),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',777),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',797),
  ('result -> expression','result',1,'p_result','parser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',806),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',807),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',814),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',815),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',816),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',817),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',818),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',819),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',820),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',821),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',825),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',829),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',830),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',837),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',838),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',846),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',847),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',854),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',855),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',862),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',866),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',867),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',879),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',880),
]
