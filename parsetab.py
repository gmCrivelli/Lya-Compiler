
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST LOC FOR NUM END IN READ EXIT BOOL WHILE DCL LENGTH UPPER IF RESULT ELSIF PRINT ELSE TRUE NULL REF LOWER DOWN THEN RETURNS RETURN SYN ABS BY PROC CHAR FALSE ASC DO FI CHARS INT ARRAY TYPE TO ODprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'OR':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,164,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'DIVCREASE':([2,8,18,21,27,29,32,34,35,65,109,132,188,206,233,235,307,],[-56,-178,-59,-60,-57,-179,-17,-58,105,-56,-61,-180,-191,-181,-192,-62,-65,]),'DO':([0,1,5,9,10,22,24,25,26,49,50,61,100,117,119,127,128,133,138,185,193,199,201,228,230,242,243,245,273,279,308,],[1,1,-7,-8,1,-5,-2,-6,-4,-151,1,-3,-128,1,1,-152,1,-24,-18,1,-9,1,1,1,1,-201,-129,1,1,-204,-205,]),'LOC':([32,139,140,141,142,143,145,146,147,148,149,150,151,154,155,216,294,295,296,310,321,322,329,],[-17,-32,-30,-41,-36,-29,-35,-33,-34,-46,-38,-31,-47,-28,-37,-45,-39,-40,-48,330,-54,-49,335,]),'BOOL':([32,56,60,114,136,153,205,209,218,247,284,298,299,309,],[-17,-15,155,155,155,155,155,-16,155,155,155,155,155,155,]),'FALSE':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[70,70,70,70,70,70,-122,70,-123,70,70,70,-146,70,-145,-143,-141,-144,-142,-140,70,-119,-117,70,-118,-100,-97,-99,-101,-107,70,-102,-106,-104,-98,-103,-105,70,-114,-112,70,-110,-111,-113,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'IN':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,121,125,132,158,184,188,203,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,168,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-169,205,-180,-127,-121,-191,247,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'TYPE':([0,5,9,10,22,24,25,26,61,100,133,138,193,199,242,243,245,279,308,],[3,-7,-8,3,-5,-2,-6,-4,-3,-128,-24,-18,-9,3,-201,-129,3,-204,-205,]),'WHILE':([1,8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,120,122,123,124,132,139,142,145,146,147,149,155,158,184,188,206,221,222,226,227,233,235,248,252,270,287,292,294,295,303,307,314,318,324,327,332,],[45,-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-165,-166,45,-164,-180,-32,-36,-35,-33,-34,-38,-37,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-174,-175,-82,-176,-167,-39,-40,-88,-65,-168,-172,-89,-83,-173,]),'DIFF':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,170,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'SCONST':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[67,67,67,67,67,67,-122,67,-123,67,67,67,-146,67,-145,-143,-141,-144,-142,-140,67,-119,-117,67,-118,-100,-97,-99,-101,-107,67,-102,-106,-104,-98,-103,-105,67,-114,-112,67,-110,-111,-113,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'OD':([1,49,50,100,119,127,201,243,],[46,-151,126,-128,200,-152,246,-129,]),'UPPER':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[4,4,-7,-8,4,4,4,-5,-2,-6,-4,4,4,-151,4,4,-3,4,4,-122,4,-123,4,4,-128,4,-146,4,-145,-143,-141,-144,-142,-140,4,4,-152,4,-24,-18,4,-119,-117,4,-118,-100,-97,-99,-101,-107,4,-102,-106,-104,-98,-103,-105,4,-114,-112,4,-110,-111,-113,4,-9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-201,-129,4,4,4,4,4,-204,4,4,4,4,4,4,-205,4,]),'END':([5,9,22,24,25,26,61,100,133,138,193,199,242,243,245,279,308,],[-7,-8,-5,-2,-6,-4,-3,-128,-24,-18,-9,244,-201,-129,286,-204,-205,]),'SYN':([0,5,9,10,22,24,25,26,61,100,133,138,193,199,242,243,245,279,308,],[7,-7,-8,7,-5,-2,-6,-4,-3,-128,-24,-18,-9,7,-201,-129,7,-204,-205,]),'GREATER':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,174,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'LESS':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,175,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'IF':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,71,86,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,176,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[16,16,-7,-8,16,71,71,-5,-2,-6,-4,71,71,-151,16,71,-3,71,71,71,-128,71,-146,71,-145,-143,-141,-144,-142,-140,16,16,-152,16,-24,-18,71,71,16,-9,16,16,71,71,71,71,71,71,71,16,16,71,71,71,71,-201,-129,16,71,71,71,16,-204,71,71,71,71,71,71,-205,71,]),'FOR':([1,],[48,]),'LESSEQ':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,171,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'$end':([5,9,10,17,22,24,25,26,61,100,133,138,193,242,243,],[-7,-8,-1,0,-5,-2,-6,-4,-3,-128,-24,-18,-9,-201,-129,]),'TIMES':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,80,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,161,-74,-80,-67,-78,-73,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,161,-85,-192,-62,-56,-82,-65,-83,]),'STRCAT':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-73,177,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,177,-109,-85,-192,-62,-56,-82,-65,-83,]),'DOWN':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,121,125,132,158,184,188,206,221,222,226,227,233,235,248,249,250,270,288,303,307,316,317,324,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-169,203,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-174,-170,289,-82,289,-88,-65,-55,-171,-89,-83,]),'FI':([8,18,27,29,32,34,49,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,100,109,127,132,158,184,185,186,188,206,221,222,226,227,228,229,230,233,235,243,267,270,273,300,302,303,306,307,324,327,328,],[-178,-59,-57,-179,-17,-58,-151,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-128,-61,-152,-180,-127,-121,-149,231,-191,-181,-116,-96,-109,-85,-150,272,-153,-192,-62,-129,303,-82,-154,324,-92,-88,-155,-65,-89,-83,-156,]),'LOWER':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[40,40,-7,-8,40,40,40,-5,-2,-6,-4,40,40,-151,40,40,-3,40,40,-122,40,-123,40,40,-128,40,-146,40,-145,-143,-141,-144,-142,-140,40,40,-152,40,-24,-18,40,-119,-117,40,-118,-100,-97,-99,-101,-107,40,-102,-106,-104,-98,-103,-105,40,-114,-112,40,-110,-111,-113,40,-9,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-201,-129,40,40,40,40,40,-204,40,40,40,40,40,40,-205,40,]),'LENGTH':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[11,11,-7,-8,11,11,11,-5,-2,-6,-4,11,11,-151,11,11,-3,11,11,-122,11,-123,11,11,-128,11,-146,11,-145,-143,-141,-144,-142,-140,11,11,-152,11,-24,-18,11,-119,-117,11,-118,-100,-97,-99,-101,-107,11,-102,-106,-104,-98,-103,-105,11,-114,-112,11,-110,-111,-113,11,-9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-201,-129,11,11,11,11,11,-204,11,11,11,11,11,11,-205,11,]),'DIVIDE':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,80,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,163,-74,-80,-67,-78,-73,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,163,-85,-192,-62,-56,-82,-65,-83,]),'INCREASE':([2,8,18,21,27,29,32,34,35,65,109,132,188,206,233,235,307,],[-56,-178,-59,-60,-57,-179,-17,-58,110,-56,-61,-180,-191,-181,-192,-62,-65,]),'RETURNS':([240,282,312,],[281,-206,-207,]),'MOD':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,80,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,160,-74,-80,-67,-78,-73,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,160,-85,-192,-62,-56,-82,-65,-83,]),'ICONST':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,217,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[84,84,84,84,84,84,-122,84,-123,84,84,84,-146,84,-145,-143,-141,-144,-142,-140,84,-119,-117,84,-118,-100,-97,-99,-101,-107,84,-102,-106,-104,-98,-103,-105,84,-114,-112,84,-110,-111,-113,84,84,84,84,84,259,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'DECREASE':([2,8,18,21,27,29,32,34,35,65,109,132,188,206,233,235,307,],[-56,-178,-59,-60,-57,-179,-17,-58,106,-56,-61,-180,-191,-181,-192,-62,-65,]),'PROC':([117,],[196,]),'EQUAL':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,167,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'READ':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[20,20,-7,-8,20,20,20,-5,-2,-6,-4,20,20,-151,20,20,-3,20,20,-122,20,-123,20,20,-128,20,-146,20,-145,-143,-141,-144,-142,-140,20,20,-152,20,-24,-18,20,-119,-117,20,-118,-100,-97,-99,-101,-107,20,-102,-106,-104,-98,-103,-105,20,-114,-112,20,-110,-111,-113,20,-9,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-201,-129,20,20,20,20,20,-204,20,20,20,20,20,20,-205,20,]),'ARRAY':([32,56,60,114,136,153,209,284,298,309,],[-17,-15,157,157,157,157,-16,157,157,157,]),'MINUS':([8,12,16,18,27,29,31,32,34,45,53,62,65,66,67,68,70,71,73,74,75,76,77,78,80,82,83,84,85,86,87,88,90,91,92,93,95,99,102,103,104,105,106,107,108,109,110,111,132,152,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,188,204,206,207,211,212,213,218,220,221,222,226,227,232,233,234,235,236,239,260,266,268,270,271,290,291,293,297,299,301,307,315,327,],[-178,72,72,-59,-57,-179,72,-17,-58,72,72,-72,-56,-125,-81,-69,-77,72,-75,-108,-74,-80,-67,-78,-73,182,-120,-76,-71,72,-126,-79,-115,-70,-124,-60,-68,72,72,-146,72,-145,-143,-141,-144,-61,-142,-140,-180,72,-127,-119,-117,72,-118,-100,-97,-99,-101,-107,72,-102,-106,-104,-98,-103,-105,72,-114,-112,72,-110,-111,-113,-121,-191,72,-181,72,72,72,72,72,72,-116,182,-109,-85,72,-192,72,-62,72,72,-56,72,72,-82,72,72,72,72,72,72,72,-65,72,-83,]),'COMMA':([8,18,27,29,32,34,54,55,56,57,60,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,112,113,114,129,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,154,155,158,184,187,188,189,191,195,206,208,209,210,216,221,222,226,227,233,235,237,238,253,261,262,263,264,270,275,277,278,283,284,285,294,295,296,303,307,310,311,319,320,321,322,323,324,327,330,331,],[-178,-59,-57,-179,-17,-58,134,-25,-15,135,135,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-10,194,135,-184,-182,207,-180,-32,-30,-41,-36,-29,-35,-33,-34,-46,-38,-31,-47,-28,-37,-127,-121,207,-191,-63,236,-12,-181,-26,-16,-27,-45,-116,-96,-109,-85,-192,-62,-11,-13,-183,299,-50,-52,-53,-82,-44,-64,-14,-208,135,313,-39,-40,-48,-88,-65,-211,-210,-42,-184,-54,-49,-51,-89,-83,-212,-209,]),'RBRACKET':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,132,139,142,145,146,147,149,155,158,184,188,189,191,206,221,222,223,224,226,227,233,235,259,261,262,263,264,270,275,276,277,294,295,303,305,307,319,323,324,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-180,-32,-36,-35,-33,-34,-38,-37,-127,-121,-191,-63,235,-181,-116,-96,-55,270,-109,-85,-192,-62,296,298,-50,-52,-53,-82,-44,307,-64,-39,-40,-88,327,-65,-42,-51,-89,-83,]),'ELSE':([8,18,27,29,32,34,49,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,100,109,127,132,158,184,185,186,188,206,219,221,222,226,227,228,233,235,243,265,269,270,303,306,307,324,326,327,333,],[-178,-59,-57,-179,-17,-58,-151,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-128,-61,-152,-180,-127,-121,-149,230,-191,-181,266,-116,-96,-109,-85,-150,-192,-62,-129,266,-91,-82,-88,230,-65,-89,-93,-83,-94,]),'RESULT':([0,1,5,9,10,22,24,25,26,49,50,61,100,117,119,127,128,133,138,185,193,199,201,228,230,242,243,245,273,279,308,],[12,12,-7,-8,12,-5,-2,-6,-4,-151,12,-3,-128,12,12,-152,12,-24,-18,12,-9,12,12,12,12,-201,-129,12,12,-204,-205,]),'ABS':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[15,15,-7,-8,15,15,15,-5,-2,-6,-4,15,15,-151,15,15,-3,15,15,-122,15,-123,15,15,-128,15,-146,15,-145,-143,-141,-144,-142,-140,15,15,-152,15,-24,-18,15,-119,-117,15,-118,-100,-97,-99,-101,-107,15,-102,-106,-104,-98,-103,-105,15,-114,-112,15,-110,-111,-113,15,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-201,-129,15,15,15,15,15,-204,15,15,15,15,15,15,-205,15,]),'ARROW':([2,8,12,16,18,21,27,29,31,32,34,35,45,53,65,71,72,86,89,92,93,94,99,102,103,104,105,106,107,108,109,110,111,132,152,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,188,204,206,207,211,212,213,218,220,232,233,234,235,236,239,260,266,268,271,290,291,293,297,299,301,307,315,],[-56,-178,63,63,-59,-60,-57,-179,63,-17,-58,109,63,63,-56,63,-122,63,-123,109,-60,63,63,63,-146,63,-145,-143,-141,-144,-61,-142,-140,-180,63,109,-119,-117,63,-118,-100,-97,-99,-101,-107,63,-102,-106,-104,-98,-103,-105,63,-114,-112,63,-110,-111,-113,-191,63,-181,63,63,63,63,63,63,63,-192,63,-62,63,63,-56,63,63,63,63,63,63,63,63,63,-65,63,]),'ELSIF':([8,18,27,29,32,34,49,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,100,109,127,132,158,184,185,186,188,206,219,221,222,226,227,228,233,235,243,265,269,270,303,306,307,324,326,327,333,],[-178,-59,-57,-179,-17,-58,-151,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-128,-61,-152,-180,-127,-121,-149,232,-191,-181,268,-116,-96,-109,-85,-150,-192,-62,-129,301,-91,-82,-88,232,-65,-89,-93,-83,-94,]),'INT':([32,56,60,114,136,153,205,209,218,247,284,298,299,309,],[-17,-15,142,142,142,142,142,-16,142,142,142,142,142,142,]),'LBRACKET':([2,8,18,21,27,29,32,33,34,35,62,65,67,68,70,73,75,76,77,78,80,81,84,85,87,88,91,92,93,95,109,132,156,157,158,188,206,227,233,235,260,270,307,327,],[-56,-178,-59,-60,-57,-179,-17,102,-58,-66,-72,-56,-81,-69,-77,-75,-74,-80,-67,-78,-73,176,-76,-71,-84,-79,-70,-66,-60,-68,-61,-180,217,218,-66,-191,-181,-85,-192,-62,-56,-82,-65,-83,]),'RPAREN':([8,18,27,29,32,34,53,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,99,109,129,130,131,132,139,140,141,142,143,145,146,147,148,149,150,151,154,155,158,183,184,187,188,206,216,221,222,226,227,233,235,241,253,256,257,270,275,283,285,294,295,296,297,303,307,310,311,319,320,321,322,324,327,329,330,331,335,],[-178,-59,-57,-179,-17,-58,132,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,188,-61,-184,-182,206,-180,-32,-30,-41,-36,-29,-35,-33,-34,-46,-38,-31,-47,-28,-37,-127,227,-121,233,-191,-181,-45,-116,-96,-109,-85,-192,-62,282,-183,294,295,-82,-44,-208,312,-39,-40,-48,132,-88,-65,-211,-210,-42,-184,-54,-49,-89,-83,334,-212,-209,336,]),'SEMI':([6,8,13,18,19,21,23,27,29,30,31,32,34,36,37,41,46,47,51,54,55,58,59,62,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,97,101,109,112,113,115,116,118,120,122,123,124,126,132,137,139,140,141,142,143,145,146,147,148,149,150,151,154,155,158,184,188,192,195,197,198,200,202,206,208,210,214,215,216,221,222,226,227,231,233,235,237,238,240,244,246,248,252,258,270,272,278,280,282,286,287,292,294,295,296,303,307,312,314,318,321,322,324,327,332,334,336,],[-135,-178,-134,-59,-136,-133,-131,-57,-179,100,-187,-17,-58,-132,-137,-138,-157,119,-161,133,-25,138,-19,-72,-190,-56,-125,-81,-69,-189,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-90,-188,-61,-10,193,-186,-185,-177,-165,-166,-162,-164,-159,-180,-20,-32,-30,-41,-36,-29,-35,-33,-34,-46,-38,-31,-47,-28,-37,-127,-121,-191,-139,-12,242,243,-158,-163,-181,-26,-27,-23,-21,-45,-116,-96,-109,-85,-147,-192,-62,-11,-13,279,-202,-160,-174,-175,-22,-82,-148,-14,308,-206,-203,-176,-167,-39,-40,-48,-88,-65,-207,-168,-172,-54,-49,-89,-83,-173,-213,-214,]),'BY':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,132,158,184,188,206,221,222,226,227,233,235,248,249,250,270,303,307,324,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-174,-170,290,-82,-88,-65,-89,-83,]),'CCONST':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[88,88,88,88,88,88,-122,88,-123,88,88,88,-146,88,-145,-143,-141,-144,-142,-140,88,-119,-117,88,-118,-100,-97,-99,-101,-107,88,-102,-106,-104,-98,-103,-105,88,-114,-112,88,-110,-111,-113,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'MULCREASE':([2,8,18,21,27,29,32,34,35,65,109,132,188,206,233,235,307,],[-56,-178,-59,-60,-57,-179,-17,-58,108,-56,-61,-180,-191,-181,-192,-62,-65,]),'EXIT':([0,1,5,9,10,22,24,25,26,49,50,61,100,117,119,127,128,133,138,185,193,199,201,228,230,242,243,245,273,279,308,],[42,42,-7,-8,42,-5,-2,-6,-4,-151,42,-3,-128,42,42,-152,42,-24,-18,42,-9,42,42,42,42,-201,-129,42,42,-204,-205,]),'NULL':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[76,76,76,76,76,76,-122,76,-123,76,76,76,-146,76,-145,-143,-141,-144,-142,-140,76,-119,-117,76,-118,-100,-97,-99,-101,-107,76,-102,-106,-104,-98,-103,-105,76,-114,-112,76,-110,-111,-113,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PRINT':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[14,14,-7,-8,14,14,14,-5,-2,-6,-4,14,14,-151,14,14,-3,14,14,-122,14,-123,14,14,-128,14,-146,14,-145,-143,-141,-144,-142,-140,14,14,-152,14,-24,-18,14,-119,-117,14,-118,-100,-97,-99,-101,-107,14,-102,-106,-104,-98,-103,-105,14,-114,-112,14,-110,-111,-113,14,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-201,-129,14,14,14,14,14,-204,14,14,14,14,14,14,-205,14,]),'TRUE':([12,16,31,45,53,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[78,78,78,78,78,78,-122,78,-123,78,78,78,-146,78,-145,-143,-141,-144,-142,-140,78,-119,-117,78,-118,-100,-97,-99,-101,-107,78,-102,-106,-104,-98,-103,-105,78,-114,-112,78,-110,-111,-113,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RETURN':([0,1,5,9,10,22,24,25,26,49,50,61,100,117,119,127,128,133,138,185,193,199,201,228,230,242,243,245,273,279,308,],[31,31,-7,-8,31,-5,-2,-6,-4,-151,31,-3,-128,31,31,-152,31,-24,-18,31,-9,31,31,31,31,-201,-129,31,31,-204,-205,]),'AND':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,166,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),'COLON':([2,8,18,27,29,32,34,43,52,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,132,158,184,188,189,190,206,221,222,223,225,226,227,233,235,254,255,260,270,303,307,320,324,327,],[-130,-178,-59,-57,-179,-17,-58,117,128,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-180,-127,-121,-191,-43,234,-181,-116,-96,-43,271,-109,-85,-192,-62,-43,293,-56,-82,-88,-65,-43,-89,-83,]),'LPAREN':([2,4,11,12,14,15,16,20,28,31,32,38,40,44,45,53,65,71,72,86,89,94,99,102,103,104,105,106,107,108,110,111,139,141,142,143,145,146,147,149,152,155,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,196,204,207,211,212,213,218,220,232,234,236,239,251,252,260,263,266,268,271,281,287,290,291,293,294,295,297,299,301,315,],[53,-196,-198,86,-200,-193,86,-199,99,86,-17,-194,-197,-195,86,86,53,86,-122,86,-123,86,86,86,-146,86,-145,-143,-141,-144,-142,-140,-32,211,-36,212,-35,-33,-34,-38,86,-37,-119,-117,86,-118,-100,-97,-99,-101,-107,86,-102,-106,-104,-98,-103,-105,86,-114,-112,86,-110,-111,-113,241,86,86,86,86,86,86,86,86,86,86,86,211,212,297,212,86,86,86,309,212,86,86,86,-39,-40,86,86,86,86,]),'CHAR':([32,56,60,114,136,153,205,209,218,247,284,298,299,309,],[-17,-15,149,149,149,149,149,-16,149,149,149,149,149,149,]),'MODCREASE':([2,8,18,21,27,29,32,34,35,65,109,132,188,206,233,235,307,],[-56,-178,-59,-60,-57,-179,-17,-58,103,-56,-61,-180,-191,-181,-192,-62,-65,]),'TO':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,109,132,158,184,188,206,221,222,226,227,233,235,248,249,250,270,288,289,303,307,316,317,324,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-174,-170,291,-82,291,315,-88,-65,-55,-171,-89,-83,]),'ASSIGN':([2,8,18,21,27,29,32,34,35,56,57,60,65,109,121,125,132,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,188,195,206,209,216,233,235,294,295,296,307,321,322,],[-56,-178,-59,-60,-57,-179,-17,-58,111,-15,136,152,-56,-61,-169,204,-180,-32,-30,-41,-36,-29,213,-35,-33,-34,-46,-38,-31,-47,-28,-37,-191,239,-181,-16,-45,-192,-62,-39,-40,-48,-65,-54,-49,]),'REF':([32,56,60,114,136,153,209,284,298,309,],[-17,-15,153,153,153,153,-16,153,153,153,]),'ASC':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[38,38,-7,-8,38,38,38,-5,-2,-6,-4,38,38,-151,38,38,-3,38,38,-122,38,-123,38,38,-128,38,-146,38,-145,-143,-141,-144,-142,-140,38,38,-152,38,-24,-18,38,-119,-117,38,-118,-100,-97,-99,-101,-107,38,-102,-106,-104,-98,-103,-105,38,-114,-112,38,-110,-111,-113,38,-9,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-201,-129,38,38,38,38,38,-204,38,38,38,38,38,38,-205,38,]),'PLUS':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-73,178,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,178,-109,-85,-192,-62,-56,-82,-65,-83,]),'DCL':([0,5,9,10,22,24,25,26,61,100,133,138,193,199,242,243,245,279,308,],[39,-7,-8,39,-5,-2,-6,-4,-3,-128,-24,-18,-9,39,-201,-129,39,-204,-205,]),'NOT':([12,16,31,45,53,71,86,99,102,103,104,105,106,107,108,110,111,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[89,89,89,89,89,89,89,89,89,-146,89,-145,-143,-141,-144,-142,-140,89,-119,-117,89,-118,-100,-97,-99,-101,-107,89,-102,-106,-104,-98,-103,-105,89,-114,-112,89,-110,-111,-113,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'CHARS':([32,56,60,114,136,153,209,284,298,309,],[-17,-15,156,156,156,156,-16,156,156,156,]),'THEN':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,96,97,98,109,132,158,159,184,188,206,221,222,226,227,233,235,270,274,303,304,307,324,325,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-87,-90,185,-61,-180,-127,220,-121,-191,-181,-116,-96,-109,-85,-192,-62,-82,185,-88,220,-65,-89,220,-83,]),'ID':([0,1,3,5,7,8,9,10,12,16,18,22,24,25,26,27,29,31,32,34,39,42,45,48,49,50,53,56,58,59,60,61,62,63,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,102,103,104,105,106,107,108,109,110,111,114,117,119,127,128,132,133,134,135,136,137,138,152,153,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,188,193,194,199,201,204,205,206,207,209,211,212,213,214,215,218,220,221,222,226,227,228,230,232,233,234,235,236,239,241,242,243,245,247,258,266,268,270,271,273,279,284,290,291,293,297,298,299,301,303,307,308,309,313,315,324,327,],[32,32,32,-7,32,-178,-8,32,32,32,-59,-5,-2,-6,-4,-57,-179,32,-17,-58,32,32,32,32,-151,32,32,-15,32,-19,32,-3,-72,32,-56,-125,-81,-69,-77,32,-122,-75,-108,-74,-80,-67,-78,-86,-73,-95,-120,-76,-71,32,-126,-79,-123,-115,-70,-124,-60,32,-68,-87,32,-128,32,-146,32,-145,-143,-141,-144,-61,-142,-140,32,32,32,-152,32,-180,-24,32,32,32,-20,-18,32,32,-127,-119,-117,32,-118,-100,-97,-99,-101,-107,32,-102,-106,-104,-98,-103,-105,32,-114,-112,32,-110,-111,-113,-121,32,-191,-9,32,32,32,32,32,-181,32,-16,32,32,32,-23,-21,32,32,-116,-96,-109,-85,32,32,32,-192,32,-62,32,32,32,-201,-129,32,32,-22,32,32,-82,32,32,-204,32,32,32,32,32,32,32,32,-88,-65,-205,32,32,32,-89,-83,]),'NUM':([0,1,5,9,10,12,16,22,24,25,26,31,45,49,50,53,61,63,71,72,86,89,94,99,100,102,103,104,105,106,107,108,110,111,117,119,127,128,133,138,152,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,193,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,242,243,245,266,268,271,273,279,290,291,293,297,299,301,308,315,],[44,44,-7,-8,44,44,44,-5,-2,-6,-4,44,44,-151,44,44,-3,44,44,-122,44,-123,44,44,-128,44,-146,44,-145,-143,-141,-144,-142,-140,44,44,-152,44,-24,-18,44,-119,-117,44,-118,-100,-97,-99,-101,-107,44,-102,-106,-104,-98,-103,-105,44,-114,-112,44,-110,-111,-113,44,-9,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-201,-129,44,44,44,44,44,-204,44,44,44,44,44,44,-205,44,]),'GREATEREQ':([8,18,27,29,32,34,62,65,66,67,68,70,73,74,75,76,77,78,79,80,82,83,84,85,87,88,90,91,92,93,95,109,132,158,184,188,206,221,222,226,227,233,235,260,270,307,327,],[-178,-59,-57,-179,-17,-58,-72,-56,-125,-81,-69,-77,-75,-108,-74,-80,-67,-78,172,-73,-95,-120,-76,-71,-126,-79,-115,-70,-124,-60,-68,-61,-180,-127,-121,-191,-181,-116,-96,-109,-85,-192,-62,-56,-82,-65,-83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'exit_label_id':([42,],[116,]),'discrete_range_mode':([60,114,136,153,205,218,247,284,298,299,309,],[145,145,145,145,145,145,145,145,145,145,145,]),'array_location':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'relational_operator':([79,],[165,]),'identifier':([0,1,3,7,10,12,16,31,39,42,45,48,50,53,58,60,63,71,86,94,99,102,104,114,117,119,128,134,135,136,152,153,162,169,176,179,185,194,199,201,204,205,207,211,212,213,218,220,228,230,232,234,236,239,241,245,247,266,268,271,273,284,290,291,293,297,298,299,301,309,313,315,],[2,2,56,56,2,65,65,65,56,115,65,121,2,65,56,141,65,65,65,65,65,65,65,141,65,2,65,56,209,141,65,141,65,65,65,65,2,56,2,2,65,251,65,65,65,65,260,65,2,2,65,65,65,65,56,2,251,65,65,65,2,141,65,65,65,65,141,260,65,141,56,65,]),'arithmetic_multiplicative_operator':([74,226,],[162,162,]),'declaration_statement':([0,10,199,245,],[26,26,26,26,]),'boolean_expression':([16,45,71,232,268,301,],[98,118,159,274,304,325,]),'iteration':([48,],[124,]),'mode':([60,114,136,153,284,298,309,],[144,195,210,216,310,321,329,]),'else_expression':([219,265,],[267,300,]),'value_array_slice':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'then_expression':([159,304,325,],[219,326,333,]),'then_clause':([98,274,],[186,306,]),'control_part':([1,],[47,]),'upper_bound':([234,271,293,],[276,305,319,]),'action_statement':([0,1,10,50,119,185,199,201,228,230,245,273,],[9,49,9,127,49,49,9,127,127,49,9,127,]),'index_mode_list':([218,],[261,]),'builtin_call':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'range_enumeration':([48,],[122,]),'parameter_spec':([284,],[311,]),'program':([0,],[17,]),'mode_name':([60,114,136,153,284,298,309,],[154,154,154,154,154,154,154,]),'for_control':([48,],[123,]),'result_spec':([240,],[280,]),'operand0':([12,16,31,45,53,71,86,99,102,104,152,176,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'character_literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'action_statement_list':([1,119,185,230,],[50,201,228,273,]),'bracketed_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'step_enumeration':([48,],[120,]),'procedure_definition':([117,],[197,]),'operand4':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[83,83,83,83,83,83,83,184,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'string_concatenation_operator':([82,222,],[181,181,]),'assigning_operator':([35,],[104,]),'discrete_mode':([60,114,136,153,205,218,247,284,298,299,309,],[143,143,143,143,252,263,287,143,143,263,143,]),'mode_definition':([3,134,],[55,208,]),'membership_operator':([79,],[173,]),'constant_expression':([152,213,],[215,258,]),'loop_counter':([48,],[125,]),'arithmetic_additive_operator':([82,222,],[180,180,]),'operand3':([12,16,31,45,53,71,86,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[90,90,90,90,90,90,90,90,90,90,90,221,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'result':([12,31,],[69,101,]),'closed_dyadic_operator':([35,],[107,]),'composite_mode':([60,114,136,153,284,298,309,],[150,150,150,150,150,150,150,]),'monadic_operator':([12,16,31,45,53,71,86,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assignment_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'parenthesis_gambiarra':([196,],[240,]),'formal_procedure_head':([117,],[199,]),'string_mode':([60,114,136,153,284,298,309,],[148,148,148,148,148,148,148,]),'conditional_expression':([12,16,31,45,53,71,86,99,102,104,152,176,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'elsif_expression':([219,],[265,]),'discrete_expression':([204,291,315,],[249,318,332,]),'initialization':([195,],[238,]),'referenced_location':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'newmode_list':([3,],[54,]),'synonym_list':([7,],[58,]),'formal_parameter_list':([241,],[285,]),'procedure_statement':([0,10,199,245,],[5,5,5,5,]),'integer_literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'procedure_call':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'statement_list':([0,199,],[10,245,]),'empty_literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_mode':([60,114,136,153,205,218,247,284,298,299,309,],[147,147,147,147,147,147,147,147,147,147,147,]),'integer_expression':([176,290,],[224,317,]),'character_string_literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'start_value':([204,],[250,]),'if_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'operand2':([12,16,31,45,53,71,86,99,102,104,152,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[74,74,74,74,74,74,74,74,74,74,74,74,74,226,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'formal_parameter':([241,313,],[283,331,]),'exit_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'step_value':([250,],[288,]),'identifier_list':([3,7,39,58,134,194,241,313,],[57,60,114,60,57,114,284,284,]),'array_slice':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'integer_mode':([60,114,136,153,205,218,247,284,298,299,309,],[139,139,139,139,139,139,139,139,139,139,139,]),'result_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'element_mode':([298,],[322,]),'operand1':([12,16,31,45,53,71,86,99,102,104,152,169,176,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[82,82,82,82,82,82,82,82,82,82,82,222,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'literal_range':([211,212,218,297,299,],[256,257,264,256,264,]),'boolean_mode':([60,114,136,153,205,218,247,284,298,299,309,],[146,146,146,146,146,146,146,146,146,146,146,]),'else_clause':([186,306,],[229,328,]),'call_action':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[21,21,21,93,93,93,93,21,93,93,93,93,93,93,93,93,21,21,21,93,93,93,93,93,21,21,21,93,93,93,93,93,93,93,21,21,93,93,93,93,21,93,93,93,21,93,93,93,93,93,93,93,]),'synonym_statement':([0,10,199,245,],[22,22,22,22,]),'parameter_list':([53,99,297,],[131,187,131,]),'return_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'reference_mode':([60,114,136,153,284,298,309,],[140,140,140,140,140,140,140,]),'array_primitive_value':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'statement':([0,10,199,245,],[24,61,24,61,]),'literal':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'parameter':([53,99,207,297,],[130,130,253,130,]),'lower_bound':([102,176,211,212,218,297,299,],[190,225,255,255,255,255,255,]),'builtin_name':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'newmode_statement':([0,10,199,245,],[25,25,25,25,]),'synonym_definition':([7,58,],[59,137,]),'operator2':([82,222,],[179,179,]),'primitive_value':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'dereferenced_reference':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[30,30,30,30,198,30,198,30,30,30,30,30,30,30,]),'index_mode':([218,299,],[262,323,]),'expression_list':([102,],[191,]),'while_control':([1,123,],[51,202,]),'parenthesized_expression':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'array_element':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'declaration_list':([39,],[113,]),'location':([0,1,10,12,16,31,45,50,53,63,71,86,94,99,102,104,117,119,128,152,162,169,176,179,185,199,201,204,207,211,212,213,218,220,228,230,232,234,236,239,245,266,268,271,273,290,291,293,297,299,301,315,],[35,35,35,92,92,92,92,35,92,158,92,92,92,92,92,92,35,35,35,92,92,92,92,92,35,35,35,92,92,92,92,92,92,92,35,35,92,92,92,92,35,92,92,92,35,92,92,92,92,92,92,92,]),'array_mode':([60,114,136,153,284,298,309,],[151,151,151,151,151,151,151,]),'operator1':([79,],[169,]),'declaration':([39,194,],[112,237,]),'value_array_element':([12,16,31,45,53,71,86,94,99,102,104,152,162,169,176,179,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'do_action':([0,1,10,50,117,119,128,185,199,201,228,230,245,273,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'expression':([12,16,31,45,53,71,86,99,102,104,152,176,204,207,211,212,213,218,220,232,234,236,239,266,268,271,290,291,293,297,299,301,315,],[64,97,64,97,129,97,183,129,189,192,214,223,248,129,254,254,214,254,269,97,275,277,278,302,97,275,316,248,275,320,254,97,248,]),'label_id':([0,1,10,50,119,185,199,201,228,230,245,273,],[43,52,43,52,52,52,43,52,52,52,43,52,]),'end_value':([250,288,],[292,314,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',423),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',424),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',433),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',439),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',445),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',469),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',470),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',487),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',492),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',493),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',501),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',502),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',507),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',514),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',518),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',519),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',526),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',533),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',534),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',542),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',548),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',550),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',555),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',560),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',561),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',570),
  ('action -> bracketed_action','action',1,'p_action','parser.py',576),
  ('action -> assignment_action','action',1,'p_action','parser.py',577),
  ('action -> call_action','action',1,'p_action','parser.py',578),
  ('action -> exit_action','action',1,'p_action','parser.py',579),
  ('action -> return_action','action',1,'p_action','parser.py',580),
  ('action -> result_action','action',1,'p_action','parser.py',581),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',586),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',592),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',611),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',617),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',626),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',627),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',636),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',637),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',646),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',647),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',654),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',655),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',657),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',672),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',673),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',674),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',675),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',689),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',691),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',700),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',705),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',711),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',712),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',719),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',724),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',729),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',734),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',735),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',743),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',748),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',749),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',756),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',760),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',761),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',766),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',767),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',774),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',775),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',782),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',790),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',794),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',798),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',799),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',806),
  ('result -> expression','result',1,'p_result','parser.py',810),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',815),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',816),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',823),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',830),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',834),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',838),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',839),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',846),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',847),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',855),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',856),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',863),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',871),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',875),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',876),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',888),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',889),
]
