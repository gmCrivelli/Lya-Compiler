
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST ARRAY BY CHARS DCL DO DOWN ELSE ELSIF END EXIT FI FOR IF IN LOC TYPE OD PROC REF RESULT RETURN RETURNS SYN THEN TO WHILE ABS ASC BOOL CHAR FALSE INT LENGTH LOWER NULL NUM PRINT READ TRUE UPPERprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list initialization\n                              | identifier_list mode initializationnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'DCL':([0,2,3,4,5,6,7,8,47,59,121,142,147,152,221,222,224,267,304,],[9,9,-2,-4,-5,-6,-7,-8,-3,-135,-9,-18,-23,9,-207,-136,9,-210,-211,]),'SYN':([0,2,3,4,5,6,7,8,47,59,121,142,147,152,221,222,224,267,304,],[10,10,-2,-4,-5,-6,-7,-8,-3,-135,-9,-18,-23,10,-207,-136,10,-210,-211,]),'TYPE':([0,2,3,4,5,6,7,8,47,59,121,142,147,152,221,222,224,267,304,],[11,11,-2,-4,-5,-6,-7,-8,-3,-135,-9,-18,-23,11,-207,-136,11,-210,-211,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,21,25,26,27,28,29,30,31,32,33,34,35,36,47,50,51,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,113,115,116,117,119,120,121,122,124,134,142,143,144,146,147,148,149,152,155,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,192,193,195,203,204,211,212,213,216,217,218,221,222,224,226,227,228,229,230,231,232,234,235,239,242,243,244,246,248,249,251,252,253,254,267,273,279,280,282,283,285,293,298,301,302,303,304,305,307,310,311,313,320,322,324,333,336,340,],[21,21,-2,-4,-5,-6,-7,-8,21,21,21,-17,-185,-186,21,21,21,21,21,-57,-58,-59,-60,-61,-3,21,-15,21,-19,21,21,-135,21,21,21,-63,-147,-148,-149,-150,-151,-152,-153,-93,-94,-102,21,-115,-122,-127,21,-131,-132,-133,-129,-130,-56,-62,21,-74,-75,-76,-77,-78,-79,-80,-81,-82,21,-83,-84,-85,-86,-87,-88,21,21,-158,21,21,21,-9,21,21,21,-18,-20,-21,21,-23,21,21,21,-187,21,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,21,-117,-118,-119,-120,-121,21,-124,-125,-126,-128,-134,21,21,21,-159,21,-197,-16,21,21,21,-22,-14,-207,-136,21,21,-188,21,-64,21,-103,-116,21,-123,-92,21,21,21,21,21,21,-198,-69,21,21,-210,21,21,21,-89,21,21,21,21,21,21,21,-211,21,21,-66,-95,21,21,21,-72,-96,-90,21,]),'EXIT':([0,2,3,4,5,6,7,8,31,47,58,59,113,116,121,142,147,152,192,193,195,203,221,222,224,242,244,246,267,285,304,],[27,27,-2,-4,-5,-6,-7,-8,27,-3,27,-135,27,-158,-9,-18,-23,27,27,27,-159,27,-207,-136,27,27,27,27,-210,27,-211,]),'RETURN':([0,2,3,4,5,6,7,8,31,47,58,59,113,116,121,142,147,152,192,193,195,203,221,222,224,242,244,246,267,285,304,],[28,28,-2,-4,-5,-6,-7,-8,28,-3,28,-135,28,-158,-9,-18,-23,28,28,28,-159,28,-207,-136,28,28,28,28,-210,28,-211,]),'RESULT':([0,2,3,4,5,6,7,8,31,47,58,59,113,116,121,142,147,152,192,193,195,203,221,222,224,242,244,246,267,285,304,],[29,29,-2,-4,-5,-6,-7,-8,29,-3,29,-135,29,-158,-9,-18,-23,29,29,29,-159,29,-207,-136,29,29,29,29,-210,29,-211,]),'IF':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,101,113,116,117,119,120,121,142,146,147,152,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[30,30,-2,-4,-5,-6,-7,-8,78,78,78,30,-3,30,-135,78,78,78,-147,-148,-149,-150,-151,-152,-153,78,78,30,-158,78,78,78,-9,-18,78,-23,30,78,30,30,-159,30,78,78,78,-207,-136,30,78,78,78,30,78,30,30,78,78,78,-210,78,78,78,30,78,78,78,-211,78,78,78,78,]),'DO':([0,2,3,4,5,6,7,8,31,47,58,59,113,116,121,142,147,152,192,193,195,203,221,222,224,242,244,246,267,285,304,],[31,31,-2,-4,-5,-6,-7,-8,31,-3,31,-135,31,-158,-9,-18,-23,31,31,31,-159,31,-207,-136,31,31,31,31,-210,31,-211,]),'ABS':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[39,39,-2,-4,-5,-6,-7,-8,39,39,39,39,-3,39,-135,39,39,39,-147,-148,-149,-150,-151,-152,-153,39,39,-129,-130,39,39,39,-158,39,39,39,-9,-18,39,-23,39,39,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,39,-117,-118,-119,-120,-121,39,-124,-125,-126,39,39,39,-159,39,39,39,39,-207,-136,39,39,39,39,39,39,39,39,39,39,39,-210,39,39,39,39,39,39,39,-211,39,39,39,39,]),'ASC':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[40,40,-2,-4,-5,-6,-7,-8,40,40,40,40,-3,40,-135,40,40,40,-147,-148,-149,-150,-151,-152,-153,40,40,-129,-130,40,40,40,-158,40,40,40,-9,-18,40,-23,40,40,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,40,-117,-118,-119,-120,-121,40,-124,-125,-126,40,40,40,-159,40,40,40,40,-207,-136,40,40,40,40,40,40,40,40,40,40,40,-210,40,40,40,40,40,40,40,-211,40,40,40,40,]),'NUM':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[41,41,-2,-4,-5,-6,-7,-8,41,41,41,41,-3,41,-135,41,41,41,-147,-148,-149,-150,-151,-152,-153,41,41,-129,-130,41,41,41,-158,41,41,41,-9,-18,41,-23,41,41,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,41,-117,-118,-119,-120,-121,41,-124,-125,-126,41,41,41,-159,41,41,41,41,-207,-136,41,41,41,41,41,41,41,41,41,41,41,-210,41,41,41,41,41,41,41,-211,41,41,41,41,]),'UPPER':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[42,42,-2,-4,-5,-6,-7,-8,42,42,42,42,-3,42,-135,42,42,42,-147,-148,-149,-150,-151,-152,-153,42,42,-129,-130,42,42,42,-158,42,42,42,-9,-18,42,-23,42,42,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,42,-117,-118,-119,-120,-121,42,-124,-125,-126,42,42,42,-159,42,42,42,42,-207,-136,42,42,42,42,42,42,42,42,42,42,42,-210,42,42,42,42,42,42,42,-211,42,42,42,42,]),'LOWER':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[43,43,-2,-4,-5,-6,-7,-8,43,43,43,43,-3,43,-135,43,43,43,-147,-148,-149,-150,-151,-152,-153,43,43,-129,-130,43,43,43,-158,43,43,43,-9,-18,43,-23,43,43,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,43,-117,-118,-119,-120,-121,43,-124,-125,-126,43,43,43,-159,43,43,43,43,-207,-136,43,43,43,43,43,43,43,43,43,43,43,-210,43,43,43,43,43,43,43,-211,43,43,43,43,]),'LENGTH':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[44,44,-2,-4,-5,-6,-7,-8,44,44,44,44,-3,44,-135,44,44,44,-147,-148,-149,-150,-151,-152,-153,44,44,-129,-130,44,44,44,-158,44,44,44,-9,-18,44,-23,44,44,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,44,-117,-118,-119,-120,-121,44,-124,-125,-126,44,44,44,-159,44,44,44,44,-207,-136,44,44,44,44,44,44,44,44,44,44,44,-210,44,44,44,44,44,44,44,-211,44,44,44,44,]),'READ':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[45,45,-2,-4,-5,-6,-7,-8,45,45,45,45,-3,45,-135,45,45,45,-147,-148,-149,-150,-151,-152,-153,45,45,-129,-130,45,45,45,-158,45,45,45,-9,-18,45,-23,45,45,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,45,-117,-118,-119,-120,-121,45,-124,-125,-126,45,45,45,-159,45,45,45,45,-207,-136,45,45,45,45,45,45,45,45,45,45,45,-210,45,45,45,45,45,45,45,-211,45,45,45,45,]),'PRINT':([0,2,3,4,5,6,7,8,28,29,30,31,47,58,59,60,61,62,64,65,66,67,68,69,70,78,82,86,87,90,101,113,116,117,119,120,121,142,146,147,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,192,193,195,203,212,213,216,221,222,224,228,230,234,242,243,244,246,248,253,254,267,279,280,283,285,298,302,303,304,313,320,322,340,],[46,46,-2,-4,-5,-6,-7,-8,46,46,46,46,-3,46,-135,46,46,46,-147,-148,-149,-150,-151,-152,-153,46,46,-129,-130,46,46,46,-158,46,46,46,-9,-18,46,-23,46,46,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,46,-117,-118,-119,-120,-121,46,-124,-125,-126,46,46,46,-159,46,46,46,46,-207,-136,46,46,46,46,46,46,46,46,46,46,46,-210,46,46,46,46,46,46,46,-211,46,46,46,46,]),'$end':([1,2,3,4,5,6,7,8,47,59,121,142,147,221,222,],[0,-1,-2,-4,-5,-6,-7,-8,-3,-135,-9,-18,-23,-207,-136,]),'END':([3,4,5,6,7,8,47,59,121,142,147,152,221,222,224,267,304,],[-2,-4,-5,-6,-7,-8,-3,-135,-9,-18,-23,223,-207,-136,266,-210,-211,]),'COLON':([12,14,21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,118,155,160,161,162,187,188,204,207,208,227,229,231,232,235,237,238,239,251,252,256,257,265,282,310,311,324,329,333,336,],[58,-137,-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,203,-187,230,-67,-55,-128,-134,-197,254,-42,-188,-64,-103,-116,-123,283,-42,-92,-198,-69,298,-42,-56,-89,-66,-95,-72,-42,-96,-90,]),'SEMI':([13,15,16,17,18,19,20,21,22,23,25,26,28,32,33,34,35,36,48,49,52,53,55,56,63,71,72,73,74,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,110,111,112,114,123,125,126,127,128,129,130,131,132,133,135,136,137,138,139,143,144,150,151,155,163,187,188,194,196,197,198,199,202,204,209,210,214,217,218,219,220,223,225,227,229,231,232,235,239,240,245,247,251,252,266,268,270,282,284,287,290,291,297,299,300,306,310,311,318,323,324,326,327,333,336,338,339,342,345,346,],[59,-138,-139,-140,-141,-142,-143,-17,-144,-145,-185,-186,-193,-57,-58,-59,-60,-61,121,-10,142,-19,147,-24,-63,-192,-137,-194,-196,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-195,-97,-164,193,-168,-12,-40,-27,-28,-29,-30,-31,-32,-33,-34,-45,-46,-35,-36,-37,-20,-21,221,222,-187,-146,-128,-134,-166,-169,-171,-172,-173,-184,-197,-11,-13,-44,-22,-14,-25,-26,-208,267,-188,-64,-103,-116,-123,-92,-154,-165,-170,-198,-69,-209,304,-212,-89,-155,-167,-181,-182,-38,-39,-47,-213,-66,-95,-174,-183,-72,-49,-54,-96,-90,-175,-179,-219,-180,-220,]),'ARROW':([14,17,21,24,25,26,28,29,30,32,33,34,35,36,60,61,62,63,64,65,66,67,68,69,70,78,82,83,86,87,88,89,101,117,119,120,146,154,155,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,188,189,204,212,213,216,227,228,229,230,234,243,248,251,252,253,254,265,279,280,283,298,302,303,310,313,320,322,324,340,],[-56,-62,-17,63,-185,-186,90,90,90,-57,-58,-59,-60,-61,90,90,90,-63,-147,-148,-149,-150,-151,-152,-153,90,90,63,-129,-130,-56,-62,90,90,90,90,90,-56,-187,90,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,90,-117,-118,-119,-120,-121,90,-124,-125,-126,63,90,-197,90,90,90,-188,90,-64,90,90,90,90,-198,-69,90,90,-56,90,90,90,90,90,90,-66,90,90,90,-72,90,]),'ASSIGN':([14,17,21,24,25,26,32,33,34,35,36,51,54,57,63,123,125,126,127,128,129,130,131,132,133,135,136,137,138,139,145,154,155,200,201,204,211,214,227,229,251,252,297,299,300,310,324,326,327,],[-56,-62,-17,64,-185,-186,-57,-58,-59,-60,-61,-15,146,149,-63,146,-40,-27,-28,-29,-30,-31,-32,-33,-34,-45,-46,-35,-36,-37,146,-56,-187,248,-176,-197,-16,-44,-188,-64,-198,-69,-38,-39,-47,-66,-72,-49,-54,]),'INCREASE':([14,17,21,24,25,26,32,33,34,35,36,63,154,155,204,227,229,251,252,310,324,],[-56,-62,-17,66,-185,-186,-57,-58,-59,-60,-61,-63,-56,-187,-197,-188,-64,-198,-69,-66,-72,]),'DECREASE':([14,17,21,24,25,26,32,33,34,35,36,63,154,155,204,227,229,251,252,310,324,],[-56,-62,-17,67,-185,-186,-57,-58,-59,-60,-61,-63,-56,-187,-197,-188,-64,-198,-69,-66,-72,]),'MULCREASE':([14,17,21,24,25,26,32,33,34,35,36,63,154,155,204,227,229,251,252,310,324,],[-56,-62,-17,68,-185,-186,-57,-58,-59,-60,-61,-63,-56,-187,-197,-188,-64,-198,-69,-66,-72,]),'DIVCREASE':([14,17,21,24,25,26,32,33,34,35,36,63,154,155,204,227,229,251,252,310,324,],[-56,-62,-17,69,-185,-186,-57,-58,-59,-60,-61,-63,-56,-187,-197,-188,-64,-198,-69,-66,-72,]),'MODCREASE':([14,17,21,24,25,26,32,33,34,35,36,63,154,155,204,227,229,251,252,310,324,],[-56,-62,-17,70,-185,-186,-57,-58,-59,-60,-61,-63,-56,-187,-197,-188,-64,-198,-69,-66,-72,]),'LBRACKET':([14,17,21,24,25,26,32,33,34,35,36,38,63,83,85,88,89,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,140,141,154,155,188,204,227,229,239,251,252,265,282,310,324,336,],[61,-62,-17,-73,-185,-186,-57,-58,-59,-60,-61,120,-63,-73,-91,61,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,189,-83,-84,-85,-86,-87,-88,215,216,61,-187,-73,-197,-188,-64,-92,-198,-69,61,-89,-66,-72,-90,]),'LPAREN':([14,21,28,29,30,37,39,40,41,42,43,44,45,46,60,61,62,64,65,66,67,68,69,70,78,82,86,87,88,101,117,119,120,125,127,130,131,132,133,137,138,139,146,153,154,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,263,265,269,279,280,283,291,292,297,298,299,302,303,313,320,322,323,340,],[60,-17,101,101,101,119,-199,-200,-201,-202,-203,-204,-205,-206,101,101,101,-147,-148,-149,-150,-151,-152,-153,101,101,-129,-130,60,101,101,101,101,212,213,-31,-32,-33,-34,-35,-36,-37,101,226,60,101,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,101,-117,-118,-119,-120,-121,101,-124,-125,-126,101,101,101,101,101,101,101,101,101,101,101,213,303,305,101,101,101,213,212,-38,101,-39,101,101,101,101,101,213,101,]),'COMMA':([21,25,26,32,33,34,35,36,48,49,50,51,54,55,56,57,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,123,125,126,127,128,129,130,131,132,133,135,136,137,138,139,155,156,157,158,187,188,204,205,206,208,209,210,211,214,218,219,220,227,229,231,232,235,239,251,252,261,262,263,264,271,272,273,274,282,294,296,297,299,300,308,309,310,311,324,325,326,327,328,329,331,332,333,336,],[-17,-185,-186,-57,-58,-59,-60,-61,122,-10,124,-15,124,148,-24,124,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-12,-40,-27,-28,-29,-30,-31,-32,-33,-34,-45,-46,-35,-36,-37,-187,228,-189,-191,-128,-134,-197,228,253,-70,-11,-13,-16,-44,-14,-25,-26,-188,-64,-103,-116,-123,-92,-198,-69,302,-50,-52,-53,307,-214,124,-190,-89,-71,-43,-38,-39,-47,-216,-217,-66,-95,-72,-41,-49,-54,-51,-191,-215,-218,-96,-90,]),'REF':([21,50,51,54,134,149,211,273,301,305,],[-17,134,-15,134,134,134,-16,134,134,134,]),'INT':([21,50,51,54,134,149,211,216,249,273,293,301,302,305,],[-17,137,-15,137,137,137,-16,137,137,137,137,137,137,137,]),'BOOL':([21,50,51,54,134,149,211,216,249,273,293,301,302,305,],[-17,138,-15,138,138,138,-16,138,138,138,138,138,138,138,]),'CHAR':([21,50,51,54,134,149,211,216,249,273,293,301,302,305,],[-17,139,-15,139,139,139,-16,139,139,139,139,139,139,139,]),'CHARS':([21,50,51,54,134,149,211,273,301,305,],[-17,140,-15,140,140,140,-16,140,140,140,]),'ARRAY':([21,50,51,54,134,149,211,273,301,305,],[-17,141,-15,141,141,141,-16,141,141,141,]),'TIMES':([21,25,26,32,33,34,35,36,63,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,184,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,184,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'DIVIDE':([21,25,26,32,33,34,35,36,63,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,185,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,185,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'MOD':([21,25,26,32,33,34,35,36,63,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,186,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,186,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'PLUS':([21,25,26,32,33,34,35,36,63,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,179,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,179,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'MINUS':([21,25,26,28,29,30,32,33,34,35,36,60,61,62,63,64,65,66,67,68,69,70,77,78,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,117,119,120,146,155,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,204,212,213,216,227,228,229,230,231,232,234,235,239,243,248,251,252,253,254,265,279,280,282,283,298,302,303,310,313,320,322,324,336,340,],[-17,-185,-186,86,86,86,-57,-58,-59,-60,-61,86,86,86,-63,-147,-148,-149,-150,-151,-152,-153,180,86,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,86,-83,-84,-85,-86,-87,-88,86,86,86,86,-187,86,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,86,-117,-118,-119,-120,-121,86,-124,-125,-126,-128,-134,86,-197,86,86,86,-188,86,-64,86,180,-116,86,-123,-92,86,86,-198,-69,86,86,-56,86,86,-89,86,86,86,86,-66,86,86,86,-72,-90,86,]),'STRCAT':([21,25,26,32,33,34,35,36,63,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,181,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,181,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'AND':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,167,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'OR':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,168,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'EQUAL':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,169,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'DIFF':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,170,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'GREATER':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,171,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'GREATEREQ':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,172,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'LESS':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,173,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'LESSEQ':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,174,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-56,-89,-66,-72,-90,]),'IN':([21,25,26,32,33,34,35,36,63,75,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,200,201,204,227,229,231,232,235,239,250,251,252,265,282,310,324,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,175,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,249,-176,-197,-188,-64,-103,-116,-123,-92,293,-198,-69,-56,-89,-66,-72,-90,]),'THEN':([21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,109,110,155,182,187,188,204,227,229,231,232,235,239,251,252,282,286,310,311,315,324,333,334,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,192,-97,-187,234,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-89,192,-66,-95,234,-72,-96,234,-90,]),'RPAREN':([21,25,26,32,33,34,35,36,60,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,119,125,126,127,128,129,130,131,132,133,135,136,137,138,139,155,156,157,158,187,188,190,204,205,214,226,227,229,231,232,235,239,251,252,255,258,271,272,274,282,296,297,299,300,303,308,309,310,311,324,325,326,327,329,330,331,332,333,336,343,],[-17,-185,-186,-57,-58,-59,-60,-61,155,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,204,-40,-27,-28,-29,-30,-31,-32,-33,-34,-45,-46,-35,-36,-37,-187,227,-189,-191,-128,-134,239,-197,251,-44,270,-188,-64,-103,-116,-123,-92,-198,-69,297,299,306,-214,-190,-89,-43,-38,-39,-47,155,-216,-217,-66,-95,-72,-41,-49,-54,-191,342,-215,-218,-96,-90,346,]),'RBRACKET':([21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,130,131,132,133,137,138,139,155,159,161,162,187,188,204,206,208,227,229,231,232,235,236,238,239,251,252,259,260,261,262,263,264,275,276,282,294,295,296,297,299,310,311,316,324,325,328,333,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-31,-32,-33,-34,-35,-36,-37,-187,229,-65,-55,-128,-134,-197,252,-70,-188,-64,-103,-116,-123,282,-55,-92,-198,-69,300,-48,301,-50,-52,-53,310,-68,-89,-71,324,-43,-38,-39,-66,-95,336,-72,-41,-51,-96,-90,]),'ELSE':([21,25,26,32,33,34,35,36,59,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,116,155,187,188,191,192,195,204,222,227,229,231,232,233,235,239,244,251,252,278,281,282,310,311,317,324,333,335,336,344,],[-17,-185,-186,-57,-58,-59,-60,-61,-135,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-158,-187,-128,-134,242,-156,-159,-197,-136,-188,-64,-103,-116,279,-123,-92,-157,-198,-69,279,-98,-89,-66,-95,242,-72,-96,-100,-90,-101,]),'ELSIF':([21,25,26,32,33,34,35,36,59,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,116,155,187,188,191,192,195,204,222,227,229,231,232,233,235,239,244,251,252,278,281,282,310,311,317,324,333,335,336,344,],[-17,-185,-186,-57,-58,-59,-60,-61,-135,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-158,-187,-128,-134,243,-156,-159,-197,-136,-188,-64,-103,-116,280,-123,-92,-157,-198,-69,313,-98,-89,-66,-95,243,-72,-96,-100,-90,-101,]),'TO':([21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,162,187,188,204,227,229,231,232,235,239,251,252,282,288,289,290,310,311,319,321,324,333,336,341,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-55,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-89,320,-177,-181,-66,-95,320,340,-72,-96,-90,-178,]),'DOWN':([21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,162,187,188,200,201,204,227,229,231,232,235,239,251,252,282,288,289,290,310,311,319,324,333,336,341,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-55,-128,-134,250,-176,-197,-188,-64,-103,-116,-123,-92,-198,-69,-89,321,-177,-181,-66,-95,321,-72,-96,-90,-178,]),'BY':([21,25,26,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,155,187,188,204,227,229,231,232,235,239,251,252,282,288,289,290,310,311,324,333,336,],[-17,-185,-186,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-187,-128,-134,-197,-188,-64,-103,-116,-123,-92,-198,-69,-89,322,-177,-181,-66,-95,-72,-96,-90,]),'FI':([21,25,26,32,33,34,35,36,59,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,116,155,187,188,191,192,195,204,222,227,229,231,232,235,239,241,242,244,251,252,277,282,285,310,311,312,314,317,324,333,336,337,],[-17,-185,-186,-57,-58,-59,-60,-61,-135,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-158,-187,-128,-134,240,-156,-159,-197,-136,-188,-64,-103,-116,-123,-92,284,-160,-157,-198,-69,311,-89,-161,-66,-95,333,-99,-162,-72,-96,-90,-163,]),'WHILE':([21,25,26,31,32,33,34,35,36,63,75,76,77,79,80,81,83,84,85,88,89,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,130,131,132,133,137,138,139,155,187,188,196,197,198,199,204,227,229,231,232,235,239,251,252,282,290,291,297,299,310,311,318,323,324,333,336,338,339,345,],[-17,-185,-186,117,-57,-58,-59,-60,-61,-63,-93,-94,-102,-115,-122,-127,-131,-132,-133,-56,-62,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-31,-32,-33,-34,-35,-36,-37,-187,-128,-134,117,-171,-172,-173,-197,-188,-64,-103,-116,-123,-92,-198,-69,-89,-181,-182,-38,-39,-66,-95,-174,-183,-72,-96,-90,-175,-179,-180,]),'LOC':([21,125,126,127,128,129,130,131,132,133,135,136,137,138,139,214,297,299,300,309,326,327,330,],[-17,-40,-27,-28,-29,-30,-31,-32,-33,-34,-45,-46,-35,-36,-37,-44,-38,-39,-47,332,-49,-54,343,]),'NOT':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[87,87,87,87,87,87,-147,-148,-149,-150,-151,-152,-153,87,87,87,87,87,87,87,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,87,-117,-118,-119,-120,-121,87,-124,-125,-126,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'ICONST':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,215,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[102,102,102,102,102,102,-147,-148,-149,-150,-151,-152,-153,102,102,-129,-130,102,102,102,102,102,102,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,102,-117,-118,-119,-120,-121,102,-124,-125,-126,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'FALSE':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[103,103,103,103,103,103,-147,-148,-149,-150,-151,-152,-153,103,103,-129,-130,103,103,103,103,103,103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,103,-117,-118,-119,-120,-121,103,-124,-125,-126,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'TRUE':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[104,104,104,104,104,104,-147,-148,-149,-150,-151,-152,-153,104,104,-129,-130,104,104,104,104,104,104,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,104,-117,-118,-119,-120,-121,104,-124,-125,-126,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'CCONST':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[105,105,105,105,105,105,-147,-148,-149,-150,-151,-152,-153,105,105,-129,-130,105,105,105,105,105,105,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,105,-117,-118,-119,-120,-121,105,-124,-125,-126,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'NULL':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[106,106,106,106,106,106,-147,-148,-149,-150,-151,-152,-153,106,106,-129,-130,106,106,106,106,106,106,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,106,-117,-118,-119,-120,-121,106,-124,-125,-126,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'SCONST':([28,29,30,60,61,62,64,65,66,67,68,69,70,78,82,86,87,101,117,119,120,146,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[107,107,107,107,107,107,-147,-148,-149,-150,-151,-152,-153,107,107,-129,-130,107,107,107,107,107,107,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,107,-117,-118,-119,-120,-121,107,-124,-125,-126,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'OD':([31,59,113,116,193,195,222,246,],[111,-135,194,-158,245,-159,-136,287,]),'FOR':([31,],[115,]),'PROC':([58,],[153,]),'RETURNS':([225,270,306,],[269,-212,-213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,152,],[2,224,]),'statement':([0,2,152,224,],[3,47,3,47,]),'declaration_statement':([0,2,152,224,],[4,4,4,4,]),'synonym_statement':([0,2,152,224,],[5,5,5,5,]),'newmode_statement':([0,2,152,224,],[6,6,6,6,]),'procedure_statement':([0,2,152,224,],[7,7,7,7,]),'action_statement':([0,2,31,113,152,192,193,224,242,244,246,285,],[8,8,116,195,8,116,116,8,116,195,195,195,]),'label_id':([0,2,27,31,113,152,192,193,224,242,244,246,285,],[12,12,71,118,118,12,118,118,12,118,118,118,118,]),'action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[13,13,13,151,13,13,13,13,151,13,13,13,13,13,]),'identifier':([0,2,9,10,11,27,28,29,30,31,50,52,54,58,60,61,62,78,82,90,101,113,115,117,119,120,122,124,134,146,148,149,152,164,176,183,189,192,193,203,212,213,216,224,226,228,230,234,242,243,244,246,248,249,253,254,273,279,280,283,285,293,298,301,302,303,305,307,313,320,322,340,],[14,14,51,51,51,72,88,88,88,14,125,51,125,154,88,88,88,88,88,88,88,14,201,88,88,88,51,211,125,88,51,125,14,88,88,88,88,14,14,154,88,88,265,14,51,88,88,88,14,88,14,14,88,292,88,88,125,88,88,88,14,292,88,125,265,88,125,51,88,88,88,88,]),'bracketed_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignment_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'call_action':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[17,17,89,89,89,17,17,89,89,89,89,89,89,89,17,89,89,89,89,17,89,89,89,89,17,17,17,89,89,89,17,89,89,89,17,89,17,17,89,89,89,89,89,89,17,89,89,89,89,89,89,89,]),'exit_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'return_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'result_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'if_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'do_action':([0,2,31,58,113,152,192,193,203,224,242,244,246,285,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'location':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[24,24,83,83,83,24,24,83,83,83,83,83,188,83,24,83,83,83,83,24,83,83,83,83,24,24,24,83,83,83,24,83,83,83,24,83,24,24,83,83,83,83,83,83,24,83,83,83,83,83,83,83,]),'procedure_call':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'builtin_call':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dereferenced_reference':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'string_element':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'string_slice':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'array_element':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'array_slice':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'builtin_name':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'array_location':([0,2,28,29,30,31,58,60,61,62,78,82,90,101,113,117,119,120,146,152,164,176,183,189,192,193,203,212,213,216,224,228,230,234,242,243,244,246,248,253,254,279,280,283,285,298,302,303,313,320,322,340,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'declaration_list':([9,],[48,]),'declaration':([9,122,],[49,209,]),'identifier_list':([9,10,11,52,122,148,226,307,],[50,54,57,54,50,57,273,273,]),'synonym_list':([10,],[52,]),'synonym_definition':([10,52,],[53,143,]),'newmode_list':([11,],[55,]),'mode_definition':([11,148,],[56,219,]),'assigning_operator':([24,],[62,]),'closed_dyadic_operator':([24,],[65,]),'result':([28,29,],[73,108,]),'expression':([28,29,30,60,61,62,78,101,117,119,120,146,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[74,74,110,158,162,163,110,190,110,158,208,218,238,257,257,257,158,162,281,110,290,294,296,314,110,296,296,257,329,110,290,162,290,]),'operand0':([28,29,30,60,61,62,78,101,117,119,120,146,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'conditional_expression':([28,29,30,60,61,62,78,101,117,119,120,146,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'operand1':([28,29,30,60,61,62,78,101,117,119,120,146,164,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[77,77,77,77,77,77,77,77,77,77,77,77,231,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'operand2':([28,29,30,60,61,62,78,101,117,119,120,146,164,176,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[79,79,79,79,79,79,79,79,79,79,79,79,79,232,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand3':([28,29,30,60,61,62,78,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,235,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'operand4':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[81,81,81,81,81,81,81,187,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'monadic_operator':([28,29,30,60,61,62,78,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'referenced_location':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'primitive_value':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'value_array_element':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'value_array_slice':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'parenthesized_expression':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'integer_literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,215,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,260,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'boolean_literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'character_literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'empty_literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'character_string_literal':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'array_primitive_value':([28,29,30,60,61,62,78,82,101,117,119,120,146,164,176,183,189,212,213,216,228,230,234,243,248,253,254,279,280,283,298,302,303,313,320,322,340,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'boolean_expression':([30,78,117,243,280,313,],[109,182,202,286,315,334,]),'control_part':([31,],[112,]),'action_statement_list':([31,192,193,242,],[113,244,246,285,]),'while_control':([31,196,],[114,247,]),'mode':([50,54,134,149,273,301,305,],[123,145,214,220,309,327,330,]),'mode_name':([50,54,134,149,273,301,305,],[126,126,126,126,126,126,126,]),'discrete_mode':([50,54,134,149,216,249,273,293,301,302,305,],[127,127,127,127,263,291,127,323,127,263,127,]),'reference_mode':([50,54,134,149,273,301,305,],[128,128,128,128,128,128,128,]),'composite_mode':([50,54,134,149,273,301,305,],[129,129,129,129,129,129,129,]),'integer_mode':([50,54,134,149,216,249,273,293,301,302,305,],[130,130,130,130,130,130,130,130,130,130,130,]),'boolean_mode':([50,54,134,149,216,249,273,293,301,302,305,],[131,131,131,131,131,131,131,131,131,131,131,]),'character_mode':([50,54,134,149,216,249,273,293,301,302,305,],[132,132,132,132,132,132,132,132,132,132,132,]),'discrete_range_mode':([50,54,134,149,216,249,273,293,301,302,305,],[133,133,133,133,133,133,133,133,133,133,133,]),'string_mode':([50,54,134,149,273,301,305,],[135,135,135,135,135,135,135,]),'array_mode':([50,54,134,149,273,301,305,],[136,136,136,136,136,136,136,]),'initialization':([54,123,145,],[144,210,217,]),'procedure_definition':([58,],[150,]),'formal_procedure_head':([58,],[152,]),'parameter_list':([60,119,303,],[156,205,156,]),'parameter':([60,119,228,303,],[157,157,274,157,]),'start_element':([61,],[159,]),'left_element':([61,],[160,]),'integer_expression':([61,189,230,322,],[161,236,276,341,]),'operator1':([75,],[164,]),'relational_operator':([75,],[165,]),'membership_operator':([75,],[166,]),'operator2':([77,231,],[176,176,]),'arithmetic_additive_operator':([77,231,],[177,177,]),'string_concatenation_operator':([77,231,],[178,178,]),'arithmetic_multiplicative_operator':([79,232,],[183,183,]),'then_clause':([109,286,],[191,317,]),'for_control':([115,],[196,]),'iteration':([115,],[197,]),'step_enumeration':([115,],[198,]),'range_enumeration':([115,],[199,]),'loop_counter':([115,],[200,]),'expression_list':([120,],[206,]),'lower_bound':([120,189,212,213,216,302,303,],[207,237,256,256,256,256,256,]),'parenthesis_gambiarra':([153,],[225,]),'then_expression':([182,315,334,],[233,335,344,]),'else_clause':([191,317,],[241,337,]),'literal_range':([212,213,216,302,303,],[255,258,264,264,255,]),'string_length':([215,],[259,]),'index_mode_list':([216,],[261,]),'index_mode':([216,302,],[262,328,]),'result_spec':([225,],[268,]),'formal_parameter_list':([226,],[271,]),'formal_parameter':([226,307,],[272,331,]),'right_element':([230,],[275,]),'else_expression':([233,278,],[277,312,]),'elsif_expression':([233,],[278,]),'start_value':([248,],[288,]),'discrete_expression':([248,320,340,],[289,339,345,]),'upper_bound':([254,283,298,],[295,316,325,]),'parameter_spec':([273,],[308,]),'end_value':([288,319,],[318,338,]),'step_value':([288,],[319,]),'element_mode':([301,],[326,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',29),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',30),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',41),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',46),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',51),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',52),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',59),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',60),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',82),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',97),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',98),
  ('synonym_definition -> identifier_list initialization','synonym_definition',2,'p_synonym_definition','parser.py',105),
  ('synonym_definition -> identifier_list mode initialization','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',118),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',124),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',125),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',132),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',138),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',139),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',141),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',146),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',154),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',159),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',164),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',169),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',177),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',187),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',192),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',198),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',204),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',216),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',222),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',228),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',234),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',235),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',242),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',243),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',248),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',254),
  ('location -> identifier','location',1,'p_location','parser.py',260),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',261),
  ('location -> string_element','location',1,'p_location','parser.py',262),
  ('location -> string_slice','location',1,'p_location','parser.py',263),
  ('location -> array_element','location',1,'p_location','parser.py',264),
  ('location -> array_slice','location',1,'p_location','parser.py',265),
  ('location -> call_action','location',1,'p_location','parser.py',266),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',271),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',277),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',283),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',289),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',299),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',305),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',311),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',317),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',318),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',325),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',331),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',337),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',338),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',339),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',340),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',346),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',347),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',348),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',349),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',350),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',355),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',361),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',362),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',369),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',375),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',382),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',388),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',394),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',400),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',406),
  ('expression -> operand0','expression',1,'p_expression','parser.py',413),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',414),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',429),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',441),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',447),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',448),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',457),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',458),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',465),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',466),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',471),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',472),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',473),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',474),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',478),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',483),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',488),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',489),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',497),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',498),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',503),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',504),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',510),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',514),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',515),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',522),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',523),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',524),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',529),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',530),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',538),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',539),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',544),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',545),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',546),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',551),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',556),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',557),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',566),
  ('action -> bracketed_action','action',1,'p_action','parser.py',571),
  ('action -> assignment_action','action',1,'p_action','parser.py',572),
  ('action -> call_action','action',1,'p_action','parser.py',573),
  ('action -> exit_action','action',1,'p_action','parser.py',574),
  ('action -> return_action','action',1,'p_action','parser.py',575),
  ('action -> result_action','action',1,'p_action','parser.py',576),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',581),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',582),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',587),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',606),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',607),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',612),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',613),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',614),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',615),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',616),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',621),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',622),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',631),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',632),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',641),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',642),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',649),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',650),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',651),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',652),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',667),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',668),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',669),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',670),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',684),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',685),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',686),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',695),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',700),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',701),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',706),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',707),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',714),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',719),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',724),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',729),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',730),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',738),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',743),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',744),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',751),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',755),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',756),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',761),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',762),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',769),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',770),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',777),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',785),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',789),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',790),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',797),
  ('result -> expression','result',1,'p_result','parser.py',801),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',806),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',807),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',814),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',815),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',816),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',817),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',818),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',819),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',820),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',821),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',825),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',829),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',830),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',837),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',838),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',846),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',847),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',854),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',855),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',862),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',866),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',867),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',879),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',880),
]
