
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST OD ABS EXIT LOWER INT CHARS FI ARRAY TRUE BOOL THEN PRINT LENGTH DCL LOC UPPER READ REF CHAR FOR RETURN NULL FALSE TYPE IN RESULT ELSIF BY TO DOWN SYN ELSE WHILE IF RETURNS NUM END ASC PROC DOprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN expression\n                              | identifier_list mode ASSIGN expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call :  identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode parameter_attributeparameter_attribute :  LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode result_attribute RPARENresult_attribute :  LOC'
    
_lr_action_items = {'LPAREN':([4,11,15,21,22,25,27,28,32,34,40,41,44,45,49,58,69,73,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,166,167,168,169,172,173,174,179,180,182,183,189,212,221,233,235,236,237,241,242,244,246,251,253,256,257,262,265,267,271,284,287,300,303,304,309,318,319,320,322,323,329,],[58,-199,-205,-17,58,-200,-206,-202,-203,-204,-201,58,118,120,58,58,-129,118,58,58,-130,-149,-152,-151,-150,58,-153,-148,-147,58,58,58,58,-125,-124,58,-126,58,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,58,-119,-120,-118,58,-121,-117,231,118,-36,-31,233,-35,-37,-33,235,-32,-34,58,58,58,58,58,58,58,58,58,58,58,58,58,235,233,58,58,58,312,233,323,58,58,233,58,-39,58,-38,58,58,58,]),'BOOL':([21,93,96,112,159,177,211,224,236,261,273,312,321,322,],[-17,-15,168,168,168,168,168,-16,168,168,168,168,168,168,]),'CHARS':([21,93,96,112,159,177,224,273,312,321,],[-17,-15,171,171,171,171,-16,171,171,171,]),'PROC':([95,],[166,]),'STRCAT':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-122,-62,-74,-84,157,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,157,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'FI':([14,16,21,23,24,29,33,46,47,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,90,105,124,132,152,196,197,200,206,214,215,216,222,226,243,245,247,249,250,252,254,263,264,294,306,308,310,324,325,326,331,333,344,],[-57,-186,-17,-58,-59,-185,-61,-60,-158,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-135,-63,-159,-134,-128,-156,248,-187,-197,-92,-123,-103,-116,-136,-69,-157,-160,295,-188,-64,-198,-89,306,-161,-95,333,-99,-72,-162,-66,-90,-96,-163,]),'LESS':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,141,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'REF':([21,93,96,112,159,177,224,273,312,321,],[-17,-15,177,177,177,177,-16,177,177,177,]),'INCREASE':([14,16,21,23,24,26,29,33,35,44,46,105,167,200,206,243,250,252,254,324,326,],[-57,-186,-17,-58,-59,-62,-185,-61,103,-56,-60,-63,-56,-187,-197,-69,-188,-64,-198,-72,-66,]),'SEMI':([3,5,9,10,14,16,17,18,21,22,23,24,26,29,33,42,43,46,48,50,54,56,57,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,91,94,97,98,99,100,101,105,113,114,116,121,125,126,127,128,129,132,152,163,164,168,169,170,172,173,174,175,176,178,179,180,182,183,184,185,188,191,200,206,209,210,214,215,216,222,223,225,229,230,234,238,239,240,243,248,250,252,254,255,257,258,263,269,270,276,288,289,295,299,304,306,315,317,318,320,324,326,327,328,331,333,340,341,345,348,350,],[-138,90,-144,-139,-57,-186,-141,-142,-17,-193,-58,-59,-140,-185,-61,-145,-143,-60,-168,122,-164,-196,-77,-75,-133,-79,-83,-85,-127,-132,-86,-195,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-24,162,187,-10,-194,-192,-137,-63,-19,192,-97,-184,-166,-173,-172,-171,-169,-134,-128,226,227,-36,-31,-27,-28,-35,-37,-30,-46,-29,-33,-40,-32,-34,-45,-12,-146,-20,-187,-197,-165,-170,-92,-123,-103,-116,-26,-25,-208,272,-44,-13,-11,-21,-69,-154,-188,-64,-198,-167,-182,-181,-89,-209,311,-212,-14,-22,-155,-174,-183,-95,-213,-47,-39,-38,-72,-66,-179,-175,-90,-96,-49,-54,-180,-220,-221,]),'DIVIDE':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,84,87,88,89,105,132,152,200,206,214,215,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,134,-82,-81,-56,-131,-122,-62,-74,-84,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,134,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'ARRAY':([21,93,96,112,159,177,224,273,312,321,],[-17,-15,181,181,181,181,-16,181,181,181,]),'RESULT':([0,1,2,6,7,12,20,31,38,47,52,90,95,102,122,123,124,162,165,187,192,196,208,226,227,228,245,247,272,294,311,],[4,4,-8,-6,-2,-5,-7,4,-4,-158,4,-135,4,-3,4,4,-159,-23,4,-9,-18,4,4,-136,-207,4,4,4,-210,4,-211,]),'IF':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,58,81,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,150,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[41,41,-8,81,-6,-2,-5,-7,81,41,-4,81,-158,81,41,81,81,-135,41,-3,-149,-152,-151,-150,81,-153,-148,-147,81,81,81,81,41,41,-159,81,-23,41,-9,81,-18,41,41,81,81,-136,-207,41,81,81,81,81,81,81,81,41,81,41,81,81,81,81,81,-210,41,81,81,81,-211,81,81,81,81,]),'COLON':([13,14,16,21,23,24,29,33,44,46,51,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,132,152,193,194,200,202,203,205,206,214,215,216,217,218,222,243,250,252,254,263,279,281,287,306,324,326,331,333,343,],[95,-57,-186,-17,-58,-59,-185,-61,-137,-60,123,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-134,-128,-42,242,-187,-55,-67,253,-197,-92,-123,-103,-42,262,-116,-69,-188,-64,-198,-89,-42,319,-56,-95,-72,-66,-90,-96,-42,]),'OR':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,145,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'GREATEREQ':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,148,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'SCONST':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[68,68,68,68,68,-129,68,68,-130,-149,-152,-151,-150,68,-153,-148,-147,68,68,68,68,-125,-124,68,-126,68,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,68,-119,-120,-118,68,-121,-117,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TYPE':([0,2,6,7,12,20,31,38,90,102,162,165,187,192,226,227,228,272,311,],[8,-8,-6,-2,-5,-7,8,-4,-135,-3,-23,8,-9,-18,-136,-207,8,-210,-211,]),'TRUE':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[63,63,63,63,63,-129,63,63,-130,-149,-152,-151,-150,63,-153,-148,-147,63,63,63,63,-125,-124,63,-126,63,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,63,-119,-120,-118,63,-121,-117,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MODCREASE':([14,16,21,23,24,26,29,33,35,44,46,105,167,200,206,243,250,252,254,324,326,],[-57,-186,-17,-58,-59,-62,-185,-61,109,-56,-60,-63,-56,-187,-197,-69,-188,-64,-198,-72,-66,]),'LBRACKET':([14,16,21,23,24,26,29,33,35,39,44,46,57,59,60,61,62,63,66,68,71,72,73,74,77,78,79,80,84,87,88,89,105,132,167,171,181,200,206,214,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-62,-185,-61,-73,115,119,-60,-77,-75,-91,-79,-83,-85,-86,-88,-82,-81,119,-73,-62,150,-74,-84,-78,-76,-80,-87,-63,-73,119,232,236,-187,-197,-92,-69,-188,-64,-198,-89,119,-72,-66,-90,]),'PLUS':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-122,-62,-74,-84,153,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,153,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'ARROW':([4,14,16,21,22,23,24,26,29,33,35,41,44,46,49,58,69,73,74,77,81,82,85,103,104,105,106,107,108,109,110,111,115,118,119,120,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,167,189,200,206,212,221,233,235,236,237,241,242,243,244,246,250,251,252,253,254,262,265,267,287,300,303,309,319,322,323,324,326,329,],[55,-57,-186,-17,55,-58,-59,-62,-185,-61,105,55,-56,-60,55,55,-129,-56,105,-62,55,55,-130,-149,-152,-63,-151,-150,55,-153,-148,-147,55,55,55,55,105,-125,-124,55,-126,55,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,55,-119,-120,-118,55,-121,-117,-56,55,-187,-197,55,55,55,55,55,55,55,55,-69,55,55,-188,55,-64,55,-198,55,55,55,-56,55,55,55,55,55,55,-72,-66,55,]),'CCONST':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[66,66,66,66,66,-129,66,66,-130,-149,-152,-151,-150,66,-153,-148,-147,66,66,66,66,-125,-124,66,-126,66,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,66,-119,-120,-118,66,-121,-117,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DO':([0,1,2,6,7,12,20,31,38,47,52,90,95,102,122,123,124,162,165,187,192,196,208,226,227,228,245,247,272,294,311,],[1,1,-8,-6,-2,-5,-7,1,-4,-158,1,-135,1,-3,1,1,-159,-23,1,-9,-18,1,1,-136,-207,1,1,1,-210,1,-211,]),'LOC':([21,168,169,170,172,173,174,175,176,178,179,180,182,183,184,234,314,317,318,320,335,340,341,],[-17,-36,-31,-27,-28,-35,-37,-30,-46,-29,-33,-40,-32,-34,-45,-44,337,-47,-39,-38,349,-49,-54,]),'MINUS':([4,14,16,21,22,23,24,29,33,41,46,49,57,58,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,81,83,84,87,88,89,103,104,105,106,107,108,109,110,111,115,118,119,120,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,189,200,206,212,214,215,216,221,222,233,235,236,237,241,242,243,244,246,250,251,252,253,254,262,263,265,267,287,300,303,309,319,322,323,324,326,329,331,],[69,-57,-186,-17,69,-58,-59,-185,-61,69,-60,69,-77,69,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-122,-62,-74,-84,69,154,-78,-76,-80,-87,-149,-152,-63,-151,-150,69,-153,-148,-147,69,69,69,69,-134,-125,-124,69,-126,69,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,69,-128,-119,-120,-118,69,-121,-117,69,-187,-197,69,-92,-123,154,69,-116,69,69,69,69,69,69,-69,69,69,-188,69,-64,69,-198,69,-89,69,69,-56,69,69,69,69,69,69,-72,-66,69,-90,]),'ICONST':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,232,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[62,62,62,62,62,-129,62,62,-130,-149,-152,-151,-150,62,-153,-148,-147,62,62,62,62,-125,-124,62,-126,62,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,62,-119,-120,-118,62,-121,-117,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'PRINT':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[27,27,-8,27,-6,-2,-5,-7,27,27,-4,27,-158,27,27,27,27,-129,27,27,-130,-135,27,-3,-149,-152,-151,-150,27,-153,-148,-147,27,27,27,27,27,27,-159,-125,-124,27,-126,27,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,27,-119,-120,-118,27,-121,-117,-23,27,-9,27,-18,27,27,27,27,-136,-207,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-210,27,27,27,27,-211,27,27,27,27,]),'DOWN':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,130,131,132,152,200,202,206,214,215,216,222,243,250,252,254,258,259,260,263,301,306,324,326,330,331,333,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-176,213,-134,-128,-187,-55,-197,-92,-123,-103,-116,-69,-188,-64,-198,-181,302,-177,-89,302,-95,-72,-66,-178,-90,-96,]),'END':([2,6,7,12,20,38,90,102,162,165,187,192,226,227,228,272,311,],[-8,-6,-2,-5,-7,-4,-135,-3,-23,229,-9,-18,-136,-207,269,-210,-211,]),'COMMA':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,91,92,93,94,96,97,98,105,112,132,152,168,169,170,172,173,174,175,176,178,179,180,182,183,184,185,193,195,198,199,200,201,206,207,214,215,216,222,223,224,225,234,238,239,243,250,252,254,263,273,274,275,283,284,285,286,288,290,292,296,306,313,314,317,318,320,324,326,331,333,336,337,338,339,340,341,342,343,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-24,160,-15,161,160,186,-10,-63,160,-134,-128,-36,-31,-27,-28,-35,-37,-30,-46,-29,-33,-40,-32,-34,-45,-12,-70,244,-191,-189,-187,251,-197,251,-92,-123,-103,-116,-26,-16,-25,-44,-13,-11,-69,-188,-64,-198,-89,160,316,-214,-53,-52,322,-50,-14,-43,-71,-190,-95,-216,-217,-47,-39,-38,-72,-66,-90,-96,-218,-219,-215,-41,-49,-54,-51,-191,]),'FOR':([1,],[53,]),'ASC':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[25,25,-8,25,-6,-2,-5,-7,25,25,-4,25,-158,25,25,25,25,-129,25,25,-130,-135,25,-3,-149,-152,-151,-150,25,-153,-148,-147,25,25,25,25,25,25,-159,-125,-124,25,-126,25,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,25,-119,-120,-118,25,-121,-117,-23,25,-9,25,-18,25,25,25,25,-136,-207,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-210,25,25,25,25,-211,25,25,25,25,]),'DECREASE':([14,16,21,23,24,26,29,33,35,44,46,105,167,200,206,243,250,252,254,324,326,],[-57,-186,-17,-58,-59,-62,-185,-61,107,-56,-60,-63,-56,-187,-197,-69,-188,-64,-198,-72,-66,]),'DCL':([0,2,6,7,12,20,31,38,90,102,162,165,187,192,226,227,228,272,311,],[19,-8,-6,-2,-5,-7,19,-4,-135,-3,-23,19,-9,-18,-136,-207,19,-210,-211,]),'RBRACKET':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,132,152,168,169,173,174,179,182,183,193,195,200,202,203,204,206,214,215,216,217,219,222,243,250,252,254,263,277,278,283,284,285,286,290,291,292,297,298,305,306,318,320,324,326,331,333,339,342,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-134,-128,-36,-31,-35,-37,-33,-32,-34,-70,243,-187,-55,-65,252,-197,-92,-123,-103,-55,263,-116,-69,-188,-64,-198,-89,-48,317,-53,-52,321,-50,-43,324,-71,-68,326,331,-95,-39,-38,-72,-66,-90,-96,-41,-51,]),'ID':([0,1,2,4,6,7,8,12,14,16,19,20,21,22,23,24,29,30,31,33,37,38,41,46,47,49,52,53,55,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,93,95,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,120,122,123,124,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,165,177,186,187,189,191,192,196,200,206,208,211,212,214,215,216,221,222,224,226,227,228,231,233,235,236,237,240,241,242,243,244,245,246,247,250,251,252,253,254,261,262,263,265,267,272,273,289,294,300,303,306,309,311,312,316,319,321,322,323,324,326,329,331,333,],[21,21,-8,21,-6,-2,21,-5,-57,-186,21,-7,-17,21,-58,-59,-185,21,21,-61,21,-4,21,-60,-158,21,21,21,21,-77,21,-75,-133,-79,-83,-85,-127,-132,-86,-88,-129,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,21,21,-102,-78,-130,-94,-76,-80,-87,-135,-15,21,21,-3,-149,-152,-63,-151,-150,21,-153,-148,-147,21,-19,21,21,21,21,21,21,21,-159,-134,-125,-124,21,-126,21,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,21,-128,-119,-120,-118,21,-121,-117,21,21,21,-23,21,21,21,-9,21,-20,-18,21,-187,-197,21,21,21,-92,-123,-103,21,-116,-16,-136,-207,21,21,21,21,21,21,-21,21,21,-69,21,21,21,21,-188,21,-64,21,-198,21,21,-89,21,21,-210,21,-22,21,21,21,-95,21,-211,21,21,21,21,21,21,-72,-66,21,-90,-96,]),'RETURN':([0,1,2,6,7,12,20,31,38,47,52,90,95,102,122,123,124,162,165,187,192,196,208,226,227,228,245,247,272,294,311,],[22,22,-8,-6,-2,-5,-7,22,-4,-158,22,-135,22,-3,22,22,-159,-23,22,-9,-18,22,22,-136,-207,22,22,22,-210,22,-211,]),'TO':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,132,152,200,202,206,214,215,216,222,243,250,252,254,258,259,260,263,301,302,306,324,326,330,331,333,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-134,-128,-187,-55,-197,-92,-123,-103,-116,-69,-188,-64,-198,-181,300,-177,-89,300,329,-95,-72,-66,-178,-90,-96,]),'IN':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,130,131,132,152,200,206,213,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,143,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-176,211,-134,-128,-187,-197,261,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'OD':([1,47,52,90,122,124,208,226,],[54,-158,125,-135,209,-159,255,-136,]),'READ':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[15,15,-8,15,-6,-2,-5,-7,15,15,-4,15,-158,15,15,15,15,-129,15,15,-130,-135,15,-3,-149,-152,-151,-150,15,-153,-148,-147,15,15,15,15,15,15,-159,-125,-124,15,-126,15,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,15,-119,-120,-118,15,-121,-117,-23,15,-9,15,-18,15,15,15,15,-136,-207,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-210,15,15,15,15,-211,15,15,15,15,]),'UPPER':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[28,28,-8,28,-6,-2,-5,-7,28,28,-4,28,-158,28,28,28,28,-129,28,28,-130,-135,28,-3,-149,-152,-151,-150,28,-153,-148,-147,28,28,28,28,28,28,-159,-125,-124,28,-126,28,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,28,-119,-120,-118,28,-121,-117,-23,28,-9,28,-18,28,28,28,28,-136,-207,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-210,28,28,28,28,-211,28,28,28,28,]),'DIFF':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,147,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'GREATER':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,146,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'EQUAL':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,144,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'MOD':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,84,87,88,89,105,132,152,200,206,214,215,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,137,-82,-81,-56,-131,-122,-62,-74,-84,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,137,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'EXIT':([0,1,2,6,7,12,20,31,38,47,52,90,95,102,122,123,124,162,165,187,192,196,208,226,227,228,245,247,272,294,311,],[30,30,-8,-6,-2,-5,-7,30,-4,-158,30,-135,30,-3,30,30,-159,-23,30,-9,-18,30,30,-136,-207,30,30,30,-210,30,-211,]),'LOWER':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[32,32,-8,32,-6,-2,-5,-7,32,32,-4,32,-158,32,32,32,32,-129,32,32,-130,-135,32,-3,-149,-152,-151,-150,32,-153,-148,-147,32,32,32,32,32,32,-159,-125,-124,32,-126,32,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,32,-119,-120,-118,32,-121,-117,-23,32,-9,32,-18,32,32,32,32,-136,-207,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-210,32,32,32,32,-211,32,32,32,32,]),'LENGTH':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[34,34,-8,34,-6,-2,-5,-7,34,34,-4,34,-158,34,34,34,34,-129,34,34,-130,-135,34,-3,-149,-152,-151,-150,34,-153,-148,-147,34,34,34,34,34,34,-159,-125,-124,34,-126,34,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,34,-119,-120,-118,34,-121,-117,-23,34,-9,34,-18,34,34,34,34,-136,-207,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-210,34,34,34,34,-211,34,34,34,34,]),'RETURNS':([230,276,315,],[271,-212,-213,]),'$end':([2,6,7,12,20,31,36,38,90,102,162,187,192,226,227,],[-8,-6,-2,-5,-7,-1,0,-4,-135,-3,-23,-9,-18,-136,-207,]),'MULCREASE':([14,16,21,23,24,26,29,33,35,44,46,105,167,200,206,243,250,252,254,324,326,],[-57,-186,-17,-58,-59,-62,-185,-61,106,-56,-60,-63,-56,-187,-197,-69,-188,-64,-198,-72,-66,]),'AND':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,139,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'SYN':([0,2,6,7,12,20,31,38,90,102,162,165,187,192,226,227,228,272,311,],[37,-8,-6,-2,-5,-7,37,-4,-135,-3,-23,37,-9,-18,-136,-207,37,-210,-211,]),'ELSE':([14,16,21,23,24,29,33,46,47,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,90,105,124,132,152,196,197,200,206,214,215,216,220,222,226,243,245,250,252,254,263,266,268,306,324,325,326,331,332,333,346,],[-57,-186,-17,-58,-59,-185,-61,-60,-158,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-135,-63,-159,-134,-128,-156,247,-187,-197,-92,-123,-103,267,-116,-136,-69,-157,-188,-64,-198,-89,267,-98,-95,-72,247,-66,-90,-100,-96,-101,]),'RPAREN':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,118,120,132,133,152,168,169,170,172,173,174,175,176,178,179,180,182,183,184,198,199,200,201,206,207,214,215,216,222,231,234,243,250,252,254,263,274,275,280,282,290,296,306,313,314,317,318,320,323,324,326,331,333,335,336,337,338,339,340,341,343,347,349,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,200,206,-134,214,-128,-36,-31,-27,-28,-35,-37,-30,-46,-29,-33,-40,-32,-34,-45,-191,-189,-187,250,-197,254,-92,-123,-103,-116,276,-44,-69,-188,-64,-198,-89,315,-214,318,320,-43,-190,-95,-216,-217,-47,-39,-38,200,-72,-66,-90,-96,348,-218,-219,-215,-41,-49,-54,-191,350,-222,]),'NUM':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[40,40,-8,40,-6,-2,-5,-7,40,40,-4,40,-158,40,40,40,40,-129,40,40,-130,-135,40,-3,-149,-152,-151,-150,40,-153,-148,-147,40,40,40,40,40,40,-159,-125,-124,40,-126,40,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,40,-119,-120,-118,40,-121,-117,-23,40,-9,40,-18,40,40,40,40,-136,-207,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-210,40,40,40,40,-211,40,40,40,40,]),'FALSE':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[80,80,80,80,80,-129,80,80,-130,-149,-152,-151,-150,80,-153,-148,-147,80,80,80,80,-125,-124,80,-126,80,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,80,-119,-120,-118,80,-121,-117,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'THEN':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,116,117,132,151,152,200,206,214,215,216,222,243,250,252,254,263,293,306,307,324,326,331,333,334,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-97,196,-134,221,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,196,-95,221,-72,-66,-90,-96,221,]),'WHILE':([1,14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,126,127,128,129,132,152,168,169,173,174,179,182,183,200,206,214,215,216,222,243,250,252,254,257,258,263,299,304,306,318,320,324,326,327,328,331,333,345,],[49,-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-173,-172,-171,49,-134,-128,-36,-31,-35,-37,-33,-32,-34,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-182,-181,-89,-174,-183,-95,-39,-38,-72,-66,-179,-175,-90,-96,-180,]),'ASSIGN':([14,16,21,23,24,26,29,33,35,44,46,92,93,105,112,130,131,167,168,169,170,172,173,174,175,176,178,179,180,182,183,184,185,190,200,206,224,234,243,250,252,254,317,318,320,324,326,340,341,],[-57,-186,-17,-58,-59,-62,-185,-61,111,-56,-60,159,-15,-63,189,-176,212,-56,-36,-31,-27,-28,-35,-37,-30,-46,-29,-33,-40,-32,-34,-45,237,241,-187,-197,-16,-44,-69,-188,-64,-198,-47,-39,-38,-72,-66,-49,-54,]),'ELSIF':([14,16,21,23,24,29,33,46,47,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,90,105,124,132,152,196,197,200,206,214,215,216,220,222,226,243,245,250,252,254,263,266,268,306,324,325,326,331,332,333,346,],[-57,-186,-17,-58,-59,-185,-61,-60,-158,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-135,-63,-159,-134,-128,-156,246,-187,-197,-92,-123,-103,265,-116,-136,-69,-157,-188,-64,-198,-89,309,-98,-95,-72,246,-66,-90,-100,-96,-101,]),'NOT':([4,22,41,49,58,81,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[85,85,85,85,85,85,-149,-152,-151,-150,85,-153,-148,-147,85,85,85,85,-125,-124,85,-126,85,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,85,-119,-120,-118,85,-121,-117,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'TIMES':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,76,77,79,80,84,87,88,89,105,132,152,200,206,214,215,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,135,-82,-81,-56,-131,-122,-62,-74,-84,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,135,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'INT':([21,93,96,112,159,177,211,224,236,261,273,312,321,322,],[-17,-15,173,173,173,173,173,-16,173,173,173,173,173,173,]),'LESSEQ':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,263,287,324,326,331,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,149,-122,-62,-74,-84,-102,-78,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-89,-56,-72,-66,-90,]),'CHAR':([21,93,96,112,159,177,211,224,236,261,273,312,321,322,],[-17,-15,174,174,174,174,174,-16,174,174,174,174,174,174,]),'BY':([14,16,21,23,24,29,33,46,57,59,60,61,62,63,64,65,66,68,70,71,72,73,74,75,76,77,79,80,83,84,86,87,88,89,105,132,152,200,206,214,215,216,222,243,250,252,254,258,259,260,263,306,324,326,331,333,],[-57,-186,-17,-58,-59,-185,-61,-60,-77,-75,-133,-79,-83,-85,-127,-132,-86,-88,-115,-82,-81,-56,-131,-93,-122,-62,-74,-84,-102,-78,-94,-76,-80,-87,-63,-134,-128,-187,-197,-92,-123,-103,-116,-69,-188,-64,-198,-181,303,-177,-89,-95,-72,-66,-90,-96,]),'ABS':([0,1,2,4,6,7,12,20,22,31,38,41,47,49,52,55,58,69,81,82,85,90,95,102,103,104,106,107,108,109,110,111,115,118,119,120,122,123,124,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,187,189,192,196,208,212,221,226,227,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,272,294,300,303,309,311,319,322,323,329,],[11,11,-8,11,-6,-2,-5,-7,11,11,-4,11,-158,11,11,11,11,-129,11,11,-130,-135,11,-3,-149,-152,-151,-150,11,-153,-148,-147,11,11,11,11,11,11,-159,-125,-124,11,-126,11,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,11,-119,-120,-118,11,-121,-117,-23,11,-9,11,-18,11,11,11,11,-136,-207,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-210,11,11,11,11,-211,11,11,11,11,]),'NULL':([4,22,41,49,58,69,81,82,85,103,104,106,107,108,109,110,111,115,118,119,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[89,89,89,89,89,-129,89,89,-130,-149,-152,-151,-150,89,-153,-148,-147,89,89,89,89,-125,-124,89,-126,89,-106,-104,-112,-105,-114,-108,-107,-110,-109,-111,-113,89,-119,-120,-118,89,-121,-117,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'DIVCREASE':([14,16,21,23,24,26,29,33,35,44,46,105,167,200,206,243,250,252,254,324,326,],[-57,-186,-17,-58,-59,-62,-185,-61,104,-56,-60,-63,-56,-187,-197,-69,-188,-64,-198,-72,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'identifier_list':([8,19,37,114,161,186,231,316,],[92,96,112,112,92,96,273,273,]),'result_attribute':([335,],[347,]),'expression':([4,22,41,49,58,81,108,115,118,119,120,150,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[56,56,116,116,133,116,188,193,198,202,198,217,240,258,268,279,279,279,288,289,290,292,116,198,202,290,116,310,258,202,116,290,279,343,258,]),'parenthesized_expression':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'assigning_operator':([35,],[108,]),'formal_parameter':([231,316,],[275,338,]),'bracketed_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'arithmetic_additive_operator':([83,216,],[158,158,]),'string_element':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'iteration':([53,],[128,]),'else_expression':([220,266,],[264,308,]),'literal_range':([233,235,236,322,323,],[280,282,283,283,282,]),'while_control':([1,129,],[48,210,]),'procedure_definition':([95,],[164,]),'upper_bound':([242,262,319,],[291,305,339,]),'builtin_call':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'range_enumeration':([53,],[126,]),'operand4':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[64,64,64,64,64,64,152,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'control_part':([1,],[50,]),'then_expression':([151,307,334,],[220,332,346,]),'synonym_statement':([0,31,165,228,],[12,12,12,12,]),'label_id':([0,1,30,31,52,122,165,196,208,228,245,247,294,],[13,51,100,13,51,51,13,51,51,13,51,51,51,]),'expression_list':([115,],[195,]),'lower_bound':([115,150,233,235,236,322,323,],[194,218,281,281,281,281,281,]),'character_mode':([96,112,159,177,211,236,261,273,312,321,322,],[179,179,179,179,179,179,179,179,179,179,179,]),'exit_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string_mode':([96,112,159,177,273,312,321,],[184,184,184,184,184,184,184,]),'element_mode':([321,],[340,]),'initialization':([185,],[238,]),'end_value':([259,301,],[299,328,]),'result_spec':([230,],[270,]),'formal_parameter_list':([231,],[274,]),'step_enumeration':([53,],[127,]),'procedure_statement':([0,31,165,228,],[20,20,20,20,]),'return_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'operator2':([83,216,],[156,156,]),'membership_operator':([75,],[142,]),'right_element':([253,],[298,]),'start_element':([119,],[204,]),'program':([0,],[36,]),'parameter_attribute':([314,],[336,]),'discrete_mode':([96,112,159,177,211,236,261,273,312,321,322,],[172,172,172,172,257,284,304,172,172,172,284,]),'closed_dyadic_operator':([35,],[110,]),'statement_list':([0,165,],[31,228,]),'discrete_expression':([212,300,329,],[260,327,345,]),'array_slice':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'character_string_literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'formal_procedure_head':([95,],[165,]),'synonym_list':([37,],[114,]),'array_location':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'arithmetic_multiplicative_operator':([70,222,],[136,136,]),'parameter_list':([118,120,323,],[201,207,201,]),'step_value':([259,],[301,]),'do_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'integer_expression':([119,150,253,303,],[203,219,297,330,]),'elsif_expression':([220,],[266,]),'discrete_range_mode':([96,112,159,177,211,236,261,273,312,321,322,],[183,183,183,183,183,183,183,183,183,183,183,]),'value_array_slice':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'left_element':([119,],[205,]),'parenthesis_gambiarra':([166,],[230,]),'declaration_list':([19,],[97,]),'dereferenced_reference':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'action_statement':([0,1,31,52,122,165,196,208,228,245,247,294,],[2,47,2,124,47,2,47,124,2,124,47,124,]),'parameter':([118,120,251,323,],[199,199,296,199,]),'index_mode_list':([236,],[285,]),'value_array_element':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'primitive_value':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[5,5,5,5,163,5,163,5,5,5,5,5,5,5,]),'boolean_literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'newmode_statement':([0,31,165,228,],[6,6,6,6,]),'statement':([0,31,165,228,],[7,102,7,102,]),'declaration':([19,186,],[98,239,]),'start_value':([212,],[259,]),'literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'mode_definition':([8,161,],[91,225,]),'operator1':([75,],[138,]),'if_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'string_concatenation_operator':([83,216,],[155,155,]),'referenced_location':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'array_mode':([96,112,159,177,273,312,321,],[176,176,176,176,176,176,176,]),'result':([4,22,],[67,99,]),'parameter_spec':([273,],[313,]),'mode_name':([96,112,159,177,273,312,321,],[170,170,170,170,170,170,170,]),'action_statement_list':([1,122,196,247,],[52,208,245,294,]),'array_element':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'integer_literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,232,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,277,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'string_length':([232,],[278,]),'operand2':([4,22,41,49,58,81,108,115,118,119,120,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[70,70,70,70,70,70,70,70,70,70,70,70,70,222,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'mode':([96,112,159,177,273,312,321,],[185,190,223,234,314,335,341,]),'boolean_expression':([41,49,81,246,265,309,],[117,121,151,293,307,334,]),'empty_literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'index_mode':([236,322,],[286,342,]),'character_literal':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'newmode_list':([8,],[94,]),'integer_mode':([96,112,159,177,211,236,261,273,312,321,322,],[169,169,169,169,169,169,169,169,169,169,169,]),'builtin_name':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'string_slice':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'conditional_expression':([4,22,41,49,58,81,108,115,118,119,120,150,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'operand3':([4,22,41,49,58,81,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[76,76,76,76,76,76,76,76,76,76,76,215,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'call_action':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[26,26,77,77,26,77,77,26,77,77,77,77,26,77,77,77,77,77,26,26,77,77,77,77,26,77,26,26,77,77,26,77,77,77,77,77,77,77,26,77,26,77,77,77,77,77,26,77,77,77,77,77,77,77,]),'for_control':([53,],[129,]),'array_primitive_value':([4,22,41,49,58,81,82,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'procedure_call':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'composite_mode':([96,112,159,177,273,312,321,],[175,175,175,175,175,175,175,]),'location':([0,1,4,22,31,41,49,52,55,58,81,82,95,108,115,118,119,120,122,123,136,138,150,156,165,189,196,208,212,221,228,233,235,236,237,241,242,244,245,246,247,251,253,262,265,267,294,300,303,309,319,322,323,329,],[35,35,74,74,35,74,74,35,132,74,74,74,35,74,74,74,74,74,35,35,74,74,74,74,35,74,35,35,74,74,35,74,74,74,74,74,74,74,35,74,35,74,74,74,74,74,35,74,74,74,74,74,74,74,]),'then_clause':([117,293,],[197,325,]),'declaration_statement':([0,31,165,228,],[38,38,38,38,]),'assignment_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'else_clause':([197,325,],[249,344,]),'monadic_operator':([4,22,41,49,58,81,108,115,118,119,120,136,138,150,156,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'operand1':([4,22,41,49,58,81,108,115,118,119,120,138,150,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[83,83,83,83,83,83,83,83,83,83,83,216,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'reference_mode':([96,112,159,177,273,312,321,],[178,178,178,178,178,178,178,]),'synonym_definition':([37,114,],[113,191,]),'result_action':([0,1,31,52,95,122,123,165,196,208,228,245,247,294,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'identifier':([0,1,4,8,19,22,30,31,37,41,49,52,53,55,58,81,82,95,96,108,112,114,115,118,119,120,122,123,136,138,150,156,159,160,161,165,177,186,189,196,208,211,212,221,228,231,233,235,236,237,241,242,244,245,246,247,251,253,261,262,265,267,273,294,300,303,309,312,316,319,321,322,323,329,],[44,44,73,93,93,73,101,44,93,73,73,44,130,73,73,73,73,167,180,73,180,93,73,73,73,73,44,167,73,73,73,73,180,224,93,44,180,93,73,44,44,256,73,73,44,93,73,73,287,73,73,73,73,44,73,44,73,73,256,73,73,73,180,44,73,73,73,180,93,73,180,287,73,73,]),'relational_operator':([75,],[140,]),'operand0':([4,22,41,49,58,81,108,115,118,119,120,150,189,212,221,233,235,236,237,241,242,244,246,251,253,262,265,267,300,303,309,319,322,323,329,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'boolean_mode':([96,112,159,177,211,236,261,273,312,321,322,],[182,182,182,182,182,182,182,182,182,182,182,]),'loop_counter':([53,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',29),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',30),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',41),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',46),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',51),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',52),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',59),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',60),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',73),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',74),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',81),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',88),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','parser.py',104),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','parser.py',105),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',131),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',137),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',138),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',139),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',140),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',145),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',146),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',153),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',158),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',163),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',168),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',169),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',176),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',186),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',191),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',197),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',221),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',227),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',233),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',234),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',241),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',242),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',247),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',253),
  ('location -> identifier','location',1,'p_location','parser.py',259),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',260),
  ('location -> string_element','location',1,'p_location','parser.py',261),
  ('location -> string_slice','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',270),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',276),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',282),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',288),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',298),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',304),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',310),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',316),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',317),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',324),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',330),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',336),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',337),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',338),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',339),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',345),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',346),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',347),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',348),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',349),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',354),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',360),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',361),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',368),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',374),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',381),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',387),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',393),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',399),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',405),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',417),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',418),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',427),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',433),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',439),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',445),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',446),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',455),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',456),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',463),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',464),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',469),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',470),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',471),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',472),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',473),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',474),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',476),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',481),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',486),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',487),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',495),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',496),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',501),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',502),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',508),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',512),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',513),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',520),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',521),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',522),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',527),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',528),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',536),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',537),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',542),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',543),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',544),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',549),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',554),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',555),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',564),
  ('action -> bracketed_action','action',1,'p_action','parser.py',569),
  ('action -> assignment_action','action',1,'p_action','parser.py',570),
  ('action -> call_action','action',1,'p_action','parser.py',571),
  ('action -> exit_action','action',1,'p_action','parser.py',572),
  ('action -> return_action','action',1,'p_action','parser.py',573),
  ('action -> result_action','action',1,'p_action','parser.py',574),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',579),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',580),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',585),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',604),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',605),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',610),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',611),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',612),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',613),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',614),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',619),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',620),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',629),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',630),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',639),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',640),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',647),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',648),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',649),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',650),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',665),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',666),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',667),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',668),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',682),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',683),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',684),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',693),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',698),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',699),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',704),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',705),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',712),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',717),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',722),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',727),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',728),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',736),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',741),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',742),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',749),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',753),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',754),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',759),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',760),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',767),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',768),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',775),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',783),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',787),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',788),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',795),
  ('result -> expression','result',1,'p_result','parser.py',799),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',804),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',805),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',812),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',813),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',814),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',815),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',816),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',817),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',818),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',819),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',823),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',827),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',828),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',835),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',836),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',843),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',844),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',851),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',852),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',859),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',863),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',864),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',871),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',876),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','parser.py',877),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',884),
]
