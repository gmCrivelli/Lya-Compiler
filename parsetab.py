
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST RETURN FALSE REF ELSIF READ NUM INT LOWER NULL ASC ARRAY BY CHARS TO ABS IN UPPER IF DO TRUE RESULT DCL PROC BOOL THEN SYN WHILE EXIT FI DOWN CHAR LOC ELSE LENGTH OD END PRINT TYPE RETURNS FORprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'OR':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,129,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'SEMI':([1,5,6,7,9,11,12,14,17,20,21,22,27,39,40,42,45,46,50,52,54,55,56,57,58,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,98,99,100,102,104,109,111,113,115,117,121,123,143,152,158,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,180,183,185,190,191,192,193,195,197,200,204,208,209,210,212,214,218,219,225,229,232,233,234,236,237,242,244,245,249,253,256,258,265,275,279,280,283,286,287,288,298,301,306,307,308,313,320,321,324,325,327,328,333,335,336,],[-135,-17,-178,-59,-134,-133,53,-137,-179,-132,-187,-131,-136,-138,-57,-58,-186,-185,126,-25,-70,-68,-86,-120,-90,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-190,-189,-188,-10,177,-157,188,-161,196,-19,203,206,-121,-127,-139,-47,-36,-34,-38,-28,-46,-12,-41,-37,-33,-32,-29,-31,-30,-35,-180,-191,-159,-165,-162,-166,-164,-177,-20,-62,-202,255,-26,-27,-96,-147,-109,-85,-116,-13,-45,-11,-181,-192,-158,-163,-23,-21,-203,-206,293,-148,-82,-14,-160,-175,-174,-22,-65,-207,-88,-48,-39,-40,-176,-167,-89,-83,-54,-49,-168,-172,-213,-173,-214,]),'MODCREASE':([5,6,7,11,16,17,33,40,42,79,91,180,183,200,234,236,287,],[-17,-178,-59,-60,95,-179,-56,-57,-58,-56,-61,-180,-191,-62,-181,-192,-65,]),'PRINT':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[26,-6,26,26,-4,26,-8,26,-5,-7,26,-2,26,26,-128,-123,26,26,26,-122,26,-141,-142,-143,-144,-145,-146,26,-140,-3,26,26,26,-151,26,26,-24,-100,-101,-98,-104,26,-99,-97,-102,-107,-103,-106,-105,26,-113,-110,-111,-114,26,-112,26,26,-119,-117,-118,-9,-152,26,26,-18,26,26,26,-129,26,-201,26,26,26,26,26,26,26,26,26,26,26,26,-204,26,26,26,26,-205,26,26,26,26,26,26,26,]),'EXIT':([0,8,19,24,25,31,36,37,41,48,53,101,107,110,122,126,142,177,186,187,188,196,203,205,206,216,217,238,255,259,293,],[2,-6,-4,-8,2,-5,-7,2,-2,2,-128,-3,2,-151,2,-24,2,-9,-152,2,2,-18,-129,2,-201,2,2,2,-204,2,-205,]),'INT':([5,49,103,116,127,176,211,227,239,251,282,292,303,304,],[-17,-15,161,161,161,161,-16,161,161,161,161,161,161,161,]),'DECREASE':([5,6,7,11,16,17,33,40,42,79,91,180,183,200,234,236,287,],[-17,-178,-59,-60,92,-179,-56,-57,-58,-56,-61,-180,-191,-62,-181,-192,-65,]),'NOT':([13,18,21,47,69,70,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[59,59,59,59,59,59,-141,-142,-143,-144,-145,-146,59,-140,59,59,59,-100,-101,-98,-104,59,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,59,-112,59,59,-119,-117,-118,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'RBRACKET':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,118,119,143,152,161,162,163,169,170,171,175,180,183,200,212,218,219,222,223,225,234,236,246,247,248,265,267,269,270,272,273,287,298,300,306,307,320,321,323,326,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,200,-63,-121,-127,-36,-34,-38,-37,-33,-32,-35,-180,-191,-62,-96,-109,-85,-55,265,-116,-181,-192,-64,-44,287,-82,301,-50,-53,304,-52,-65,-88,321,-39,-40,-89,-83,-51,-42,]),'END':([8,19,24,31,36,41,53,101,122,126,177,196,203,205,206,255,293,],[-6,-4,-8,-5,-7,-2,-128,-3,204,-24,-9,-18,-129,249,-201,-204,-205,]),'COLON':([4,5,6,7,17,33,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,108,119,120,143,152,180,183,200,212,218,219,222,224,225,234,236,265,268,271,274,287,298,320,321,322,],[48,-17,-178,-59,-179,-130,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,187,-43,202,-121,-127,-180,-191,-62,-96,-109,-85,-43,266,-116,-181,-192,-82,-43,-56,305,-65,-88,-89,-83,-43,]),'DIFF':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,136,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'ASC':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[15,-6,15,15,-4,15,-8,15,-5,-7,15,-2,15,15,-128,-123,15,15,15,-122,15,-141,-142,-143,-144,-145,-146,15,-140,-3,15,15,15,-151,15,15,-24,-100,-101,-98,-104,15,-99,-97,-102,-107,-103,-106,-105,15,-113,-110,-111,-114,15,-112,15,15,-119,-117,-118,-9,-152,15,15,-18,15,15,15,-129,15,-201,15,15,15,15,15,15,15,15,15,15,15,15,-204,15,15,15,15,-205,15,15,15,15,15,15,15,]),'OD':([37,53,107,110,186,188,203,238,],[109,-128,185,-151,-152,237,-129,279,]),'TYPE':([0,8,19,24,25,31,36,41,53,101,122,126,177,196,203,205,206,255,293,],[10,-6,-4,-8,10,-5,-7,-2,-128,-3,10,-24,-9,-18,-129,10,-201,-204,-205,]),'ARRAY':([5,49,103,116,127,176,211,251,292,304,],[-17,-15,166,166,166,166,-16,166,166,166,]),'RPAREN':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,105,106,143,150,152,160,161,162,163,164,165,168,169,170,171,172,173,174,175,179,180,181,182,183,184,200,207,212,218,219,225,232,234,236,247,250,252,265,276,277,278,287,290,291,298,301,302,306,307,314,315,316,320,321,322,324,325,326,332,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,180,183,-121,219,-127,-47,-36,-34,-38,-28,-46,-41,-37,-33,-32,-29,-31,-30,-35,-184,-180,-182,234,-191,236,-62,253,-96,-109,-85,-116,-45,-181,-192,-44,288,-208,-82,306,307,-183,-65,-211,-210,-88,-48,180,-39,-40,-209,-212,333,-89,-83,-184,-54,-49,-42,336,]),'PLUS':([5,6,7,17,40,42,54,55,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-120,-79,-67,-60,-75,-76,-71,149,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,149,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'DIVIDE':([5,6,7,17,40,42,54,55,57,61,63,64,65,66,67,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-120,-79,-67,-60,-75,-76,-71,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,157,-125,-78,-81,-61,-121,-127,-180,-191,-62,157,-85,-116,-181,-192,-82,-56,-65,-83,]),'FI':([5,6,7,17,40,42,53,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,110,141,142,143,152,180,183,186,200,203,212,215,216,217,218,219,225,234,236,259,263,265,287,294,297,298,299,317,320,321,],[-17,-178,-59,-179,-57,-58,-128,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-151,214,-149,-121,-127,-180,-191,-152,-62,-129,-96,258,-153,-150,-109,-85,-116,-181,-192,-154,298,-82,-65,-155,320,-88,-92,-156,-89,-83,]),'CCONST':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[61,61,61,61,-123,61,61,61,-122,-141,-142,-143,-144,-145,-146,61,-140,61,61,61,-100,-101,-98,-104,61,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,61,-112,61,61,-119,-117,-118,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'UPPER':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[34,-6,34,34,-4,34,-8,34,-5,-7,34,-2,34,34,-128,-123,34,34,34,-122,34,-141,-142,-143,-144,-145,-146,34,-140,-3,34,34,34,-151,34,34,-24,-100,-101,-98,-104,34,-99,-97,-102,-107,-103,-106,-105,34,-113,-110,-111,-114,34,-112,34,34,-119,-117,-118,-9,-152,34,34,-18,34,34,34,-129,34,-201,34,34,34,34,34,34,34,34,34,34,34,34,-204,34,34,34,34,-205,34,34,34,34,34,34,34,]),'TIMES':([5,6,7,17,40,42,54,55,57,61,63,64,65,66,67,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-120,-79,-67,-60,-75,-76,-71,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,156,-125,-78,-81,-61,-121,-127,-180,-191,-62,156,-85,-116,-181,-192,-82,-56,-65,-83,]),'ELSE':([5,6,7,17,40,42,53,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,110,141,142,143,152,180,183,186,200,203,212,217,218,219,221,225,234,236,260,262,265,287,294,298,318,320,321,334,],[-17,-178,-59,-179,-57,-58,-128,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-151,216,-149,-121,-127,-180,-191,-152,-62,-129,-96,-150,-109,-85,264,-116,-181,-192,-91,264,-82,-65,216,-88,-93,-89,-83,-94,]),'MULCREASE':([5,6,7,11,16,17,33,40,42,79,91,180,183,200,234,236,287,],[-17,-178,-59,-60,93,-179,-56,-57,-58,-56,-61,-180,-191,-62,-181,-192,-65,]),'RETURNS':([208,253,288,],[254,-206,-207,]),'BY':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,283,284,285,287,298,320,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-174,311,-170,-65,-88,-89,-83,]),'IF':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,69,70,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,142,153,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[13,-6,70,70,-4,70,-8,13,-5,-7,13,-2,70,13,-128,70,70,-141,-142,-143,-144,-145,-146,70,-140,-3,70,70,13,-151,70,13,-24,13,70,-9,-152,13,13,-18,70,70,70,-129,13,-201,70,13,13,70,70,70,70,70,70,13,70,70,-204,13,70,70,70,-205,70,70,70,70,70,70,70,]),'MOD':([5,6,7,17,40,42,54,55,57,61,63,64,65,66,67,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-120,-79,-67,-60,-75,-76,-71,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,155,-125,-78,-81,-61,-121,-127,-180,-191,-62,155,-85,-116,-181,-192,-82,-56,-65,-83,]),'MINUS':([5,6,7,13,17,18,21,40,42,47,54,55,57,61,63,64,65,66,67,68,69,70,71,73,75,76,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,148,149,152,153,154,155,156,157,180,183,199,200,201,202,212,213,218,219,220,225,227,228,230,231,234,235,236,241,243,261,264,265,266,271,287,296,302,303,305,310,311,321,331,],[-17,-178,-59,72,-179,72,72,-57,-58,72,-70,-68,-120,-79,-67,-60,-75,-76,-71,144,72,72,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-141,-142,-61,-143,-144,-145,-146,72,-140,72,72,72,-100,-101,-98,-104,72,-99,-97,-102,-107,-103,-106,-105,-121,-113,-110,-111,-114,72,-112,-127,72,72,-119,-117,-118,-180,-191,72,-62,72,72,144,72,-109,-85,72,-116,72,72,72,72,-181,72,-192,72,72,72,72,-82,72,-56,-65,72,72,72,72,72,72,-83,72,]),'ARROW':([5,6,7,11,13,16,17,18,21,33,40,42,47,59,62,64,69,70,72,73,79,89,90,91,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,152,153,154,155,156,157,180,183,199,200,201,202,213,220,227,228,230,231,234,235,236,241,243,261,264,266,271,287,296,302,303,305,310,311,331,],[-17,-178,-59,-60,74,91,-179,74,74,-56,-57,-58,74,-123,74,-60,74,74,-122,91,-56,-141,-142,-61,-143,-144,-145,-146,74,-140,74,74,74,-100,-101,-98,-104,74,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,74,-112,91,74,74,-119,-117,-118,-180,-191,74,-62,74,74,74,74,74,74,74,74,-181,74,-192,74,74,74,74,74,-56,-65,74,74,74,74,74,74,74,]),'RESULT':([0,8,19,24,25,31,36,37,41,48,53,101,107,110,122,126,142,177,186,187,188,196,203,205,206,216,217,238,255,259,293,],[18,-6,-4,-8,18,-5,-7,18,-2,18,-128,-3,18,-151,18,-24,18,-9,-152,18,18,-18,-129,18,-201,18,18,18,-204,18,-205,]),'ICONST':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,226,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[66,66,66,66,-123,66,66,66,-122,-141,-142,-143,-144,-145,-146,66,-140,66,66,66,-100,-101,-98,-104,66,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,66,-112,66,66,-119,-117,-118,66,66,66,66,66,267,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DO':([0,8,19,24,25,31,36,37,41,48,53,101,107,110,122,126,142,177,186,187,188,196,203,205,206,216,217,238,255,259,293,],[37,-6,-4,-8,37,-5,-7,37,-2,37,-128,-3,37,-151,37,-24,37,-9,-152,37,37,-18,-129,37,-201,37,37,37,-204,37,-205,]),'COMMA':([5,6,7,17,40,42,49,50,51,52,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,102,103,104,116,118,119,143,152,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,179,180,181,182,183,184,200,209,210,211,212,218,219,225,229,232,233,234,236,246,247,250,251,252,265,269,270,272,273,275,278,287,290,291,298,301,306,307,314,315,320,321,322,323,324,325,326,],[-17,-178,-59,-179,-57,-58,-15,125,128,-25,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-10,128,178,128,201,-63,-121,-127,-47,-36,-34,-38,-28,-46,-12,-41,-37,-33,-32,-29,-31,-30,-35,-184,-180,-182,235,-191,235,-62,-26,-27,-16,-96,-109,-85,-116,-13,-45,-11,-181,-192,-64,-44,289,128,-208,-82,-50,-53,303,-52,-14,-183,-65,-211,-210,-88,-48,-39,-40,-209,-212,-89,-83,-184,-51,-54,-49,-42,]),'REF':([5,49,103,116,127,176,211,251,292,304,],[-17,-15,176,176,176,176,-16,176,176,176,]),'CHARS':([5,49,103,116,127,176,211,251,292,304,],[-17,-15,159,159,159,159,-16,159,159,159,]),'ABS':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[23,-6,23,23,-4,23,-8,23,-5,-7,23,-2,23,23,-128,-123,23,23,23,-122,23,-141,-142,-143,-144,-145,-146,23,-140,-3,23,23,23,-151,23,23,-24,-100,-101,-98,-104,23,-99,-97,-102,-107,-103,-106,-105,23,-113,-110,-111,-114,23,-112,23,23,-119,-117,-118,-9,-152,23,23,-18,23,23,23,-129,23,-201,23,23,23,23,23,23,23,23,23,23,23,23,-204,23,23,23,23,-205,23,23,23,23,23,23,23,]),'TO':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,283,284,285,287,298,309,312,320,321,329,330,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-174,310,-170,-65,-88,310,331,-89,-83,-55,-171,]),'EQUAL':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,130,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'STRCAT':([5,6,7,17,40,42,54,55,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-120,-79,-67,-60,-75,-76,-71,147,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,147,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'IN':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,189,194,200,212,218,219,225,234,236,240,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,137,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,239,-169,-62,-96,-109,-85,-116,-181,-192,282,-82,-56,-65,-83,]),'GREATEREQ':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,132,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'READ':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[28,-6,28,28,-4,28,-8,28,-5,-7,28,-2,28,28,-128,-123,28,28,28,-122,28,-141,-142,-143,-144,-145,-146,28,-140,-3,28,28,28,-151,28,28,-24,-100,-101,-98,-104,28,-99,-97,-102,-107,-103,-106,-105,28,-113,-110,-111,-114,28,-112,28,28,-119,-117,-118,-9,-152,28,28,-18,28,28,28,-129,28,-201,28,28,28,28,28,28,28,28,28,28,28,28,-204,28,28,28,28,-205,28,28,28,28,28,28,28,]),'NUM':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[29,-6,29,29,-4,29,-8,29,-5,-7,29,-2,29,29,-128,-123,29,29,29,-122,29,-141,-142,-143,-144,-145,-146,29,-140,-3,29,29,29,-151,29,29,-24,-100,-101,-98,-104,29,-99,-97,-102,-107,-103,-106,-105,29,-113,-110,-111,-114,29,-112,29,29,-119,-117,-118,-9,-152,29,29,-18,29,29,29,-129,29,-201,29,29,29,29,29,29,29,29,29,29,29,29,-204,29,29,29,29,-205,29,29,29,29,29,29,29,]),'LESSEQ':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,139,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'$end':([8,19,24,25,31,32,36,41,53,101,126,177,196,203,206,],[-6,-4,-8,-1,-5,0,-7,-2,-128,-3,-24,-9,-18,-129,-201,]),'DOWN':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,189,194,200,212,218,219,225,234,236,265,283,284,285,287,298,309,320,321,329,330,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,240,-169,-62,-96,-109,-85,-116,-181,-192,-82,-174,312,-170,-65,-88,312,-89,-83,-55,-171,]),'DCL':([0,8,19,24,25,31,36,41,53,101,122,126,177,196,203,205,206,255,293,],[30,-6,-4,-8,30,-5,-7,-2,-128,-3,30,-24,-9,-18,-129,30,-201,-204,-205,]),'ID':([0,2,5,6,7,8,10,13,17,18,19,21,24,25,30,31,36,37,40,41,42,44,47,48,49,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,103,105,106,107,110,112,114,115,116,117,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,152,153,154,155,156,157,176,177,178,180,183,186,187,188,196,197,199,200,201,202,203,205,206,207,211,212,213,216,217,218,219,220,225,227,228,230,231,234,235,236,238,239,241,243,244,245,251,255,259,261,264,265,266,282,286,287,289,292,293,296,298,302,303,304,305,310,311,320,321,331,],[5,5,-17,-178,-59,-6,5,5,-179,5,-4,5,-8,5,5,-5,-7,5,-57,-2,-58,5,5,5,-15,-128,-70,-68,-86,-120,-123,-79,5,-67,-60,-75,-76,-71,-95,5,5,-126,-122,-124,5,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-141,-142,-61,-143,-144,-145,-146,5,-140,-3,5,5,5,5,-151,5,5,5,5,-19,5,5,-24,5,5,-100,-101,-98,-104,5,-99,-97,-102,-107,-103,-106,-105,5,-121,-113,-110,-111,-114,5,-112,-127,5,5,-119,-117,-118,5,-9,5,-180,-191,-152,5,5,-18,-20,5,-62,5,5,-129,5,-201,5,-16,-96,5,5,5,-109,-85,5,-116,5,5,5,5,-181,5,-192,5,5,5,5,-23,-21,5,-204,5,5,5,-82,5,5,-22,-65,5,5,-205,5,-88,5,5,5,5,5,5,-89,-83,5,]),'LOC':([5,160,161,162,163,164,165,168,169,170,171,172,173,174,175,232,290,301,306,307,316,324,325,],[-17,-47,-36,-34,-38,-28,-46,-41,-37,-33,-32,-29,-31,-30,-35,-45,315,-48,-39,-40,332,-54,-49,]),'NULL':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[78,78,78,78,-123,78,78,78,-122,-141,-142,-143,-144,-145,-146,78,-140,78,78,78,-100,-101,-98,-104,78,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,78,-112,78,78,-119,-117,-118,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'TRUE':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[87,87,87,87,-123,87,87,87,-122,-141,-142,-143,-144,-145,-146,87,-140,87,87,87,-100,-101,-98,-104,87,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,87,-112,87,87,-119,-117,-118,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'BOOL':([5,49,103,116,127,176,211,227,239,251,282,292,303,304,],[-17,-15,169,169,169,169,-16,169,169,169,169,169,169,169,]),'INCREASE':([5,6,7,11,16,17,33,40,42,79,91,180,183,200,234,236,287,],[-17,-178,-59,-60,90,-179,-56,-57,-58,-56,-61,-180,-191,-62,-181,-192,-65,]),'FALSE':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[82,82,82,82,-123,82,82,82,-122,-141,-142,-143,-144,-145,-146,82,-140,82,82,82,-100,-101,-98,-104,82,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,82,-112,82,82,-119,-117,-118,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'LPAREN':([5,13,15,18,21,23,26,28,29,33,34,35,38,43,47,59,62,69,70,72,79,89,90,92,93,94,95,96,97,105,106,114,124,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,161,162,163,168,169,170,171,172,175,199,201,202,213,220,227,228,230,231,235,241,243,254,261,264,266,271,273,280,281,296,302,303,305,306,307,308,310,311,331,],[-17,69,-194,69,69,-193,-200,-199,-195,105,-196,106,-198,-197,69,-123,69,69,69,-122,105,-141,-142,-143,-144,-145,-146,69,-140,69,69,69,207,-100,-101,-98,-104,69,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,69,-112,69,69,-119,-117,-118,-36,-34,-38,230,-37,-33,-32,231,-35,69,69,69,69,69,69,69,69,69,69,69,69,292,69,69,69,302,231,231,230,69,69,69,69,-39,-40,231,69,69,69,]),'LENGTH':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[38,-6,38,38,-4,38,-8,38,-5,-7,38,-2,38,38,-128,-123,38,38,38,-122,38,-141,-142,-143,-144,-145,-146,38,-140,-3,38,38,38,-151,38,38,-24,-100,-101,-98,-104,38,-99,-97,-102,-107,-103,-106,-105,38,-113,-110,-111,-114,38,-112,38,38,-119,-117,-118,-9,-152,38,38,-18,38,38,38,-129,38,-201,38,38,38,38,38,38,38,38,38,38,38,38,-204,38,38,38,38,-205,38,38,38,38,38,38,38,]),'SCONST':([13,18,21,47,59,62,69,70,72,89,90,92,93,94,95,96,97,105,106,114,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,153,154,155,156,157,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[88,88,88,88,-123,88,88,88,-122,-141,-142,-143,-144,-145,-146,88,-140,88,88,88,-100,-101,-98,-104,88,-99,-97,-102,-107,-103,-106,-105,-113,-110,-111,-114,88,-112,88,88,-119,-117,-118,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'PROC':([48,],[124,]),'FOR':([37,],[112,]),'WHILE':([5,6,7,17,37,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,143,152,161,162,163,169,170,171,175,180,183,190,191,192,193,200,212,218,219,225,234,236,265,280,283,287,298,306,307,308,313,320,321,327,328,335,],[-17,-178,-59,-179,114,-57,-58,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-36,-34,-38,-37,-33,-32,-35,-180,-191,-165,114,-166,-164,-62,-96,-109,-85,-116,-181,-192,-82,-175,-174,-65,-88,-39,-40,-176,-167,-89,-83,-168,-172,-173,]),'CHAR':([5,49,103,116,127,176,211,227,239,251,282,292,303,304,],[-17,-15,163,163,163,163,-16,163,163,163,163,163,163,163,]),'ELSIF':([5,6,7,17,40,42,53,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,110,141,142,143,152,180,183,186,200,203,212,217,218,219,221,225,234,236,260,262,265,287,294,298,318,320,321,334,],[-17,-178,-59,-179,-57,-58,-128,-70,-68,-86,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-151,213,-149,-121,-127,-180,-191,-152,-62,-129,-96,-150,-109,-85,261,-116,-181,-192,-91,296,-82,-65,213,-88,-93,-89,-83,-94,]),'AND':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,134,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'LBRACKET':([3,5,6,7,11,16,17,33,40,42,54,55,61,63,64,65,66,67,71,73,75,76,78,79,80,81,82,83,87,88,91,152,159,166,180,183,200,219,234,236,265,271,287,321,],[47,-17,-178,-59,-60,-66,-179,-56,-57,-58,-70,-68,-79,-67,-60,-75,-76,-71,-84,-66,-73,-69,-80,-56,-74,-72,-77,153,-78,-81,-61,-66,226,227,-180,-191,-62,-85,-181,-192,-82,-56,-65,-83,]),'LESS':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,140,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'THEN':([5,6,7,17,40,42,54,55,56,57,58,60,61,63,64,65,66,67,68,71,73,75,76,77,78,79,80,81,82,84,85,86,87,88,91,143,151,152,180,183,200,212,218,219,225,234,236,257,265,287,295,298,319,320,321,],[-17,-178,-59,-179,-57,-58,-70,-68,-86,-120,-90,142,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-87,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,220,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,142,-82,-65,220,-88,220,-89,-83,]),'GREATER':([5,6,7,17,40,42,54,55,56,57,61,63,64,65,66,67,68,71,73,75,76,78,79,80,81,82,84,85,86,87,88,91,143,152,180,183,200,212,218,219,225,234,236,265,271,287,321,],[-17,-178,-59,-179,-57,-58,-70,-68,138,-120,-79,-67,-60,-75,-76,-71,-95,-126,-124,-73,-69,-80,-56,-74,-72,-77,-115,-108,-125,-78,-81,-61,-121,-127,-180,-191,-62,-96,-109,-85,-116,-181,-192,-82,-56,-65,-83,]),'DIVCREASE':([5,6,7,11,16,17,33,40,42,79,91,180,183,200,234,236,287,],[-17,-178,-59,-60,94,-179,-56,-57,-58,-56,-61,-180,-191,-62,-181,-192,-65,]),'RETURN':([0,8,19,24,25,31,36,37,41,48,53,101,107,110,122,126,142,177,186,187,188,196,203,205,206,216,217,238,255,259,293,],[21,-6,-4,-8,21,-5,-7,21,-2,21,-128,-3,21,-151,21,-24,21,-9,-152,21,21,-18,-129,21,-201,21,21,21,-204,21,-205,]),'LOWER':([0,8,13,18,19,21,24,25,31,36,37,41,47,48,53,59,62,69,70,72,74,89,90,92,93,94,95,96,97,101,105,106,107,110,114,122,126,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,148,149,153,154,155,156,157,177,186,187,188,196,199,201,202,203,205,206,213,216,217,220,227,228,230,231,235,238,241,243,255,259,261,264,266,293,296,302,303,305,310,311,331,],[43,-6,43,43,-4,43,-8,43,-5,-7,43,-2,43,43,-128,-123,43,43,43,-122,43,-141,-142,-143,-144,-145,-146,43,-140,-3,43,43,43,-151,43,43,-24,-100,-101,-98,-104,43,-99,-97,-102,-107,-103,-106,-105,43,-113,-110,-111,-114,43,-112,43,43,-119,-117,-118,-9,-152,43,43,-18,43,43,43,-129,43,-201,43,43,43,43,43,43,43,43,43,43,43,43,-204,43,43,43,43,-205,43,43,43,43,43,43,43,]),'ASSIGN':([5,6,7,11,16,17,33,40,42,49,51,79,91,116,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,180,183,189,194,198,200,211,232,234,236,287,301,306,307,324,325,],[-17,-178,-59,-60,97,-179,-56,-57,-58,-15,127,-56,-61,199,-47,-36,-34,-38,-28,-46,228,-41,-37,-33,-32,-29,-31,-30,-35,-180,-191,241,-169,243,-62,-16,-45,-181,-192,-65,-48,-39,-40,-54,-49,]),'SYN':([0,8,19,24,25,31,36,41,53,101,122,126,177,196,203,205,206,255,293,],[44,-6,-4,-8,44,-5,-7,-2,-128,-3,44,-24,-9,-18,-129,44,-201,-204,-205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parenthesized_expression':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'value_array_element':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'expression_list':([47,],[118,]),'expression':([13,18,21,47,69,70,96,105,106,114,153,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[58,98,98,119,150,58,158,179,179,58,222,244,246,247,58,260,268,275,268,268,179,283,244,58,299,247,58,322,268,247,283,329,283,]),'character_mode':([103,116,127,176,227,239,251,282,292,303,304,],[162,162,162,162,162,162,162,162,162,162,162,]),'statement':([0,25,122,205,],[41,101,41,101,]),'monadic_operator':([13,18,21,47,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'end_value':([284,309,],[313,327,]),'newmode_statement':([0,25,122,205,],[8,8,8,8,]),'integer_expression':([153,311,],[223,330,]),'identifier_list':([10,30,44,115,125,178,207,289,],[51,103,116,116,51,103,251,251,]),'call_action':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[11,64,64,64,11,11,64,11,64,64,64,64,64,64,64,11,64,11,64,11,64,64,64,11,11,64,64,64,11,64,11,11,64,64,64,64,64,64,11,64,64,11,64,64,64,64,64,64,64,64,64,64,]),'assigning_operator':([16,],[96,]),'mode':([103,116,127,176,251,292,304,],[167,198,210,232,290,316,324,]),'step_enumeration':([112,],[190,]),'closed_dyadic_operator':([16,],[89,]),'arithmetic_additive_operator':([68,212,],[145,145,]),'operand0':([13,18,21,47,69,70,96,105,106,114,153,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'parenthesis_gambiarra':([124,],[208,]),'index_mode':([227,303,],[269,323,]),'array_element':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'integer_literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'element_mode':([304,],[325,]),'if_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'composite_mode':([103,116,127,176,251,292,304,],[173,173,173,173,173,173,173,]),'identifier':([0,2,10,13,18,21,25,30,37,44,47,48,62,69,70,74,96,103,105,106,107,112,114,115,116,122,125,127,128,133,142,148,153,154,176,178,187,188,199,201,202,205,207,213,216,217,220,227,228,230,231,235,238,239,241,243,251,259,261,264,266,282,289,292,296,302,303,304,305,310,311,331,],[33,45,49,79,79,79,33,49,33,49,79,79,79,79,79,79,79,168,79,79,33,194,79,49,168,33,49,168,211,79,33,79,79,79,168,49,79,33,79,79,79,33,49,79,33,33,79,271,79,79,79,79,33,281,79,79,168,33,79,79,79,281,49,168,79,79,271,168,79,79,79,79,]),'initialization':([167,],[229,]),'then_clause':([60,257,],[141,294,]),'builtin_name':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'mode_definition':([10,125,],[52,209,]),'bracketed_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'array_mode':([103,116,127,176,251,292,304,],[160,160,160,160,160,160,160,]),'arithmetic_multiplicative_operator':([85,218,],[154,154,]),'loop_counter':([112,],[189,]),'action_statement':([0,25,37,107,122,142,188,205,216,217,238,259,],[24,24,110,186,24,110,110,24,110,186,186,186,]),'control_part':([37,],[111,]),'conditional_expression':([13,18,21,47,69,70,96,105,106,114,153,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'parameter':([105,106,235,302,],[181,181,278,181,]),'index_mode_list':([227,],[272,]),'procedure_definition':([48,],[123,]),'integer_mode':([103,116,127,176,227,239,251,282,292,303,304,],[171,171,171,171,171,171,171,171,171,171,171,]),'program':([0,],[32,]),'declaration':([30,178,],[102,233,]),'discrete_mode':([103,116,127,176,227,239,251,282,292,303,304,],[172,172,172,172,273,280,172,308,172,273,172,]),'boolean_literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'parameter_list':([105,106,302,],[182,184,182,]),'action_statement_list':([37,142,188,216,],[107,217,238,259,]),'boolean_expression':([13,70,114,213,261,296,],[60,151,195,257,295,319,]),'synonym_definition':([44,115,],[117,197,]),'constant_expression':([199,243,],[245,286,]),'operator1':([56,],[133,]),'relational_operator':([56,],[135,]),'assignment_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'newmode_list':([10,],[50,]),'referenced_location':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'step_value':([284,],[309,]),'elsif_expression':([221,],[262,]),'return_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'character_literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operand4':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[57,57,57,57,143,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'label_id':([0,25,37,107,122,142,188,205,216,217,238,259,],[4,4,108,108,4,108,108,4,108,108,108,108,]),'result_spec':([208,],[256,]),'array_primitive_value':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'formal_parameter_list':([207,],[250,]),'do_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'array_location':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'exit_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'character_string_literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'then_expression':([151,295,319,],[221,318,334,]),'action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[12,12,12,121,12,12,12,121,12,12,12,12,12,12,]),'result':([18,21,],[99,100,]),'literal_range':([227,230,231,302,303,],[270,276,277,276,270,]),'operand1':([13,18,21,47,69,70,96,105,106,114,133,153,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[68,68,68,68,68,68,68,68,68,68,212,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'formal_procedure_head':([48,],[122,]),'primitive_value':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'location':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[16,73,73,73,16,16,73,16,73,73,73,152,73,73,73,16,73,16,73,16,73,73,73,16,16,73,73,73,16,73,16,16,73,73,73,73,73,73,16,73,73,16,73,73,73,73,73,73,73,73,73,73,]),'reference_mode':([103,116,127,176,251,292,304,],[174,174,174,174,174,174,174,]),'iteration':([112,],[193,]),'declaration_statement':([0,25,122,205,],[19,19,19,19,]),'start_value':([241,],[284,]),'lower_bound':([47,153,227,230,231,302,303,],[120,224,274,274,274,274,274,]),'value_array_slice':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'discrete_range_mode':([103,116,127,176,227,239,251,282,292,303,304,],[175,175,175,175,175,175,175,175,175,175,175,]),'discrete_expression':([241,310,331,],[285,328,335,]),'operator2':([68,212,],[148,148,]),'exit_label_id':([2,],[46,]),'upper_bound':([202,266,305,],[248,300,326,]),'statement_list':([0,122,],[25,205,]),'result_action':([0,25,37,48,107,122,142,187,188,205,216,217,238,259,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'mode_name':([103,116,127,176,251,292,304,],[164,164,164,164,164,164,164,]),'string_concatenation_operator':([68,212,],[146,146,]),'else_clause':([141,294,],[215,317,]),'synonym_statement':([0,25,122,205,],[31,31,31,31,]),'builtin_call':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'empty_literal':([13,18,21,47,62,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'boolean_mode':([103,116,127,176,227,239,251,282,292,303,304,],[170,170,170,170,170,170,170,170,170,170,170,]),'synonym_list':([44,],[115,]),'string_mode':([103,116,127,176,251,292,304,],[165,165,165,165,165,165,165,]),'parameter_spec':([251,],[291,]),'procedure_statement':([0,25,122,205,],[36,36,36,36,]),'else_expression':([221,262,],[263,297,]),'membership_operator':([56,],[131,]),'for_control':([112,],[191,]),'procedure_call':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'array_slice':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'range_enumeration':([112,],[192,]),'operand3':([13,18,21,47,69,70,96,105,106,114,133,148,153,154,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[84,84,84,84,84,84,84,84,84,84,84,84,84,225,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'dereferenced_reference':([0,13,18,21,25,37,47,48,62,69,70,74,96,105,106,107,114,122,133,142,148,153,154,187,188,199,201,202,205,213,216,217,220,227,228,230,231,235,238,241,243,259,261,264,266,296,302,303,305,310,311,331,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'operand2':([13,18,21,47,69,70,96,105,106,114,133,148,153,199,201,202,213,220,227,228,230,231,235,241,243,261,264,266,296,302,303,305,310,311,331,],[85,85,85,85,85,85,85,85,85,85,85,218,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'declaration_list':([30,],[104,]),'formal_parameter':([207,289,],[252,314,]),'while_control':([37,191,],[113,242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',423),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',424),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',433),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',439),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',445),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',469),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',470),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',487),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',492),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',493),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',501),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',502),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',507),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',514),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',518),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',519),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',526),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',533),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',534),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',542),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',548),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',550),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',555),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',560),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',561),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',570),
  ('action -> bracketed_action','action',1,'p_action','parser.py',576),
  ('action -> assignment_action','action',1,'p_action','parser.py',577),
  ('action -> call_action','action',1,'p_action','parser.py',578),
  ('action -> exit_action','action',1,'p_action','parser.py',579),
  ('action -> return_action','action',1,'p_action','parser.py',580),
  ('action -> result_action','action',1,'p_action','parser.py',581),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',586),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',592),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',611),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',617),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',626),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',627),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',636),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',637),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',646),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',647),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',654),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',655),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',657),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',672),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',673),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',674),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',675),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',689),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',691),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',700),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',705),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',711),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',712),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',719),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',724),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',729),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',734),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',735),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',743),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',748),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',749),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',756),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',760),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',761),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',766),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',767),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',774),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',775),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',782),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',790),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',794),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',798),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',799),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',806),
  ('result -> expression','result',1,'p_result','parser.py',810),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',815),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',816),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',823),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',830),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',834),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',838),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',839),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',846),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',847),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',855),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',856),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',863),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',871),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',875),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',876),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',888),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',889),
]
