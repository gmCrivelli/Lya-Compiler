
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST DCL THEN SYN EXIT IF CHARS PROC INT LOC FALSE ASC BOOL FI TRUE RESULT NULL RETURN TO DOWN RETURNS ELSE END DO CHAR WHILE REF NUM ELSIF FOR BY ABS PRINT UPPER TYPE LENGTH LOWER ARRAY OD IN READprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'RETURNS':([207,250,290,],[247,-206,-207,]),'LESS':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,129,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'STRCAT':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,-75,-73,-76,-68,-108,-124,147,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,147,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'END':([3,12,15,21,28,34,102,103,120,124,158,178,203,205,206,248,288,],[-6,-2,-4,-5,-8,-7,-3,-128,-24,204,-18,-9,-201,246,-129,-204,-205,]),'INCREASE':([1,4,9,13,16,22,23,30,40,50,65,183,186,219,233,234,299,],[-57,-179,52,-17,-58,-59,-56,-178,-60,-61,-56,-180,-191,-62,-181,-192,-65,]),'DIVCREASE':([1,4,9,13,16,22,23,30,40,50,65,183,186,219,233,234,299,],[-57,-179,55,-17,-58,-59,-56,-178,-60,-61,-56,-180,-191,-62,-181,-192,-65,]),'$end':([3,12,15,21,26,28,34,39,102,103,120,158,178,203,206,],[-6,-2,-4,-5,-1,-8,-7,0,-3,-128,-24,-18,-9,-201,-129,]),'RBRACKET':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,154,156,161,165,166,167,171,172,176,183,186,209,210,211,213,214,215,219,233,234,254,261,262,263,268,270,272,273,274,293,296,299,300,303,317,320,321,323,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,219,-63,-36,-34,-37,-35,-33,-32,-38,-180,-191,-85,-96,254,-55,-116,-109,-62,-181,-192,-82,-64,299,-44,302,-53,-50,-52,306,317,-88,-65,-39,-40,-83,-89,-42,-51,]),'LOC':([13,159,160,161,163,165,166,167,168,171,172,173,174,176,177,222,291,300,302,303,314,324,325,],[-17,-46,-41,-36,-47,-34,-37,-35,-28,-33,-32,-31,-29,-38,-30,-45,316,-39,-48,-40,333,-49,-54,]),'TYPE':([0,3,12,15,21,26,28,34,102,103,120,124,158,178,203,205,206,248,288,],[7,-6,-2,-4,-5,7,-8,-7,-3,-128,-24,7,-18,-9,-201,7,-129,-204,-205,]),'DOWN':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,190,195,209,210,214,215,219,233,234,254,280,281,282,296,299,308,317,320,329,330,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-169,237,-85,-96,-116,-109,-62,-181,-192,-82,309,-170,-174,-88,-65,309,-83,-89,-171,-55,]),'GREATEREQ':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,136,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'OD':([33,103,106,110,189,197,206,240,],[111,-128,188,-151,-152,239,-129,283,]),'NUM':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[36,-6,36,-2,-4,-5,36,-8,36,-7,36,36,-140,36,-142,-146,-143,-145,-141,-144,36,36,-122,36,-123,36,36,36,36,-3,-128,36,36,36,-151,-24,36,-102,-105,-99,36,-98,-101,-97,-100,-104,-103,-107,-106,36,-118,-119,36,-117,-111,-114,-112,36,-110,-113,-18,36,-9,-152,36,36,36,-201,36,-129,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-204,36,36,36,36,-205,36,36,36,36,36,36,36,]),'TIMES':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,70,71,72,76,77,78,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,-75,-73,-76,-68,145,-124,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-116,145,-62,-181,-192,-82,-56,-65,-83,]),'LPAREN':([8,11,13,23,25,29,32,35,36,38,41,42,43,44,49,51,52,53,54,55,56,57,61,62,65,74,75,93,94,101,104,105,126,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,160,161,164,165,166,167,171,172,174,176,216,218,220,221,225,227,228,230,232,238,244,247,255,257,258,271,273,277,278,297,300,301,303,304,305,307,310,312,327,],[-193,61,-17,101,-197,-194,104,-198,-195,-200,61,-199,-196,61,-140,61,-142,-146,-143,-145,-141,-144,61,-122,101,61,-123,61,61,61,61,61,208,-102,-105,-99,61,-98,-101,-97,-100,-104,-103,-107,-106,61,-118,-119,61,-117,-111,-114,-112,61,-110,-113,221,-36,61,-34,-37,-35,-33,-32,227,-38,61,61,61,61,61,61,61,61,61,61,61,287,61,61,61,304,227,221,227,61,-39,61,-40,61,61,227,61,61,61,]),'BOOL':([13,45,96,100,119,162,200,228,236,253,279,287,305,306,],[-17,-15,166,166,166,166,-16,166,166,166,166,166,166,166,]),'MINUS':([1,4,11,13,16,22,30,41,44,49,50,51,52,53,54,55,56,57,59,60,61,64,65,66,67,68,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,164,183,186,209,210,214,215,216,218,219,220,221,225,227,228,230,232,233,234,238,244,254,255,257,258,271,297,299,301,304,305,310,312,317,327,],[-57,-179,62,-17,-58,-59,-178,62,62,-140,-61,62,-142,-146,-143,-145,-141,-144,-71,-67,62,-81,-56,-77,-72,-125,-75,-73,-76,-68,-108,-124,151,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,62,62,62,62,62,-102,-105,-99,62,-98,-101,-97,-100,-104,-103,-107,-106,62,-121,-118,-119,62,-117,-111,-114,-112,62,-110,-113,-127,62,-180,-191,-85,151,-116,-109,62,62,-62,62,62,62,62,62,62,62,-181,-192,62,62,-82,62,62,62,-56,62,-65,62,62,62,62,62,-83,62,]),'IN':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,190,195,209,210,214,215,219,233,234,237,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,138,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-169,236,-85,-96,-116,-109,-62,-181,-192,279,-82,-56,-65,-83,]),'REF':([13,45,96,100,119,162,200,253,287,306,],[-17,-15,162,162,162,162,-16,162,162,162,]),'PLUS':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,-75,-73,-76,-68,-108,-124,148,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,148,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'DIVIDE':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,70,71,72,76,77,78,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,-75,-73,-76,-68,142,-124,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-116,142,-62,-181,-192,-82,-56,-65,-83,]),'COLON':([1,4,10,13,16,22,23,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,108,141,152,155,156,183,186,209,210,212,213,214,215,219,233,234,254,265,266,271,296,299,317,320,322,],[-57,-179,58,-17,-58,-59,-130,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,196,-121,-127,220,-43,-180,-191,-85,-96,255,-43,-116,-109,-62,-181,-192,-82,301,-43,-56,-88,-65,-83,-89,-43,]),'TRUE':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[88,88,88,-140,88,-142,-146,-143,-145,-141,-144,88,-122,88,-123,88,88,88,88,88,-102,-105,-99,88,-98,-101,-97,-100,-104,-103,-107,-106,88,-118,-119,88,-117,-111,-114,-112,88,-110,-113,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'ELSE':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,103,110,141,152,183,186,189,198,199,206,209,210,214,215,217,219,233,234,245,254,256,260,296,299,313,317,318,320,334,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-128,-151,-121,-127,-180,-191,-152,241,-149,-129,-85,-96,-116,-109,257,-62,-181,-192,-150,-82,-91,257,-88,-65,241,-83,-93,-89,-94,]),'MODCREASE':([1,4,9,13,16,22,23,30,40,50,65,183,186,219,233,234,299,],[-57,-179,53,-17,-58,-59,-56,-178,-60,-61,-56,-180,-191,-62,-181,-192,-65,]),'PROC':([58,],[126,]),'ABS':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[8,-6,8,-2,-4,-5,8,-8,8,-7,8,8,-140,8,-142,-146,-143,-145,-141,-144,8,8,-122,8,-123,8,8,8,8,-3,-128,8,8,8,-151,-24,8,-102,-105,-99,8,-98,-101,-97,-100,-104,-103,-107,-106,8,-118,-119,8,-117,-111,-114,-112,8,-110,-113,-18,8,-9,-152,8,8,8,-201,8,-129,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-204,8,8,8,8,-205,8,8,8,8,8,8,8,]),'ID':([0,1,3,4,7,11,12,13,15,16,19,20,21,22,26,28,30,33,34,37,41,44,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,110,118,119,120,121,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,162,164,178,179,183,186,189,196,197,199,200,203,205,206,208,209,210,214,215,216,218,219,220,221,223,224,225,227,228,230,232,233,234,236,238,240,241,244,245,248,253,254,255,257,258,267,279,284,287,288,289,296,297,299,301,304,305,306,310,312,317,320,327,],[13,-57,-6,-179,13,13,-2,-17,-4,-58,13,13,-5,-59,13,-8,-178,13,-7,13,13,13,-15,-140,-61,13,-142,-146,-143,-145,-141,-144,13,-71,-67,13,-122,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,13,-123,-68,-108,-124,-95,-120,-126,-74,13,-79,-115,-78,-70,-60,-80,-69,13,13,13,13,-19,13,13,-3,-128,13,13,13,13,-151,13,13,-24,13,13,-102,-105,-99,13,-98,-101,-97,-100,-104,-103,-107,-106,13,-121,-118,-119,13,-117,-111,-114,-112,13,-110,-113,-127,-20,-18,13,13,-9,13,-180,-191,-152,13,13,13,-16,-201,13,-129,13,-85,-96,-116,-109,13,13,-62,13,13,-23,-21,13,13,13,13,13,-181,-192,13,13,13,13,13,13,-204,13,-82,13,13,13,-22,13,13,13,-205,13,-88,13,-65,13,13,13,13,13,13,-83,-89,13,]),'FALSE':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[66,66,66,-140,66,-142,-146,-143,-145,-141,-144,66,-122,66,-123,66,66,66,66,66,-102,-105,-99,66,-98,-101,-97,-100,-104,-103,-107,-106,66,-118,-119,66,-117,-111,-114,-112,66,-110,-113,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'CCONST':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[86,86,86,-140,86,-142,-146,-143,-145,-141,-144,86,-122,86,-123,86,86,86,86,86,-102,-105,-99,86,-98,-101,-97,-100,-104,-103,-107,-106,86,-118,-119,86,-117,-111,-114,-112,86,-110,-113,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'MOD':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,70,71,72,76,77,78,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,-75,-73,-76,-68,143,-124,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-116,143,-62,-181,-192,-82,-56,-65,-83,]),'GREATER':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,137,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'CHAR':([13,45,96,100,119,162,200,228,236,253,279,287,305,306,],[-17,-15,176,176,176,176,-16,176,176,176,176,176,176,176,]),'TO':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,280,281,282,296,299,308,309,317,320,329,330,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,310,-170,-174,-88,-65,310,327,-83,-89,-171,-55,]),'FI':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,103,110,141,152,183,186,189,198,199,206,209,210,214,215,219,233,234,241,242,245,254,259,284,294,296,298,299,313,317,320,331,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-128,-151,-121,-127,-180,-191,-152,243,-149,-129,-85,-96,-116,-109,-62,-181,-192,-153,285,-150,-82,296,-154,-92,-88,320,-65,-155,-83,-89,-156,]),'ELSIF':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,103,110,141,152,183,186,189,198,199,206,209,210,214,215,217,219,233,234,245,254,256,260,296,299,313,317,318,320,334,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-128,-151,-121,-127,-180,-191,-152,244,-149,-129,-85,-96,-116,-109,258,-62,-181,-192,-150,-82,-91,297,-88,-65,244,-83,-93,-89,-94,]),'SYN':([0,3,12,15,21,26,28,34,102,103,120,124,158,178,203,205,206,248,288,],[19,-6,-2,-4,-5,19,-8,-7,-3,-128,-24,19,-18,-9,-201,19,-129,-204,-205,]),'DCL':([0,3,12,15,21,26,28,34,102,103,120,124,158,178,203,205,206,248,288,],[20,-6,-2,-4,-5,20,-8,-7,-3,-128,-24,20,-18,-9,-201,20,-129,-204,-205,]),'LENGTH':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[35,-6,35,-2,-4,-5,35,-8,35,-7,35,35,-140,35,-142,-146,-143,-145,-141,-144,35,35,-122,35,-123,35,35,35,35,-3,-128,35,35,35,-151,-24,35,-102,-105,-99,35,-98,-101,-97,-100,-104,-103,-107,-106,35,-118,-119,35,-117,-111,-114,-112,35,-110,-113,-18,35,-9,-152,35,35,35,-201,35,-129,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-204,35,35,35,35,-205,35,35,35,35,35,35,35,]),'DECREASE':([1,4,9,13,16,22,23,30,40,50,65,183,186,219,233,234,299,],[-57,-179,54,-17,-58,-59,-56,-178,-60,-61,-56,-180,-191,-62,-181,-192,-65,]),'NOT':([11,41,44,49,51,52,53,54,55,56,57,61,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[75,75,75,-140,75,-142,-146,-143,-145,-141,-144,75,75,75,75,75,75,-102,-105,-99,75,-98,-101,-97,-100,-104,-103,-107,-106,75,-118,-119,75,-117,-111,-114,-112,75,-110,-113,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'INT':([13,45,96,100,119,162,200,228,236,253,279,287,305,306,],[-17,-15,161,161,161,161,-16,161,161,161,161,161,161,161,]),'BY':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,280,281,282,296,299,317,320,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,312,-170,-174,-88,-65,-83,-89,]),'LOWER':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[25,-6,25,-2,-4,-5,25,-8,25,-7,25,25,-140,25,-142,-146,-143,-145,-141,-144,25,25,-122,25,-123,25,25,25,25,-3,-128,25,25,25,-151,-24,25,-102,-105,-99,25,-98,-101,-97,-100,-104,-103,-107,-106,25,-118,-119,25,-117,-111,-114,-112,25,-110,-113,-18,25,-9,-152,25,25,25,-201,25,-129,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-204,25,25,25,25,-205,25,25,25,25,25,25,25,]),'LBRACKET':([1,4,9,13,16,17,22,23,30,40,50,59,60,64,65,66,67,70,71,72,73,76,78,82,84,86,88,89,90,91,92,152,170,175,183,186,209,219,233,234,254,271,299,317,],[-57,-179,-66,-17,-58,94,-59,-56,-178,-60,-61,-71,-67,-81,-56,-77,-72,-75,-73,-76,140,-68,-66,-84,-74,-79,-78,-70,-60,-80,-69,-66,226,228,-180,-191,-85,-62,-181,-192,-82,-56,-65,-83,]),'ASSIGN':([1,4,9,13,16,22,23,30,40,45,46,50,65,96,159,160,161,163,165,166,167,168,169,171,172,173,174,176,177,180,183,186,190,195,200,219,222,233,234,299,300,302,303,324,325,],[-57,-179,49,-17,-58,-59,-56,-178,-60,-15,119,-61,-56,164,-46,-41,-36,-47,-34,-37,-35,-28,225,-33,-32,-31,-29,-38,-30,230,-180,-191,-169,238,-16,-62,-45,-181,-192,-65,-39,-48,-40,-49,-54,]),'WHILE':([1,4,13,16,22,30,33,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,161,165,166,167,171,172,176,183,186,191,192,193,194,209,210,214,215,219,233,234,254,278,282,296,299,300,303,307,311,317,320,326,328,335,],[-57,-179,-17,-58,-59,-178,105,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-36,-34,-37,-35,-33,-32,-38,-180,-191,-164,105,-165,-166,-85,-96,-116,-109,-62,-181,-192,-82,-175,-174,-88,-65,-39,-40,-176,-167,-83,-89,-168,-172,-173,]),'MULCREASE':([1,4,9,13,16,22,23,30,40,50,65,183,186,219,233,234,299,],[-57,-179,57,-17,-58,-59,-56,-178,-60,-61,-56,-180,-191,-62,-181,-192,-65,]),'COMMA':([1,4,13,16,22,30,45,46,47,48,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,96,98,99,100,141,152,154,156,159,160,161,163,165,166,167,168,171,172,173,174,176,177,180,181,182,183,184,185,186,200,201,202,209,210,214,215,219,222,229,231,233,234,251,252,253,254,261,263,270,272,273,274,275,276,291,292,296,299,300,302,303,315,316,317,320,321,322,323,324,325,],[-57,-179,-17,-58,-59,-178,-15,118,121,-25,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,118,-10,179,118,-121,-127,218,-63,-46,-41,-36,-47,-34,-37,-35,-28,-33,-32,-31,-29,-38,-30,-12,232,-182,-180,-184,232,-191,-16,-27,-26,-85,-96,-116,-109,-62,-45,-11,-13,-181,-192,289,-208,118,-82,-64,-44,-53,-50,-52,305,-14,-183,-211,-210,-88,-65,-39,-48,-40,-209,-212,-83,-89,-42,-184,-51,-49,-54,]),'ASC':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[29,-6,29,-2,-4,-5,29,-8,29,-7,29,29,-140,29,-142,-146,-143,-145,-141,-144,29,29,-122,29,-123,29,29,29,29,-3,-128,29,29,29,-151,-24,29,-102,-105,-99,29,-98,-101,-97,-100,-104,-103,-107,-106,29,-118,-119,29,-117,-111,-114,-112,29,-110,-113,-18,29,-9,-152,29,29,29,-201,29,-129,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-204,29,29,29,29,-205,29,29,29,29,29,29,29,]),'UPPER':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[43,-6,43,-2,-4,-5,43,-8,43,-7,43,43,-140,43,-142,-146,-143,-145,-141,-144,43,43,-122,43,-123,43,43,43,43,-3,-128,43,43,43,-151,-24,43,-102,-105,-99,43,-98,-101,-97,-100,-104,-103,-107,-106,43,-118,-119,43,-117,-111,-114,-112,43,-110,-113,-18,43,-9,-152,43,43,43,-201,43,-129,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-204,43,43,43,43,-205,43,43,43,43,43,43,43,]),'THEN':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,116,117,141,152,153,183,186,209,210,214,215,219,233,234,254,286,295,296,299,317,319,320,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,199,-90,-121,-127,216,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,199,216,-88,-65,-83,216,-89,]),'FOR':([33,],[107,]),'DIFF':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,128,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'ARROW':([1,4,9,11,13,16,22,23,30,40,41,44,49,50,51,52,53,54,55,56,57,61,62,65,74,75,78,90,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,164,183,186,216,218,219,220,221,225,227,228,230,232,233,234,238,244,255,257,258,271,297,299,301,304,305,310,312,327,],[-57,-179,50,85,-17,-58,-59,-56,-178,-60,85,85,-140,-61,85,-142,-146,-143,-145,-141,-144,85,-122,-56,85,-123,50,-60,85,85,85,85,85,-102,-105,-99,85,-98,-101,-97,-100,-104,-103,-107,-106,85,-118,-119,85,-117,-111,-114,-112,85,-110,-113,50,85,-180,-191,85,85,-62,85,85,85,85,85,85,85,-181,-192,85,85,85,85,85,-56,85,-65,85,85,85,85,85,85,]),'DO':([0,3,12,15,21,26,28,33,34,58,102,103,106,110,120,124,158,178,189,196,197,199,203,205,206,240,241,245,248,284,288,],[33,-6,-2,-4,-5,33,-8,33,-7,33,-3,-128,33,-151,-24,33,-18,-9,-152,33,33,33,-201,33,-129,33,33,33,-204,33,-205,]),'CHARS':([13,45,96,100,119,162,200,253,287,306,],[-17,-15,170,170,170,170,-16,170,170,170,]),'SCONST':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[64,64,64,-140,64,-142,-146,-143,-145,-141,-144,64,-122,64,-123,64,64,64,64,64,-102,-105,-99,64,-98,-101,-97,-100,-104,-103,-107,-106,64,-118,-119,64,-117,-111,-114,-112,64,-110,-113,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'AND':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,130,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'RPAREN':([1,4,13,16,22,30,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,101,104,127,141,152,159,160,161,163,165,166,167,168,171,172,173,174,176,177,181,182,183,184,185,186,208,209,210,214,215,219,222,233,234,251,252,254,263,264,269,276,291,292,296,299,300,302,303,304,314,315,316,317,320,321,322,324,325,333,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,183,186,209,-121,-127,-46,-41,-36,-47,-34,-37,-35,-28,-33,-32,-31,-29,-38,-30,233,-182,-180,-184,234,-191,250,-85,-96,-116,-109,-62,-45,-181,-192,290,-208,-82,-44,300,303,-183,-211,-210,-88,-65,-39,-48,-40,183,332,-209,-212,-83,-89,-42,-184,-49,-54,336,]),'EXIT':([0,3,12,15,21,26,28,33,34,58,102,103,106,110,120,124,158,178,189,196,197,199,203,205,206,240,241,245,248,284,288,],[37,-6,-2,-4,-5,37,-8,37,-7,37,-3,-128,37,-151,-24,37,-18,-9,-152,37,37,37,-201,37,-129,37,37,37,-204,37,-205,]),'PRINT':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[38,-6,38,-2,-4,-5,38,-8,38,-7,38,38,-140,38,-142,-146,-143,-145,-141,-144,38,38,-122,38,-123,38,38,38,38,-3,-128,38,38,38,-151,-24,38,-102,-105,-99,38,-98,-101,-97,-100,-104,-103,-107,-106,38,-118,-119,38,-117,-111,-114,-112,38,-110,-113,-18,38,-9,-152,38,38,38,-201,38,-129,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-204,38,38,38,38,-205,38,38,38,38,38,38,38,]),'EQUAL':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,133,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'RETURN':([0,3,12,15,21,26,28,33,34,58,102,103,106,110,120,124,158,178,189,196,197,199,203,205,206,240,241,245,248,284,288,],[11,-6,-2,-4,-5,11,-8,11,-7,11,-3,-128,11,-151,-24,11,-18,-9,-152,11,11,11,-201,11,-129,11,11,11,-204,11,-205,]),'OR':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,135,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'ARRAY':([13,45,96,100,119,162,200,253,287,306,],[-17,-15,175,175,175,175,-16,175,175,175,]),'ICONST':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,226,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[72,72,72,-140,72,-142,-146,-143,-145,-141,-144,72,-122,72,-123,72,72,72,72,72,-102,-105,-99,72,-98,-101,-97,-100,-104,-103,-107,-106,72,-118,-119,72,-117,-111,-114,-112,72,-110,-113,72,72,72,72,72,72,268,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'SEMI':([1,2,4,5,6,11,13,14,16,18,22,24,27,30,31,40,47,48,50,59,60,63,64,65,66,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,95,97,98,99,109,111,112,113,114,115,117,122,123,125,141,152,157,159,160,161,163,165,166,167,168,171,172,173,174,176,177,180,183,186,187,188,191,192,193,194,201,202,204,207,209,210,214,215,219,222,223,224,229,231,233,234,235,239,243,246,249,250,254,267,275,278,282,283,285,290,296,299,300,302,303,307,311,317,320,324,325,326,328,332,335,336,],[-57,-134,-179,-131,-132,-187,-17,-136,-58,-138,-59,-137,103,-178,-135,-133,120,-25,-61,-71,-67,-87,-81,-56,-77,-72,-125,-86,-75,-73,-76,-68,-108,-124,-188,-95,-120,-126,-190,-74,-79,-115,-78,-70,-60,-80,-69,158,-19,-10,178,197,-157,-161,-186,-185,-189,-90,-139,203,206,-121,-127,-20,-46,-41,-36,-47,-34,-37,-35,-28,-33,-32,-31,-29,-38,-30,-12,-180,-191,-177,-159,-164,-162,-165,-166,-27,-26,-202,248,-85,-96,-116,-109,-62,-45,-23,-21,-11,-13,-181,-192,-163,-158,-147,-203,288,-206,-82,-22,-14,-175,-174,-160,-148,-207,-88,-65,-39,-48,-40,-176,-167,-83,-89,-49,-54,-168,-172,-213,-173,-214,]),'RESULT':([0,3,12,15,21,26,28,33,34,58,102,103,106,110,120,124,158,178,189,196,197,199,203,205,206,240,241,245,248,284,288,],[41,-6,-2,-4,-5,41,-8,41,-7,41,-3,-128,41,-151,-24,41,-18,-9,-152,41,41,41,-201,41,-129,41,41,41,-204,41,-205,]),'LESSEQ':([1,4,13,16,22,30,50,59,60,64,65,66,67,68,69,70,71,72,76,77,78,80,81,82,84,86,87,88,89,90,91,92,141,152,183,186,209,210,214,215,219,233,234,254,271,299,317,],[-57,-179,-17,-58,-59,-178,-61,-71,-67,-81,-56,-77,-72,-125,139,-75,-73,-76,-68,-108,-124,-95,-120,-126,-74,-79,-115,-78,-70,-60,-80,-69,-121,-127,-180,-191,-85,-96,-116,-109,-62,-181,-192,-82,-56,-65,-83,]),'READ':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,62,74,75,85,93,94,101,102,103,104,105,106,110,120,124,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[42,-6,42,-2,-4,-5,42,-8,42,-7,42,42,-140,42,-142,-146,-143,-145,-141,-144,42,42,-122,42,-123,42,42,42,42,-3,-128,42,42,42,-151,-24,42,-102,-105,-99,42,-98,-101,-97,-100,-104,-103,-107,-106,42,-118,-119,42,-117,-111,-114,-112,42,-110,-113,-18,42,-9,-152,42,42,42,-201,42,-129,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-204,42,42,42,42,-205,42,42,42,42,42,42,42,]),'NULL':([11,41,44,49,51,52,53,54,55,56,57,61,62,74,75,93,94,101,104,105,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[91,91,91,-140,91,-142,-146,-143,-145,-141,-144,91,-122,91,-123,91,91,91,91,91,-102,-105,-99,91,-98,-101,-97,-100,-104,-103,-107,-106,91,-118,-119,91,-117,-111,-114,-112,91,-110,-113,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'IF':([0,3,11,12,15,21,26,28,33,34,41,44,49,51,52,53,54,55,56,57,58,61,93,94,101,102,103,104,105,106,110,120,124,140,158,164,178,189,196,197,199,203,205,206,216,218,220,221,225,227,228,230,232,238,240,241,244,245,248,255,257,258,284,288,297,301,304,305,310,312,327,],[44,-6,93,-2,-4,-5,44,-8,44,-7,93,93,-140,93,-142,-146,-143,-145,-141,-144,44,93,93,93,93,-3,-128,93,93,44,-151,-24,44,93,-18,93,-9,-152,44,44,44,-201,44,-129,93,93,93,93,93,93,93,93,93,93,44,44,93,44,-204,93,93,93,44,-205,93,93,93,93,93,93,93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_concatenation_operator':([80,210,],[146,146,]),'parameter':([101,104,232,304,],[182,182,276,182,]),'parenthesis_gambiarra':([126,],[207,]),'initialization':([180,],[231,]),'string_mode':([96,100,119,162,253,287,306,],[159,159,159,159,159,159,159,]),'builtin_call':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'closed_dyadic_operator':([9,],[56,]),'range_enumeration':([107,],[194,]),'bracketed_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'for_control':([107,],[192,]),'end_value':([280,308,],[311,326,]),'formal_procedure_head':([58,],[124,]),'empty_literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'discrete_range_mode':([96,100,119,162,228,236,253,279,287,305,306,],[167,167,167,167,167,167,167,167,167,167,167,]),'location':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[9,78,9,9,78,78,78,9,78,78,152,78,78,78,78,78,9,9,78,78,78,78,78,9,9,9,9,78,78,78,78,78,78,78,78,78,78,9,9,78,9,78,78,78,9,78,78,78,78,78,78,78,]),'mode':([96,100,119,162,253,287,306,],[169,180,201,222,291,314,325,]),'integer_mode':([96,100,119,162,228,236,253,279,287,305,306,],[172,172,172,172,172,172,172,172,172,172,172,]),'composite_mode':([96,100,119,162,253,287,306,],[173,173,173,173,173,173,173,]),'else_clause':([198,313,],[242,331,]),'statement':([0,26,124,205,],[12,102,12,102,]),'result_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'declaration_statement':([0,26,124,205,],[15,15,15,15,]),'array_primitive_value':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'mode_definition':([7,121,],[48,202,]),'index_mode_list':([228,],[274,]),'control_part':([33,],[109,]),'operator1':([69,],[131,]),'reference_mode':([96,100,119,162,253,287,306,],[177,177,177,177,177,177,177,]),'start_value':([238,],[280,]),'identifier_list':([7,19,20,95,121,179,208,289,],[46,96,100,96,46,100,253,253,]),'array_slice':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'integer_literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'do_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'exit_label_id':([37,],[114,]),'operand2':([11,41,44,51,61,93,94,101,104,105,131,140,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[77,77,77,77,77,77,77,77,77,77,77,77,215,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'statement_list':([0,124,],[26,205,]),'step_value':([280,],[308,]),'action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[27,27,27,125,27,27,125,27,27,27,27,27,27,27,]),'action_statement':([0,26,33,106,124,197,199,205,240,241,245,284,],[28,28,110,189,28,110,110,28,189,110,189,189,]),'relational_operator':([69,],[134,]),'return_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'array_mode':([96,100,119,162,253,287,306,],[163,163,163,163,163,163,163,]),'procedure_statement':([0,26,124,205,],[34,34,34,34,]),'then_clause':([116,286,],[198,313,]),'arithmetic_additive_operator':([80,210,],[150,150,]),'exit_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'declaration_list':([20,],[99,]),'boolean_mode':([96,100,119,162,228,236,253,279,287,305,306,],[171,171,171,171,171,171,171,171,171,171,171,]),'while_control':([33,192,],[112,235,]),'membership_operator':([69,],[132,]),'declaration':([20,179,],[98,229,]),'program':([0,],[39,]),'operand0':([11,41,44,51,61,93,94,101,104,105,140,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'arithmetic_multiplicative_operator':([77,215,],[144,144,]),'discrete_expression':([238,310,327,],[281,328,335,]),'then_expression':([153,295,319,],[217,318,334,]),'synonym_list':([19,],[95,]),'dereferenced_reference':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'procedure_definition':([58,],[123,]),'character_literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'assignment_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'newmode_list':([7,],[47,]),'newmode_statement':([0,26,124,205,],[3,3,3,3,]),'discrete_mode':([96,100,119,162,228,236,253,279,287,305,306,],[174,174,174,174,273,278,174,307,174,273,174,]),'boolean_expression':([44,93,105,244,258,297,],[116,153,187,286,295,319,]),'expression_list':([94,],[154,]),'synonym_definition':([19,95,],[97,157,]),'result_spec':([207,],[249,]),'mode_name':([96,100,119,162,253,287,306,],[168,168,168,168,168,168,168,]),'label_id':([0,26,33,106,124,197,199,205,240,241,245,284,],[10,10,108,108,10,108,108,10,108,108,108,108,]),'literal_range':([221,227,228,304,305,],[264,269,270,264,270,]),'iteration':([107,],[191,]),'formal_parameter_list':([208,],[251,]),'action_statement_list':([33,197,199,241,],[106,240,245,284,]),'element_mode':([306,],[324,]),'conditional_expression':([11,41,44,51,61,93,94,101,104,105,140,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'array_location':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'array_element':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'referenced_location':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'step_enumeration':([107,],[193,]),'character_string_literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'parameter_spec':([253,],[292,]),'upper_bound':([220,255,301,],[262,293,321,]),'synonym_statement':([0,26,124,205,],[21,21,21,21,]),'assigning_operator':([9,],[51,]),'identifier':([0,7,11,19,20,26,33,37,41,44,51,58,61,74,85,93,94,95,96,100,101,104,105,106,107,118,119,121,124,131,140,144,149,162,164,179,196,197,199,205,208,216,218,220,221,225,227,228,230,232,236,238,240,241,244,245,253,255,257,258,279,284,287,289,297,301,304,305,306,310,312,327,],[23,45,65,45,45,23,23,113,65,65,65,65,65,65,65,65,65,45,160,160,65,65,65,23,190,200,160,45,23,65,65,65,65,160,65,45,65,23,23,23,45,65,65,65,65,65,65,271,65,65,277,65,23,23,65,23,160,65,65,65,277,23,160,45,65,65,65,271,160,65,65,65,]),'formal_parameter':([208,289,],[252,315,]),'if_action':([0,26,33,58,106,124,196,197,199,205,240,241,245,284,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'value_array_element':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'elsif_expression':([217,],[260,]),'integer_expression':([140,312,],[211,329,]),'index_mode':([228,305,],[272,323,]),'character_mode':([96,100,119,162,228,236,253,279,287,305,306,],[165,165,165,165,165,165,165,165,165,165,165,]),'result':([11,41,],[79,115,]),'operand1':([11,41,44,51,61,93,94,101,104,105,131,140,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[80,80,80,80,80,80,80,80,80,80,210,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'procedure_call':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'lower_bound':([94,140,221,227,228,304,305,],[155,212,265,265,265,265,265,]),'builtin_name':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'primitive_value':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'expression':([11,41,44,51,61,93,94,101,104,105,140,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[83,83,117,122,127,117,156,184,184,117,213,223,256,261,263,266,223,266,266,275,184,282,117,263,294,117,117,263,322,266,282,330,282,]),'operand4':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[81,81,81,81,81,141,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'value_array_slice':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'else_expression':([217,260,],[259,298,]),'operand3':([11,41,44,51,61,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[87,87,87,87,87,87,87,87,87,87,87,87,214,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'constant_expression':([164,225,],[224,267,]),'monadic_operator':([11,41,44,51,61,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'parenthesized_expression':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'call_action':([0,11,26,33,41,44,51,58,61,74,85,93,94,101,104,105,106,124,131,140,144,149,164,196,197,199,205,216,218,220,221,225,227,228,230,232,238,240,241,244,245,255,257,258,284,297,301,304,305,310,312,327,],[40,90,40,40,90,90,90,40,90,90,90,90,90,90,90,90,40,40,90,90,90,90,90,40,40,40,40,90,90,90,90,90,90,90,90,90,90,40,40,90,40,90,90,90,40,90,90,90,90,90,90,90,]),'boolean_literal':([11,41,44,51,61,74,93,94,101,104,105,131,140,144,149,164,216,218,220,221,225,227,228,230,232,238,244,255,257,258,297,301,304,305,310,312,327,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'loop_counter':([107,],[195,]),'operator2':([80,210,],[149,149,]),'parameter_list':([101,104,304,],[181,185,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
