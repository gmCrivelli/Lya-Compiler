
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST OD TYPE REF DOWN ELSE IN READ INT NUM ABS BOOL TO ASC NULL FOR LENGTH FI CHAR IF LOC CHARS END DCL EXIT RESULT ARRAY UPPER RETURNS TRUE WHILE FALSE PRINT THEN ELSIF LOWER DO SYN BY PROC RETURNprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'ARROW':([5,6,7,10,13,25,27,28,30,32,38,43,54,55,57,59,62,66,70,81,95,103,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,191,199,200,206,207,208,210,220,232,237,238,239,240,241,242,245,252,260,261,262,287,288,290,296,309,310,313,327,],[-60,65,-17,-58,-179,65,-178,-59,-57,65,103,-56,-60,65,-123,65,-122,65,103,-56,65,-61,-145,65,-140,-143,-146,-144,-142,-141,65,65,65,65,65,-117,-119,-118,103,65,-104,-105,-102,-107,-103,-106,-100,-99,65,-98,-97,-101,65,-114,-110,-112,-111,-113,-191,-180,65,65,65,65,65,65,65,65,-192,65,65,-62,65,-181,-56,65,65,65,65,65,65,65,65,65,-65,65,]),'RETURNS':([223,272,306,],[268,-206,-207,]),'LESS':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,150,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'PROC':([84,],[169,]),'RETURN':([0,9,16,18,19,21,22,29,40,84,85,89,93,101,138,168,171,173,175,182,185,197,221,222,225,226,228,229,266,269,301,],[25,-7,-8,-5,-2,-6,25,25,-4,25,-128,25,-151,-3,-18,25,25,25,-152,25,-24,-9,25,25,-201,25,-129,25,25,-204,-205,]),'MULCREASE':([5,7,10,13,27,28,30,38,43,81,103,191,199,238,241,245,313,],[-60,-17,-58,-179,-178,-59,-57,109,-56,-56,-61,-191,-180,-192,-62,-181,-65,]),'SYN':([0,9,16,18,19,21,29,40,85,101,138,171,185,197,225,226,228,269,301,],[2,-7,-8,-5,-2,-6,2,-4,-128,-3,-18,2,-24,-9,-201,2,-129,-204,-205,]),'EQUAL':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,160,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'RBRACKET':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,124,125,129,130,132,135,137,145,146,191,193,194,199,209,212,214,215,216,217,238,241,245,248,249,250,251,253,263,283,284,285,292,293,294,299,313,314,315,319,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-32,-37,-36,-35,-33,-38,-34,-121,-127,-191,-63,241,-180,-116,-85,263,-55,-96,-109,-192,-62,-181,-50,289,-53,-52,291,-82,-44,313,-64,-40,-39,-88,322,-65,-42,-51,-89,-83,]),'SCONST':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[52,52,52,52,-123,52,-122,52,52,-145,52,-140,-143,-146,-144,-142,-141,52,52,52,52,52,-117,-119,-118,52,-104,-105,-102,-107,-103,-106,-100,-99,52,-98,-97,-101,52,-114,-110,-112,-111,-113,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'GREATER':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,153,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'DIVCREASE':([5,7,10,13,27,28,30,38,43,81,103,191,199,238,241,245,313,],[-60,-17,-58,-179,-178,-59,-57,104,-56,-56,-61,-191,-180,-192,-62,-181,-65,]),'ABS':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[44,44,-7,-8,-5,-2,-6,44,44,44,44,-4,44,-123,44,-122,44,44,44,-128,44,-151,44,-3,-145,44,-140,-143,-146,-144,-142,-141,44,44,44,44,-18,44,-117,-119,-118,44,-104,-105,-102,-107,-103,-106,-100,-99,44,-98,-97,-101,44,-114,-110,-112,-111,-113,44,44,44,-152,44,-24,-9,44,44,44,44,44,44,44,44,-201,44,-129,44,44,44,44,44,44,44,44,44,44,-204,44,44,44,44,-205,44,44,44,]),'STRCAT':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,-115,-120,-72,-69,-74,162,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,162,-109,-192,-62,-181,-56,-82,-65,-83,]),'COLON':([7,8,10,13,27,28,30,43,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,92,103,145,146,191,192,193,199,209,212,213,215,216,217,238,241,245,246,247,252,263,294,313,318,319,322,],[-17,84,-58,-179,-178,-59,-57,-130,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,182,-61,-121,-127,-191,239,-43,-180,-116,-85,262,-43,-96,-109,-192,-62,-181,287,-43,-56,-82,-88,-65,-43,-89,-83,]),'FOR':([22,],[91,]),'IF':([0,6,9,16,18,19,21,22,25,29,32,40,55,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,148,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[6,55,-7,-8,-5,-2,-6,6,55,6,55,-4,55,55,6,-128,6,-151,55,-3,-145,55,-140,-143,-146,-144,-142,-141,55,55,55,55,-18,55,6,6,6,-152,6,-24,-9,55,55,55,55,55,55,6,6,-201,6,-129,6,55,55,55,55,55,55,55,55,6,-204,55,55,55,55,-205,55,55,55,]),'ID':([0,2,6,7,9,10,13,14,16,18,19,21,22,23,25,27,28,29,30,32,40,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,85,89,91,93,95,101,103,104,105,106,107,108,109,110,111,112,113,114,117,122,127,131,138,139,140,141,142,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,184,185,186,191,196,197,199,200,201,202,205,206,207,208,209,210,212,216,217,220,221,222,224,225,226,228,229,232,233,237,238,239,240,241,242,245,256,260,261,262,263,266,269,270,276,287,288,289,290,294,296,301,302,305,309,310,313,319,322,327,],[7,7,7,-17,-7,-58,-179,7,-8,-5,-2,-6,7,7,7,-178,-59,7,-57,7,-4,7,7,7,-15,-19,-67,-77,-73,-81,-108,-60,7,-126,-123,-79,7,-80,-78,-122,-125,-76,7,7,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,7,-128,7,7,-151,7,-3,-61,-145,7,-140,-143,-146,-144,-142,-141,7,7,7,7,7,7,7,-18,-20,7,-117,-119,-118,-121,-127,7,-104,-105,-102,-107,-103,-106,-100,-99,7,-98,-97,-101,7,-114,-110,-112,-111,-113,7,7,7,-152,7,7,-24,7,-191,7,-9,-180,7,-23,-21,-16,7,7,7,-116,7,-85,-96,-109,7,7,7,7,-201,7,-129,7,7,7,7,-192,7,7,-62,7,-181,-22,7,7,7,-82,7,-204,7,7,7,7,7,7,-88,7,-205,7,7,7,7,-65,-89,-83,7,]),'ELSE':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,85,93,103,145,146,167,168,175,191,199,209,211,212,216,217,222,228,238,241,245,257,259,263,294,300,313,319,321,322,332,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-128,-151,-61,-121,-127,221,-149,-152,-191,-180,-116,261,-85,-96,-109,-150,-129,-192,-62,-181,-91,261,-82,-88,221,-65,-89,-93,-83,-94,]),'LOWER':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[1,1,-7,-8,-5,-2,-6,1,1,1,1,-4,1,-123,1,-122,1,1,1,-128,1,-151,1,-3,-145,1,-140,-143,-146,-144,-142,-141,1,1,1,1,-18,1,-117,-119,-118,1,-104,-105,-102,-107,-103,-106,-100,-99,1,-98,-97,-101,1,-114,-110,-112,-111,-113,1,1,1,-152,1,-24,-9,1,1,1,1,1,1,1,1,-201,1,-129,1,1,1,1,1,1,1,1,1,1,-204,1,1,1,1,-205,1,1,1,]),'FI':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,85,93,103,145,146,167,168,175,191,199,209,212,216,217,219,221,222,228,238,241,245,258,263,266,294,295,298,300,313,319,322,323,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-128,-151,-61,-121,-127,218,-149,-152,-191,-180,-116,-85,-96,-109,264,-153,-150,-129,-192,-62,-181,294,-82,-154,-88,319,-92,-155,-65,-89,-83,-156,]),'DOWN':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,176,180,191,199,209,212,216,217,238,241,245,263,277,278,279,294,311,313,319,322,329,330,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,231,-169,-191,-180,-116,-85,-96,-109,-192,-62,-181,-82,-170,308,-174,-88,308,-65,-89,-83,-171,-55,]),'NOT':([6,25,32,55,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[57,57,57,57,57,57,-145,57,-140,-143,-146,-144,-142,-141,57,57,57,57,57,-117,-119,-118,57,-104,-105,-102,-107,-103,-106,-100,-99,57,-98,-97,-101,57,-114,-110,-112,-111,-113,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'CCONST':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[58,58,58,58,-123,58,-122,58,58,-145,58,-140,-143,-146,-144,-142,-141,58,58,58,58,58,-117,-119,-118,58,-104,-105,-102,-107,-103,-106,-100,-99,58,-98,-97,-101,58,-114,-110,-112,-111,-113,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'CHARS':([7,45,47,114,127,186,205,270,289,302,],[-17,128,-15,128,128,128,-16,128,128,128,]),'NULL':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[60,60,60,60,-123,60,-122,60,60,-145,60,-140,-143,-146,-144,-142,-141,60,60,60,60,60,-117,-119,-118,60,-104,-105,-102,-107,-103,-106,-100,-99,60,-98,-97,-101,60,-114,-110,-112,-111,-113,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'INT':([7,45,47,114,127,186,200,205,233,270,276,288,289,302,],[-17,129,-15,129,129,129,129,-16,129,129,129,129,129,129,]),'BOOL':([7,45,47,114,127,186,200,205,233,270,276,288,289,302,],[-17,125,-15,125,125,125,125,-16,125,125,125,125,125,125,]),'TRUE':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[61,61,61,61,-123,61,-122,61,61,-145,61,-140,-143,-146,-144,-142,-141,61,61,61,61,61,-117,-119,-118,61,-104,-105,-102,-107,-103,-106,-100,-99,61,-98,-97,-101,61,-114,-110,-112,-111,-113,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'MODCREASE':([5,7,10,13,27,28,30,38,43,81,103,191,199,238,241,245,313,],[-60,-17,-58,-179,-178,-59,-57,108,-56,-56,-61,-191,-180,-192,-62,-181,-65,]),'LESSEQ':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,154,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'OR':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,155,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'EXIT':([0,9,16,18,19,21,22,29,40,84,85,89,93,101,138,168,171,173,175,182,185,197,221,222,225,226,228,229,266,269,301,],[14,-7,-8,-5,-2,-6,14,14,-4,14,-128,14,-151,-3,-18,14,14,14,-152,14,-24,-9,14,14,-201,14,-129,14,14,-204,-205,]),'ELSIF':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,85,93,103,145,146,167,168,175,191,199,209,211,212,216,217,222,228,238,241,245,257,259,263,294,300,313,319,321,322,332,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-128,-151,-61,-121,-127,220,-149,-152,-191,-180,-116,260,-85,-96,-109,-150,-129,-192,-62,-181,-91,296,-82,-88,220,-65,-89,-93,-83,-94,]),'MINUS':([6,7,10,13,25,27,28,30,32,49,50,51,52,53,54,55,56,58,60,61,63,64,66,69,70,72,73,74,75,76,77,79,80,81,83,95,103,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,191,199,200,206,207,208,209,210,212,216,217,220,232,237,238,239,240,241,242,245,252,260,261,262,263,287,288,290,296,309,310,313,322,327,],[62,-17,-58,-179,62,-178,-59,-57,62,-67,-77,-73,-81,-108,-60,62,-126,-79,-80,-78,-125,-76,62,-75,-124,-115,-120,-72,-69,-74,166,-71,-68,-56,-70,62,-61,-145,62,-140,-143,-146,-144,-142,-141,62,62,62,62,62,-117,-119,-118,-121,-127,62,-104,-105,-102,-107,-103,-106,-100,-99,62,-98,-97,-101,62,-114,-110,-112,-111,-113,-191,-180,62,62,62,62,-116,62,-85,166,-109,62,62,62,-192,62,62,-62,62,-181,-56,62,62,62,-82,62,62,62,62,62,62,-65,-83,62,]),'OD':([22,85,89,93,173,175,228,229,],[90,-128,174,-151,230,-152,-129,275,]),'CHAR':([7,45,47,114,127,186,200,205,233,270,276,288,289,302,],[-17,135,-15,135,135,135,135,-16,135,135,135,135,135,135,]),'LENGTH':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[36,36,-7,-8,-5,-2,-6,36,36,36,36,-4,36,-123,36,-122,36,36,36,-128,36,-151,36,-3,-145,36,-140,-143,-146,-144,-142,-141,36,36,36,36,-18,36,-117,-119,-118,36,-104,-105,-102,-107,-103,-106,-100,-99,36,-98,-97,-101,36,-114,-110,-112,-111,-113,36,36,36,-152,36,-24,-9,36,36,36,36,36,36,36,36,-201,36,-129,36,36,36,36,36,36,36,36,36,36,-204,36,36,36,36,-205,36,36,36,]),'RPAREN':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,112,117,118,119,120,123,124,125,126,129,130,132,133,134,135,137,145,146,147,188,189,190,191,198,199,203,209,212,216,217,224,238,241,245,254,255,263,271,273,282,283,290,291,292,293,294,303,304,313,314,316,317,318,319,322,324,325,326,333,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,191,199,-30,-47,-31,-28,-32,-37,-46,-36,-35,-33,-29,-41,-38,-34,-121,-127,212,-182,-184,238,-191,245,-180,-45,-116,-85,-96,-109,272,-192,-62,-181,292,293,-82,306,-208,-183,-44,199,-48,-40,-39,-88,-210,-211,-65,-42,-49,-54,-184,-89,-83,334,-212,-209,336,]),'FALSE':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[50,50,50,50,-123,50,-122,50,50,-145,50,-140,-143,-146,-144,-142,-141,50,50,50,50,50,-117,-119,-118,50,-104,-105,-102,-107,-103,-106,-100,-99,50,-98,-97,-101,50,-114,-110,-112,-111,-113,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'PRINT':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[31,31,-7,-8,-5,-2,-6,31,31,31,31,-4,31,-123,31,-122,31,31,31,-128,31,-151,31,-3,-145,31,-140,-143,-146,-144,-142,-141,31,31,31,31,-18,31,-117,-119,-118,31,-104,-105,-102,-107,-103,-106,-100,-99,31,-98,-97,-101,31,-114,-110,-112,-111,-113,31,31,31,-152,31,-24,-9,31,31,31,31,31,31,31,31,-201,31,-129,31,31,31,31,31,31,31,31,31,31,-204,31,31,31,31,-205,31,31,31,]),'GREATEREQ':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,149,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'UPPER':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[24,24,-7,-8,-5,-2,-6,24,24,24,24,-4,24,-123,24,-122,24,24,24,-128,24,-151,24,-3,-145,24,-140,-143,-146,-144,-142,-141,24,24,24,24,-18,24,-117,-119,-118,24,-104,-105,-102,-107,-103,-106,-100,-99,24,-98,-97,-101,24,-114,-110,-112,-111,-113,24,24,24,-152,24,-24,-9,24,24,24,24,24,24,24,24,-201,24,-129,24,24,24,24,24,24,24,24,24,24,-204,24,24,24,24,-205,24,24,24,]),'TIMES':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,72,73,74,75,76,79,80,81,83,103,145,146,191,199,209,212,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,141,-60,-126,-79,-80,-78,-125,-76,-75,-124,-115,-120,-72,-69,-74,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,141,-192,-62,-181,-56,-82,-65,-83,]),'TYPE':([0,9,16,18,19,21,29,40,85,101,138,171,185,197,225,226,228,269,301,],[23,-7,-8,-5,-2,-6,23,-4,-128,-3,-18,23,-24,-9,-201,23,-129,-204,-205,]),'PLUS':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,-115,-120,-72,-69,-74,164,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,164,-109,-192,-62,-181,-56,-82,-65,-83,]),'DIVIDE':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,72,73,74,75,76,79,80,81,83,103,145,146,191,199,209,212,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,143,-60,-126,-79,-80,-78,-125,-76,-75,-124,-115,-120,-72,-69,-74,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,143,-192,-62,-181,-56,-82,-65,-83,]),'END':([9,16,18,19,21,40,85,101,138,171,185,197,225,226,228,269,301,],[-7,-8,-5,-2,-6,-4,-128,-3,-18,227,-24,-9,-201,274,-129,-204,-205,]),'DO':([0,9,16,18,19,21,22,29,40,84,85,89,93,101,138,168,171,173,175,182,185,197,221,222,225,226,228,229,266,269,301,],[22,-7,-8,-5,-2,-6,22,22,-4,22,-128,22,-151,-3,-18,22,22,22,-152,22,-24,-9,22,22,-201,22,-129,22,22,-204,-205,]),'WHILE':([7,10,13,22,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,124,125,129,130,132,135,137,145,146,177,178,179,181,191,199,209,212,216,217,238,241,245,263,279,280,292,293,294,307,312,313,319,322,328,331,335,],[-17,-58,-179,95,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-32,-37,-36,-35,-33,-38,-34,-121,-127,-166,95,-165,-164,-191,-180,-116,-85,-96,-109,-192,-62,-181,-82,-174,-175,-40,-39,-88,-176,-167,-65,-89,-83,-172,-168,-173,]),'ASSIGN':([5,7,10,13,27,28,30,38,43,45,47,81,98,103,118,119,120,123,124,125,126,129,130,132,133,134,135,136,137,176,180,191,195,199,203,205,238,241,245,291,292,293,313,316,317,],[-60,-17,-58,-179,-178,-59,-57,106,-56,122,-15,-56,186,-61,-30,-47,-31,-28,-32,-37,-46,-36,-35,-33,-29,-41,-38,208,-34,232,-169,-191,242,-180,-45,-16,-192,-62,-181,-48,-40,-39,-65,-49,-54,]),'TO':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,263,277,278,279,294,308,311,313,319,322,329,330,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-82,-170,309,-174,-88,327,309,-65,-89,-83,-171,-55,]),'AND':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,156,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'RESULT':([0,9,16,18,19,21,22,29,40,84,85,89,93,101,138,168,171,173,175,182,185,197,221,222,225,226,228,229,266,269,301,],[32,-7,-8,-5,-2,-6,32,32,-4,32,-128,32,-151,-3,-18,32,32,32,-152,32,-24,-9,32,32,-201,32,-129,32,32,-204,-205,]),'READ':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[33,33,-7,-8,-5,-2,-6,33,33,33,33,-4,33,-123,33,-122,33,33,33,-128,33,-151,33,-3,-145,33,-140,-143,-146,-144,-142,-141,33,33,33,33,-18,33,-117,-119,-118,33,-104,-105,-102,-107,-103,-106,-100,-99,33,-98,-97,-101,33,-114,-110,-112,-111,-113,33,33,33,-152,33,-24,-9,33,33,33,33,33,33,33,33,-201,33,-129,33,33,33,33,33,33,33,33,33,33,-204,33,33,33,33,-205,33,33,33,]),'INCREASE':([5,7,10,13,27,28,30,38,43,81,103,191,199,238,241,245,313,],[-60,-17,-58,-179,-178,-59,-57,110,-56,-56,-61,-191,-180,-192,-62,-181,-65,]),'LOC':([7,118,119,120,123,124,125,126,129,130,132,133,134,135,137,203,291,292,293,304,316,317,324,],[-17,-30,-47,-31,-28,-32,-37,-46,-36,-35,-33,-29,-41,-38,-34,-45,-48,-40,-39,325,-49,-54,333,]),'MOD':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,72,73,74,75,76,79,80,81,83,103,145,146,191,199,209,212,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,142,-60,-126,-79,-80,-78,-125,-76,-75,-124,-115,-120,-72,-69,-74,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,142,-192,-62,-181,-56,-82,-65,-83,]),'BY':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,263,277,278,279,294,313,319,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-82,-170,310,-174,-88,-65,-89,-83,]),'REF':([7,45,47,114,127,186,205,270,289,302,],[-17,127,-15,127,127,127,-16,127,127,127,]),'NUM':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[34,34,-7,-8,-5,-2,-6,34,34,34,34,-4,34,-123,34,-122,34,34,34,-128,34,-151,34,-3,-145,34,-140,-143,-146,-144,-142,-141,34,34,34,34,-18,34,-117,-119,-118,34,-104,-105,-102,-107,-103,-106,-100,-99,34,-98,-97,-101,34,-114,-110,-112,-111,-113,34,34,34,-152,34,-24,-9,34,34,34,34,34,34,34,34,-201,34,-129,34,34,34,34,34,34,34,34,34,34,-204,34,34,34,34,-205,34,34,34,]),'$end':([3,9,16,18,19,21,29,40,85,101,138,185,197,225,228,],[0,-7,-8,-5,-2,-6,-1,-4,-128,-3,-18,-24,-9,-201,-129,]),'THEN':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,103,144,145,146,191,199,209,212,216,217,238,241,245,263,265,294,297,313,319,320,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-90,-71,-68,-56,168,-70,-61,210,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-82,168,-88,210,-65,-89,210,-83,]),'LPAREN':([1,6,7,15,24,25,31,32,33,34,36,39,43,44,55,57,59,62,66,81,95,104,105,106,107,108,109,110,111,112,113,117,122,124,125,129,130,132,133,134,135,137,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,200,206,207,208,210,220,232,237,239,240,242,251,252,260,261,262,268,280,281,287,288,290,292,293,296,307,309,310,327,],[-197,66,-17,-194,-196,66,-200,66,-199,-195,-198,112,117,-193,66,-123,66,-122,66,117,66,-145,66,-140,-143,-146,-144,-142,-141,66,66,66,66,-32,-37,-36,-35,-33,206,207,-38,-34,66,-117,-119,-118,66,-104,-105,-102,-107,-103,-106,-100,-99,66,-98,-97,-101,66,-114,-110,-112,-111,-113,224,66,66,66,66,66,66,66,66,66,66,66,206,290,66,66,66,302,206,207,66,66,66,-40,-39,66,206,66,66,66,]),'IN':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,176,180,191,199,209,212,216,217,231,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,152,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,233,-169,-191,-180,-116,-85,-96,-109,276,-192,-62,-181,-56,-82,-65,-83,]),'DIFF':([7,10,13,27,28,30,49,50,51,52,53,54,56,58,60,61,63,64,69,70,71,72,73,74,75,76,77,79,80,81,83,103,145,146,191,199,209,212,216,217,238,241,245,252,263,313,322,],[-17,-58,-179,-178,-59,-57,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-75,-124,151,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-61,-121,-127,-191,-180,-116,-85,-96,-109,-192,-62,-181,-56,-82,-65,-83,]),'ARRAY':([7,45,47,114,127,186,205,270,289,302,],[-17,121,-15,121,121,121,-16,121,121,121,]),'ICONST':([6,25,32,55,57,59,62,66,95,104,105,106,107,108,109,110,111,112,113,117,122,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,200,204,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[64,64,64,64,-123,64,-122,64,64,-145,64,-140,-143,-146,-144,-142,-141,64,64,64,64,64,-117,-119,-118,64,-104,-105,-102,-107,-103,-106,-100,-99,64,-98,-97,-101,64,-114,-110,-112,-111,-113,64,253,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SEMI':([4,5,7,10,11,12,13,17,20,25,26,27,28,30,35,37,46,48,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,87,88,90,94,96,97,99,100,102,103,115,116,118,119,120,123,124,125,126,129,130,132,133,134,135,137,139,145,146,170,172,174,177,178,179,181,183,187,191,195,199,201,202,203,209,212,216,217,218,223,227,230,234,235,236,238,241,243,244,245,256,263,264,267,272,274,275,279,280,286,291,292,293,294,306,307,312,313,316,317,319,322,328,331,334,335,336,],[-137,-133,-17,-58,-132,85,-179,-138,-135,-187,-136,-178,-59,-57,-131,-134,138,-19,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-90,-71,-68,-56,-70,-185,-186,173,-157,-161,-25,185,-188,-190,-189,-61,197,-10,-30,-47,-31,-28,-32,-37,-46,-36,-35,-33,-29,-41,-38,-34,-20,-121,-127,225,228,-159,-166,-162,-165,-164,-177,-139,-191,-12,-180,-23,-21,-45,-116,-85,-96,-109,-147,269,-202,-158,-163,-26,-27,-192,-62,-13,-11,-181,-22,-82,-148,301,-206,-203,-160,-174,-175,-14,-48,-40,-39,-88,-207,-176,-167,-65,-49,-54,-89,-83,-172,-168,-213,-173,-214,]),'DECREASE':([5,7,10,13,27,28,30,38,43,81,103,191,199,238,241,245,313,],[-60,-17,-58,-179,-178,-59,-57,107,-56,-56,-61,-191,-180,-192,-62,-181,-65,]),'DCL':([0,9,16,18,19,21,29,40,85,101,138,171,185,197,225,226,228,269,301,],[42,-7,-8,-5,-2,-6,42,-4,-128,-3,-18,42,-24,-9,-201,42,-129,-204,-205,]),'LBRACKET':([5,7,10,13,27,28,30,38,41,43,49,50,51,52,54,56,58,60,61,64,67,69,70,74,75,76,79,80,81,83,103,121,128,146,191,199,212,238,241,245,252,263,313,322,],[-60,-17,-58,-179,-178,-59,-57,-66,113,-56,-67,-77,-73,-81,-60,-84,-79,-80,-78,-76,148,-75,-66,-72,-69,-74,-71,-68,-56,-70,-61,200,204,-66,-191,-180,-85,-192,-62,-181,-56,-82,-65,-83,]),'COMMA':([7,10,13,27,28,30,45,47,49,50,51,52,53,54,56,58,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,80,81,83,96,97,98,103,114,115,116,118,119,120,123,124,125,126,129,130,132,133,134,135,137,145,146,188,189,190,191,193,194,195,198,199,203,205,209,212,216,217,235,236,238,241,243,244,245,248,249,250,251,263,270,271,273,282,283,285,286,291,292,293,294,303,304,313,314,315,316,317,318,319,322,325,326,],[-17,-58,-179,-178,-59,-57,131,-15,-67,-77,-73,-81,-108,-60,-126,-79,-80,-78,-125,-76,-87,-75,-124,-86,-115,-120,-72,-69,-74,-95,-71,-68,-56,-70,-25,184,131,-61,131,196,-10,-30,-47,-31,-28,-32,-37,-46,-36,-35,-33,-29,-41,-38,-34,-121,-127,-182,-184,237,-191,-63,240,-12,237,-180,-45,-16,-116,-85,-96,-109,-26,-27,-192,-62,-13,-11,-181,-50,288,-53,-52,-82,131,305,-208,-183,-44,-64,-14,-48,-40,-39,-88,-210,-211,-65,-42,-51,-49,-54,-184,-89,-83,-212,-209,]),'ASC':([0,6,9,16,18,19,21,22,25,29,32,40,55,57,59,62,65,66,84,85,89,93,95,101,104,105,106,107,108,109,110,111,112,113,117,122,138,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,171,173,175,182,185,197,200,206,207,208,210,220,221,222,225,226,228,229,232,237,239,240,242,260,261,262,266,269,287,288,290,296,301,309,310,327,],[15,15,-7,-8,-5,-2,-6,15,15,15,15,-4,15,-123,15,-122,15,15,15,-128,15,-151,15,-3,-145,15,-140,-143,-146,-144,-142,-141,15,15,15,15,-18,15,-117,-119,-118,15,-104,-105,-102,-107,-103,-106,-100,-99,15,-98,-97,-101,15,-114,-110,-112,-111,-113,15,15,15,-152,15,-24,-9,15,15,15,15,15,15,15,15,-201,15,-129,15,15,15,15,15,15,15,15,15,15,-204,15,15,15,15,-205,15,15,15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'control_part':([22,],[88,]),'assignment_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'character_string_literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'program':([0,],[3,]),'arithmetic_multiplicative_operator':([53,217,],[140,140,]),'if_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assigning_operator':([38,],[105,]),'call_action':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[5,54,5,54,5,54,54,54,54,54,5,5,54,54,54,54,54,54,54,54,54,54,5,5,5,5,54,54,54,54,54,54,5,5,5,5,54,54,54,54,54,54,54,54,5,54,54,54,54,54,54,54,]),'mode_name':([45,114,127,186,270,289,302,],[123,123,123,123,123,123,123,]),'operator1':([71,],[157,]),'index_mode':([200,288,],[248,315,]),'synonym_definition':([2,46,],[48,139,]),'string_mode':([45,114,127,186,270,289,302,],[126,126,126,126,126,126,126,]),'parameter':([112,117,237,290,],[188,188,282,188,]),'label_id':([0,22,29,89,168,171,173,221,222,226,229,266,],[8,92,8,92,92,8,92,92,92,8,92,92,]),'procedure_statement':([0,29,171,226,],[9,9,9,9,]),'array_element':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'action_statement_list':([22,168,173,221,],[89,222,229,266,]),'elsif_expression':([211,],[259,]),'synonym_statement':([0,29,171,226,],[18,18,18,18,]),'element_mode':([289,],[316,]),'constant_expression':([122,208,],[202,256,]),'mode':([45,114,127,186,270,289,302,],[136,195,203,236,304,317,324,]),'do_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'builtin_call':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'statement':([0,29,171,226,],[19,101,19,101,]),'array_primitive_value':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'conditional_expression':([6,25,32,55,66,95,105,112,113,117,122,148,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expression':([6,25,32,55,66,95,105,112,113,117,122,148,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[78,100,100,78,147,78,187,189,193,189,201,215,247,247,247,201,257,78,279,189,283,285,286,78,298,283,283,247,318,78,279,330,279,]),'while_control':([22,178,],[94,234,]),'result_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'step_enumeration':([91,],[179,]),'procedure_call':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array_slice':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'location':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[38,70,38,70,38,70,70,70,146,70,38,38,70,70,70,70,70,70,70,70,70,70,38,38,38,38,70,70,70,70,70,70,38,38,38,38,70,70,70,70,70,70,70,70,38,70,70,70,70,70,70,70,]),'integer_mode':([45,114,127,186,200,233,270,276,288,289,302,],[124,124,124,124,124,124,124,124,124,124,124,]),'result_spec':([223,],[267,]),'bracketed_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'procedure_definition':([84,],[170,]),'formal_procedure_head':([84,],[171,]),'boolean_literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'loop_counter':([91,],[176,]),'exit_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'operand1':([6,25,32,55,66,95,105,112,113,117,122,148,157,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[77,77,77,77,77,77,77,77,77,77,77,77,216,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'range_enumeration':([91,],[177,]),'builtin_name':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'declaration_statement':([0,29,171,226,],[40,40,40,40,]),'boolean_mode':([45,114,127,186,200,233,270,276,288,289,302,],[132,132,132,132,132,132,132,132,132,132,132,]),'array_location':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'identifier':([0,2,6,14,22,23,25,29,32,42,45,46,55,59,65,66,84,89,91,95,105,112,113,114,117,122,127,131,140,148,157,161,168,171,173,182,184,186,196,200,206,207,208,210,220,221,222,224,226,229,232,233,237,239,240,242,260,261,262,266,270,276,287,288,289,290,296,302,305,309,310,327,],[43,47,81,87,43,47,81,43,81,47,134,47,81,81,81,81,81,43,180,81,81,81,81,134,81,81,134,205,81,81,81,81,43,43,43,81,47,134,47,252,81,81,81,81,81,43,43,47,43,43,81,281,81,81,81,81,81,81,81,43,134,281,81,252,134,81,81,134,47,81,81,81,]),'relational_operator':([71,],[159,]),'formal_parameter_list':([224,],[271,]),'parenthesized_expression':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'synonym_list':([2,],[46,]),'step_value':([278,],[311,]),'character_literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'return_action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_mode':([45,114,127,186,270,289,302,],[119,119,119,119,119,119,119,]),'for_control':([91,],[178,]),'discrete_expression':([232,309,327,],[277,328,335,]),'string_concatenation_operator':([77,216,],[165,165,]),'start_value':([232,],[278,]),'statement_list':([0,171,],[29,226,]),'operand2':([6,25,32,55,66,95,105,112,113,117,122,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[53,53,53,53,53,53,53,53,53,53,53,53,53,217,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'composite_mode':([45,114,127,186,270,289,302,],[120,120,120,120,120,120,120,]),'empty_literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'parameter_spec':([270,],[303,]),'declaration':([42,196,],[116,244,]),'lower_bound':([113,148,200,206,207,288,290,],[192,213,246,246,246,246,246,]),'end_value':([278,311,],[312,331,]),'iteration':([91,],[181,]),'result':([25,32,],[99,102,]),'exit_label_id':([14,],[86,]),'declaration_list':([42,],[115,]),'integer_expression':([148,310,],[214,329,]),'monadic_operator':([6,25,32,55,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'formal_parameter':([224,305,],[273,326,]),'operator2':([77,216,],[161,161,]),'arithmetic_additive_operator':([77,216,],[163,163,]),'referenced_location':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'action_statement':([0,22,29,89,168,171,173,221,222,226,229,266,],[16,93,16,175,93,16,93,93,175,16,175,175,]),'dereferenced_reference':([0,6,22,25,29,32,55,59,65,66,84,89,95,105,112,113,117,122,140,148,157,161,168,171,173,182,200,206,207,208,210,220,221,222,226,229,232,237,239,240,242,260,261,262,266,287,288,290,296,309,310,327,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'primitive_value':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'reference_mode':([45,114,127,186,270,289,302,],[118,118,118,118,118,118,118,]),'newmode_statement':([0,29,171,226,],[21,21,21,21,]),'index_mode_list':([200,],[249,]),'expression_list':([113,],[194,]),'parenthesis_gambiarra':([169,],[223,]),'closed_dyadic_operator':([38,],[111,]),'else_clause':([167,300,],[219,323,]),'value_array_element':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'mode_definition':([23,184,],[96,235,]),'then_clause':([82,265,],[167,300,]),'discrete_mode':([45,114,127,186,200,233,270,276,288,289,302,],[133,133,133,133,251,280,133,307,251,133,133,]),'operand3':([6,25,32,55,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[72,72,72,72,72,72,72,72,72,72,72,209,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'operand4':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[73,73,73,73,145,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'parameter_list':([112,117,290,],[190,198,198,]),'literal_range':([200,206,207,288,290,],[250,254,255,250,255,]),'newmode_list':([23,],[97,]),'value_array_slice':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'boolean_expression':([6,55,95,220,260,296,],[82,144,183,265,297,320,]),'then_expression':([144,297,320,],[211,321,332,]),'else_expression':([211,259,],[258,295,]),'initialization':([195,],[243,]),'discrete_range_mode':([45,114,127,186,200,233,270,276,288,289,302,],[130,130,130,130,130,130,130,130,130,130,130,]),'identifier_list':([2,23,42,46,184,196,224,305,],[45,98,114,45,98,114,270,270,]),'action':([0,22,29,84,89,168,171,173,182,221,222,226,229,266,],[12,12,12,172,12,12,12,12,172,12,12,12,12,12,]),'integer_literal':([6,25,32,55,59,66,95,105,112,113,117,122,140,148,157,161,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand0':([6,25,32,55,66,95,105,112,113,117,122,148,200,206,207,208,210,220,232,237,239,240,242,260,261,262,287,288,290,296,309,310,327,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'membership_operator':([71,],[158,]),'upper_bound':([239,262,287,],[284,299,314,]),'character_mode':([45,114,127,186,200,233,270,276,288,289,302,],[137,137,137,137,137,137,137,137,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
