
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST WHILE PRINT DCL LOWER RETURN TRUE FALSE READ REF ASC EXIT ELSIF DO ELSE RESULT RETURNS BOOL END FI UPPER CHAR DOWN CHARS SYN NUM LENGTH BY ABS TYPE INT NULL IN THEN FOR IF OD TO LOC PROC ARRAYprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : ICONSTarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'FALSE':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[54,54,54,54,-124,54,54,-123,54,54,54,54,-144,54,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,54,54,-119,-120,-118,54,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'SCONST':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[58,58,58,58,-124,58,58,-123,58,58,58,58,-144,58,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,58,58,-119,-120,-118,58,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'EQUAL':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,147,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'GREATEREQ':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,148,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'LOWER':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[40,-7,40,40,40,-5,-2,-4,40,-6,-8,40,40,40,-152,-3,-124,40,40,40,-123,40,40,-129,40,40,40,-144,40,-145,-142,-146,-143,-147,-141,40,-153,40,40,-113,-112,-115,-111,-114,40,40,-119,-120,-118,40,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,40,-18,40,-9,-24,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-202,-130,40,40,40,40,40,40,-205,40,40,40,40,40,40,-206,40,]),'UPPER':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[21,-7,21,21,21,-5,-2,-4,21,-6,-8,21,21,21,-152,-3,-124,21,21,21,-123,21,21,-129,21,21,21,-144,21,-145,-142,-146,-143,-147,-141,21,-153,21,21,-113,-112,-115,-111,-114,21,21,-119,-120,-118,21,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,21,-18,21,-9,-24,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-202,-130,21,21,21,21,21,21,-205,21,21,21,21,21,21,-206,21,]),'OR':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,149,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'DO':([0,3,5,7,10,12,24,32,35,47,52,53,97,101,118,120,128,129,158,185,189,190,200,206,207,237,238,239,253,280,309,],[5,-7,5,5,-5,-2,-4,-6,-8,5,-152,-3,-129,5,5,-153,5,5,-18,-9,-24,5,5,5,5,5,-202,-130,5,-205,-206,]),'MODCREASE':([6,15,17,29,34,37,38,39,44,81,111,180,194,229,242,243,314,],[-58,-61,-59,-57,113,-17,-60,-180,-179,-57,-62,-192,-181,-193,-182,-63,-66,]),'END':([3,10,12,24,32,35,53,97,158,185,189,190,237,238,239,280,309,],[-7,-5,-2,-4,-6,-8,-3,-129,-18,-9,-24,236,277,-202,-130,-205,-206,]),'PROC':([101,],[193,]),'ID':([0,3,5,6,7,9,10,11,12,16,17,22,24,26,32,35,37,38,39,42,43,44,47,48,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,96,97,101,104,105,106,107,108,109,110,111,112,113,114,118,120,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,165,176,178,180,184,185,187,188,189,190,194,200,204,205,206,207,209,211,213,214,218,219,220,221,223,225,226,227,228,229,230,233,237,238,239,241,242,243,244,245,247,253,258,260,261,262,263,280,283,291,293,295,298,302,303,304,305,308,309,313,314,317,322,324,],[37,-7,37,-58,37,37,-5,37,-2,37,-59,37,-4,37,-6,-8,-17,-60,-180,37,37,-179,37,37,37,-152,-3,-78,-72,-80,-82,-124,37,-96,-79,37,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,37,-123,-74,-127,37,-81,-57,-126,-71,-116,-87,-75,-125,37,-19,37,-15,37,37,-129,37,37,37,-144,37,-145,-142,-146,-62,-143,-147,-141,37,-153,37,37,-113,-112,-115,-111,-114,37,-128,37,-119,-120,-118,37,-122,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,37,-18,-20,37,37,37,-192,37,-9,37,37,-24,37,-181,37,37,37,37,37,37,37,-110,-117,-86,-97,37,37,37,-16,-21,-23,37,-193,37,37,37,-202,-130,37,-182,-63,37,37,37,37,37,37,37,-83,-22,-205,37,37,37,-89,37,37,37,37,37,37,-206,37,-66,37,-90,-84,]),'NOT':([9,26,43,49,60,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[59,59,59,59,59,59,59,59,59,-144,59,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,59,59,-119,-120,-118,59,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ARRAY':([37,91,92,96,165,187,225,283,304,308,],[-17,169,-15,169,169,169,-16,169,169,169,]),'TIMES':([6,17,37,38,39,44,54,55,56,58,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,86,88,111,138,144,180,194,213,214,218,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-79,-61,-73,-70,-69,142,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-75,-125,-62,-128,-122,-192,-181,142,-117,-86,-193,-182,-63,-83,-57,-66,-84,]),'RETURNS':([240,282,312,],[278,-207,-208,]),'GREATER':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,154,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'DIFF':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,155,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'IF':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,60,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,143,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[9,-7,9,9,60,-5,-2,-4,60,-6,-8,60,9,60,-152,-3,60,60,60,-129,9,60,60,-144,60,-145,-142,-146,-143,-147,-141,9,-153,9,9,60,-18,60,-9,-24,9,9,60,9,9,60,60,60,60,60,60,60,60,9,-202,-130,60,60,9,60,60,60,-205,60,60,60,60,60,60,-206,60,]),'IN':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,123,124,138,144,180,194,203,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,146,-75,-125,-62,204,-170,-128,-122,-192,-181,247,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'CHAR':([37,91,92,96,165,187,204,223,225,247,283,304,305,308,],[-17,168,-15,168,168,168,168,168,-16,168,168,168,168,168,]),'THEN':([6,17,37,38,39,44,54,55,56,57,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,87,88,111,131,138,144,180,194,213,214,218,219,229,242,243,255,262,295,296,314,322,323,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,129,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-91,-125,-62,211,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,129,-83,-89,211,-66,-90,211,-84,]),'FOR':([5,],[48,]),'ARROW':([6,9,15,17,26,29,34,37,38,39,43,44,49,59,60,64,75,76,79,81,88,93,104,105,106,107,108,109,110,111,112,113,114,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,180,194,205,209,211,220,221,223,228,229,230,233,242,243,244,245,258,260,261,270,291,293,298,302,303,305,314,317,],[-58,63,-61,-59,63,-57,111,-17,-60,-180,63,-179,63,-124,63,-61,63,-123,63,-57,111,63,63,63,-144,63,-145,-142,-146,-62,-143,-147,-141,-113,-112,-115,-111,-114,63,111,63,-119,-120,-118,63,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,63,63,-192,-181,63,63,63,63,63,63,63,-193,63,63,-182,-63,63,63,63,63,63,-57,63,63,63,63,63,63,-66,63,]),'COLON':([6,17,23,29,37,38,39,44,50,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,197,198,213,214,215,217,218,219,229,242,243,262,265,266,270,295,314,322,324,326,],[-58,-59,101,-131,-17,-60,-180,-179,128,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,-128,-122,-192,-181,245,-43,-110,-117,261,-43,-86,-97,-193,-182,-63,-83,302,-43,-57,-89,-66,-90,-84,-43,]),'MOD':([6,17,37,38,39,44,54,55,56,58,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,86,88,111,138,144,180,194,213,214,218,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-79,-61,-73,-70,-69,141,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-75,-125,-62,-128,-122,-192,-181,141,-117,-86,-193,-182,-63,-83,-57,-66,-84,]),'WHILE':([5,6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,121,122,125,126,138,144,160,163,167,168,173,175,177,180,194,213,214,218,219,229,242,243,249,252,262,288,290,295,301,307,314,315,316,322,324,333,],[49,-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,49,-166,-165,-167,-128,-122,-33,-35,-32,-38,-37,-36,-34,-192,-181,-110,-117,-86,-97,-193,-182,-63,-176,-175,-83,-177,-168,-89,-39,-40,-66,-169,-173,-90,-84,-174,]),'DCL':([0,3,7,10,12,24,32,35,53,97,158,185,189,190,237,238,239,280,309,],[16,-7,16,-5,-2,-4,-6,-8,-3,-129,-18,-9,-24,16,16,-202,-130,-205,-206,]),'CHARS':([37,91,92,96,165,187,225,283,304,308,],[-17,174,-15,174,174,174,-16,174,174,174,]),'READ':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[18,-7,18,18,18,-5,-2,-4,18,-6,-8,18,18,18,-152,-3,-124,18,18,18,-123,18,18,-129,18,18,18,-144,18,-145,-142,-146,-143,-147,-141,18,-153,18,18,-113,-112,-115,-111,-114,18,18,-119,-120,-118,18,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,18,-18,18,-9,-24,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-202,-130,18,18,18,18,18,18,-205,18,18,18,18,18,18,-206,18,]),'DECREASE':([6,15,17,29,34,37,38,39,44,81,111,180,194,229,242,243,314,],[-58,-61,-59,-57,106,-17,-60,-180,-179,-57,-62,-192,-181,-193,-182,-63,-66,]),'LENGTH':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[19,-7,19,19,19,-5,-2,-4,19,-6,-8,19,19,19,-152,-3,-124,19,19,19,-123,19,19,-129,19,19,19,-144,19,-145,-142,-146,-143,-147,-141,19,-153,19,19,-113,-112,-115,-111,-114,19,19,-119,-120,-118,19,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,19,-18,19,-9,-24,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-202,-130,19,19,19,19,19,19,-205,19,19,19,19,19,19,-206,19,]),'RPAREN':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,93,104,111,138,144,145,160,162,163,164,166,167,168,170,171,172,173,175,177,179,180,181,182,183,194,195,213,214,218,219,222,229,241,242,243,262,264,274,275,281,284,287,295,301,303,306,307,310,311,314,322,324,325,326,327,328,330,331,332,335,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,180,194,-62,-128,-122,218,-33,-28,-35,-41,-47,-32,-38,-46,-31,-30,-37,-36,-34,-29,-192,-183,229,-185,-181,242,-110,-117,-86,-97,-45,-193,282,-182,-63,-83,301,307,-184,-209,312,-44,-89,-39,194,-48,-40,-212,-211,-66,-90,-84,-42,-185,-55,-50,336,-213,-210,337,]),'LOC':([37,160,162,163,164,166,167,168,170,171,172,173,175,177,179,222,301,306,307,310,327,328,330,],[-17,-33,-28,-35,-41,-47,-32,-38,-46,-31,-30,-37,-36,-34,-29,-45,-39,-48,-40,331,-55,-50,335,]),'CCONST':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[56,56,56,56,-124,56,56,-123,56,56,56,56,-144,56,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,56,56,-119,-120,-118,56,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LPAREN':([2,9,13,18,19,21,26,28,29,31,37,40,41,43,49,59,60,75,76,79,81,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,160,163,164,167,168,173,175,177,178,179,193,205,209,211,220,221,223,228,230,233,244,245,248,249,258,260,261,269,270,278,288,291,293,298,301,302,303,305,307,317,],[-195,79,93,-200,-199,-197,79,-196,104,-194,-17,-198,-201,79,79,-124,79,79,-123,79,104,79,79,79,-144,79,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,79,79,-119,-120,-118,79,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,79,-33,-35,221,-32,-38,-37,-36,-34,79,228,241,79,79,79,79,79,79,79,79,79,79,79,221,228,79,79,79,228,303,308,228,79,79,79,-39,79,79,79,-40,79,]),'DOWN':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,123,124,138,144,180,194,213,214,218,219,229,242,243,250,251,252,262,289,295,314,318,319,322,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,203,-170,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-171,292,-175,-83,292,-89,-66,-172,-56,-90,-84,]),'TYPE':([0,3,7,10,12,24,32,35,53,97,158,185,189,190,237,238,239,280,309,],[22,-7,22,-5,-2,-4,-6,-8,-3,-129,-18,-9,-24,22,22,-202,-130,-205,-206,]),'FI':([6,17,37,38,39,44,52,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,97,111,120,129,130,138,144,180,194,206,207,208,213,214,218,219,229,239,242,243,253,257,262,294,295,297,299,314,320,322,324,],[-58,-59,-17,-60,-180,-179,-152,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-129,-62,-153,-150,210,-128,-122,-192,-181,-151,-154,254,-110,-117,-86,-97,-193,-130,-182,-63,-155,295,-83,-156,-89,322,-93,-66,-157,-90,-84,]),'ICONST':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,224,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[69,69,69,69,-124,69,69,-123,69,69,69,69,-144,69,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,69,69,-119,-120,-118,69,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,69,69,69,69,69,69,69,69,272,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'RETURN':([0,3,5,7,10,12,24,32,35,47,52,53,97,101,118,120,128,129,158,185,189,190,200,206,207,237,238,239,253,280,309,],[43,-7,43,43,-5,-2,-4,-6,-8,43,-152,-3,-129,43,43,-153,43,43,-18,-9,-24,43,43,43,43,43,-202,-130,43,-205,-206,]),'RBRACKET':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,160,163,167,168,173,175,177,180,194,196,198,213,214,216,217,218,219,229,242,243,262,267,268,269,271,272,273,285,286,287,295,300,301,307,314,322,324,325,329,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,-128,-122,-33,-35,-32,-38,-37,-36,-34,-192,-181,243,-64,-110,-117,262,-56,-86,-97,-193,-182,-63,-83,-54,-51,-53,304,-49,306,-65,314,-44,-89,324,-39,-40,-66,-90,-84,-42,-52,]),'ELSE':([6,17,37,38,39,44,52,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,97,111,120,129,130,138,144,180,194,206,212,213,214,218,219,229,239,242,243,256,259,262,294,295,314,321,322,324,334,],[-58,-59,-17,-60,-180,-179,-152,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-129,-62,-153,-150,207,-128,-122,-192,-181,-151,260,-110,-117,-86,-97,-193,-130,-182,-63,-92,260,-83,207,-89,-66,-94,-90,-84,-95,]),'AND':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,151,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'INT':([37,91,92,96,165,187,204,223,225,247,283,304,305,308,],[-17,175,-15,175,175,175,175,175,-16,175,175,175,175,175,]),'RESULT':([0,3,5,7,10,12,24,32,35,47,52,53,97,101,118,120,128,129,158,185,189,190,200,206,207,237,238,239,253,280,309,],[26,-7,26,26,-5,-2,-4,-6,-8,26,-152,-3,-129,26,26,-153,26,26,-18,-9,-24,26,26,26,26,26,-202,-130,26,-205,-206,]),'INCREASE':([6,15,17,29,34,37,38,39,44,81,111,180,194,229,242,243,314,],[-58,-61,-59,-57,112,-17,-60,-180,-179,-57,-62,-192,-181,-193,-182,-63,-66,]),'NUM':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[28,-7,28,28,28,-5,-2,-4,28,-6,-8,28,28,28,-152,-3,-124,28,28,28,-123,28,28,-129,28,28,28,-144,28,-145,-142,-146,-143,-147,-141,28,-153,28,28,-113,-112,-115,-111,-114,28,28,-119,-120,-118,28,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,28,-18,28,-9,-24,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-202,-130,28,28,28,28,28,28,-205,28,28,28,28,28,28,-206,28,]),'OD':([5,47,52,97,118,120,200,239,],[51,119,-152,-129,201,-153,246,-130,]),'TO':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,250,251,252,262,289,292,295,314,318,319,322,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-171,291,-175,-83,291,317,-89,-66,-172,-56,-90,-84,]),'PLUS':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,132,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,132,-193,-182,-63,-83,-57,-66,-84,]),'SEMI':([4,6,8,14,15,17,20,25,27,33,36,37,38,39,43,44,45,46,51,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,87,88,89,90,94,95,98,100,102,103,111,115,116,117,119,121,122,125,126,127,138,144,159,160,162,163,164,166,167,168,170,171,172,173,175,177,179,180,186,191,192,194,199,201,202,210,213,214,218,219,222,226,227,229,231,232,234,235,236,240,242,243,246,249,252,254,262,263,276,277,279,282,288,290,295,301,306,307,312,314,315,316,322,324,327,328,333,336,337,],[-136,-58,-132,-133,-134,-59,97,-139,-135,-138,-137,-17,-60,-180,-188,-179,118,-162,-158,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-91,-125,158,-19,-10,185,-25,189,-190,-191,-62,-186,-187,-189,-160,-163,-166,-165,-167,-178,-128,-122,-20,-33,-28,-35,-41,-47,-32,-38,-46,-31,-30,-37,-36,-34,-29,-192,-12,238,239,-181,-140,-159,-164,-148,-110,-117,-86,-97,-45,-21,-23,-193,-11,-13,-27,-26,-203,280,-182,-63,-161,-176,-175,-149,-83,-22,-14,-204,309,-207,-177,-168,-89,-39,-48,-40,-208,-66,-169,-173,-90,-84,-55,-50,-174,-214,-215,]),'NULL':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[80,80,80,80,-124,80,80,-123,80,80,80,80,-144,80,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,80,80,-119,-120,-118,80,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'LBRACKET':([6,15,17,29,30,34,37,38,39,44,54,55,56,58,62,64,65,66,67,69,70,72,73,77,78,80,81,83,86,88,111,138,169,174,180,194,218,229,242,243,262,270,314,324,],[-58,-61,-59,-57,105,-67,-17,-60,-180,-179,-78,-72,-80,-82,-79,-61,-73,-70,-69,-77,143,-76,-68,-74,-85,-81,-57,-71,-75,-67,-62,-67,223,224,-192,-181,-86,-193,-182,-63,-83,-57,-66,-84,]),'SYN':([0,3,7,10,12,24,32,35,53,97,158,185,189,190,237,238,239,280,309,],[11,-7,11,-5,-2,-4,-6,-8,-3,-129,-18,-9,-24,11,11,-202,-130,-205,-206,]),'ELSIF':([6,17,37,38,39,44,52,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,97,111,120,129,130,138,144,180,194,206,212,213,214,218,219,229,239,242,243,256,259,262,294,295,314,321,322,324,334,],[-58,-59,-17,-60,-180,-179,-152,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-129,-62,-153,-150,209,-128,-122,-192,-181,-151,258,-110,-117,-86,-97,-193,-130,-182,-63,-92,298,-83,209,-89,-66,-94,-90,-84,-95,]),'DIVCREASE':([6,15,17,29,34,37,38,39,44,81,111,180,194,229,242,243,314,],[-58,-61,-59,-57,110,-17,-60,-180,-179,-57,-62,-192,-181,-193,-182,-63,-66,]),'DIVIDE':([6,17,37,38,39,44,54,55,56,58,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,86,88,111,138,144,180,194,213,214,218,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-79,-61,-73,-70,-69,140,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-75,-125,-62,-128,-122,-192,-181,140,-117,-86,-193,-182,-63,-83,-57,-66,-84,]),'TRUE':([9,26,43,49,59,60,75,76,79,93,104,105,106,107,108,109,110,112,113,114,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[62,62,62,62,-124,62,62,-123,62,62,62,62,-144,62,-145,-142,-146,-143,-147,-141,-113,-112,-115,-111,-114,62,62,-119,-120,-118,62,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ABS':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[31,-7,31,31,31,-5,-2,-4,31,-6,-8,31,31,31,-152,-3,-124,31,31,31,-123,31,31,-129,31,31,31,-144,31,-145,-142,-146,-143,-147,-141,31,-153,31,31,-113,-112,-115,-111,-114,31,31,-119,-120,-118,31,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,31,-18,31,-9,-24,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-202,-130,31,31,31,31,31,31,-205,31,31,31,31,31,31,-206,31,]),'STRCAT':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,134,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,134,-193,-182,-63,-83,-57,-66,-84,]),'BOOL':([37,91,92,96,165,187,204,223,225,247,283,304,305,308,],[-17,173,-15,173,173,173,173,173,-16,173,173,173,173,173,]),'BY':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,250,251,252,262,295,314,322,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-171,293,-175,-83,-89,-66,-90,-84,]),'ASC':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[2,-7,2,2,2,-5,-2,-4,2,-6,-8,2,2,2,-152,-3,-124,2,2,2,-123,2,2,-129,2,2,2,-144,2,-145,-142,-146,-143,-147,-141,2,-153,2,2,-113,-112,-115,-111,-114,2,2,-119,-120,-118,2,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,2,-18,2,-9,-24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-202,-130,2,2,2,2,2,2,-205,2,2,2,2,2,2,-206,2,]),'REF':([37,91,92,96,165,187,225,283,304,308,],[-17,165,-15,165,165,165,-16,165,165,165,]),'MINUS':([6,9,17,26,37,38,39,43,44,49,54,55,56,58,60,61,62,64,65,66,67,68,69,72,73,74,77,78,79,80,81,82,83,84,86,88,93,104,105,106,107,108,109,110,111,112,113,114,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,178,180,194,205,209,211,213,214,218,219,220,221,223,228,229,230,233,242,243,244,245,258,260,261,262,270,291,293,298,302,303,305,314,317,324,],[-58,76,-59,76,-17,-60,-180,76,-179,76,-78,-72,-80,-82,76,136,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,76,-81,-57,-126,-71,-116,-75,-125,76,76,76,-144,76,-145,-142,-146,-62,-143,-147,-141,-113,-112,-115,-111,-114,76,-128,76,-119,-120,-118,76,-122,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,76,76,-192,-181,76,76,76,-110,-117,-86,136,76,76,76,76,-193,76,76,-182,-63,76,76,76,76,76,-83,-57,76,76,76,76,76,76,-66,76,-84,]),'PRINT':([0,3,5,7,9,10,12,24,26,32,35,43,47,49,52,53,59,60,63,75,76,79,93,97,101,104,105,106,107,108,109,110,112,113,114,118,120,128,129,132,133,134,135,136,137,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,156,157,158,178,185,189,190,200,205,206,207,209,211,220,221,223,228,230,233,237,238,239,244,245,253,258,260,261,280,291,293,298,302,303,305,309,317,],[41,-7,41,41,41,-5,-2,-4,41,-6,-8,41,41,41,-152,-3,-124,41,41,41,-123,41,41,-129,41,41,41,-144,41,-145,-142,-146,-143,-147,-141,41,-153,41,41,-113,-112,-115,-111,-114,41,41,-119,-120,-118,41,-108,-102,-105,-101,-99,-100,-98,-106,-104,-103,-107,41,-18,41,-9,-24,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-202,-130,41,41,41,41,41,41,-205,41,41,41,41,41,41,-206,41,]),'LESSEQ':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,156,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'COMMA':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,71,72,73,74,77,78,80,81,82,83,84,85,86,88,91,92,94,95,96,98,99,100,111,138,144,160,162,163,164,166,167,168,170,171,172,173,175,177,179,180,181,182,183,186,194,195,196,198,213,214,218,219,222,225,229,231,232,234,235,242,243,262,267,268,269,271,275,276,281,283,284,285,287,295,301,306,307,310,311,314,322,324,325,326,327,328,329,331,332,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-88,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,-87,-75,-125,176,-15,-10,184,176,-25,176,188,-62,-128,-122,-33,-28,-35,-41,-47,-32,-38,-46,-31,-30,-37,-36,-34,-29,-192,-183,230,-185,-12,-181,230,244,-64,-110,-117,-86,-97,-45,-16,-193,-11,-13,-27,-26,-182,-63,-83,-54,-51,-53,305,-184,-14,-209,176,313,-65,-44,-89,-39,-48,-40,-212,-211,-66,-90,-84,-42,-185,-55,-50,-52,-213,-210,]),'LESS':([6,17,37,38,39,44,54,55,56,58,61,62,64,65,66,67,68,69,72,73,74,77,78,80,81,82,83,84,85,86,88,111,138,144,180,194,213,214,218,219,229,242,243,262,270,314,324,],[-58,-59,-17,-60,-180,-179,-78,-72,-80,-82,-96,-79,-61,-73,-70,-69,-109,-77,-76,-68,-121,-74,-127,-81,-57,-126,-71,-116,153,-75,-125,-62,-128,-122,-192,-181,-110,-117,-86,-97,-193,-182,-63,-83,-57,-66,-84,]),'EXIT':([0,3,5,7,10,12,24,32,35,47,52,53,97,101,118,120,128,129,158,185,189,190,200,206,207,237,238,239,253,280,309,],[42,-7,42,42,-5,-2,-4,-6,-8,42,-152,-3,-129,42,42,-153,42,42,-18,-9,-24,42,42,42,42,42,-202,-130,42,-205,-206,]),'$end':([1,3,7,10,12,24,32,35,53,97,158,185,189,238,239,],[0,-7,-1,-5,-2,-4,-6,-8,-3,-129,-18,-9,-24,-202,-130,]),'ASSIGN':([6,15,17,29,34,37,38,39,44,81,91,92,99,111,123,124,160,161,162,163,164,166,167,168,170,171,172,173,175,177,179,180,186,194,222,225,229,242,243,301,306,307,314,327,328,],[-58,-61,-59,-57,114,-17,-60,-180,-179,-57,178,-15,187,-62,205,-170,-33,220,-28,-35,-41,-47,-32,-38,-46,-31,-30,-37,-36,-34,-29,-192,233,-181,-45,-16,-193,-182,-63,-39,-48,-40,-66,-55,-50,]),'MULCREASE':([6,15,17,29,34,37,38,39,44,81,111,180,194,229,242,243,314,],[-58,-61,-59,-57,108,-17,-60,-180,-179,-57,-62,-192,-181,-193,-182,-63,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formal_procedure_head':([101,],[190,]),'else_clause':([130,294,],[208,320,]),'procedure_definition':([101,],[191,]),'declaration':([16,184,],[94,231,]),'while_control':([5,121,],[46,202,]),'boolean_expression':([9,49,60,209,258,298,],[57,127,131,255,296,323,]),'else_expression':([212,259,],[257,297,]),'expression_list':([105,],[196,]),'action_statement_list':([5,118,129,207,],[47,200,206,253,]),'dereferenced_reference':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement_list':([0,190,],[7,237,]),'range_enumeration':([48,],[126,]),'discrete_range_mode':([91,96,165,187,204,223,247,283,304,305,308,],[163,163,163,163,163,163,163,163,163,163,163,]),'discrete_expression':([205,291,317,],[250,316,333,]),'elsif_expression':([212,],[259,]),'synonym_statement':([0,7,190,237,],[10,10,10,10,]),'builtin_name':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'then_expression':([131,296,323,],[212,321,334,]),'call_action':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[15,15,15,64,64,64,15,64,64,64,64,64,64,15,64,64,64,15,15,15,64,64,64,64,64,15,15,64,15,15,64,64,64,64,64,64,64,64,15,64,64,15,64,64,64,64,64,64,64,64,64,64,]),'step_enumeration':([48,],[122,]),'iteration':([48,],[125,]),'value_array_slice':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'relational_operator':([85,],[152,]),'synonym_definition':([11,89,],[90,159,]),'composite_mode':([91,96,165,187,283,304,308,],[171,171,171,171,171,171,171,]),'array_primitive_value':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'integer_expression':([143,293,],[216,318,]),'value_array_element':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'parameter':([93,104,230,303,],[181,181,275,181,]),'parameter_spec':([283,],[311,]),'mode_name':([91,96,165,187,283,304,308,],[162,162,162,162,162,162,162,]),'if_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'start_value':([205,],[251,]),'initialization':([186,],[232,]),'membership_operator':([85,],[150,]),'character_literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'exit_label_id':([42,],[115,]),'integer_mode':([91,96,165,187,204,223,247,283,304,305,308,],[167,167,167,167,167,167,167,167,167,167,167,]),'loop_counter':([48,],[123,]),'parenthesized_expression':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'string_length':([224,],[273,]),'operand3':([9,26,43,49,60,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[84,84,84,84,84,84,84,84,84,84,84,214,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'monadic_operator':([9,26,43,49,60,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'mode_definition':([22,188,],[98,235,]),'formal_parameter_list':([241,],[284,]),'operator2':([61,219,],[137,137,]),'arithmetic_multiplicative_operator':([68,213,],[139,139,]),'assignment_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'arithmetic_additive_operator':([61,219,],[135,135,]),'control_part':([5,],[45,]),'then_clause':([57,255,],[130,294,]),'empty_literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'operand0':([9,26,43,49,60,79,93,104,105,107,143,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'procedure_call':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'literal_range':([221,223,228,303,305,],[264,267,274,264,267,]),'assigning_operator':([34,],[107,]),'program':([0,],[1,]),'closed_dyadic_operator':([34,],[109,]),'boolean_mode':([91,96,165,187,204,223,247,283,304,305,308,],[160,160,160,160,160,160,160,160,160,160,160,]),'procedure_statement':([0,7,190,237,],[3,3,3,3,]),'return_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'string_mode':([91,96,165,187,283,304,308,],[170,170,170,170,170,170,170,]),'array_mode':([91,96,165,187,283,304,308,],[166,166,166,166,166,166,166,]),'lower_bound':([105,143,221,223,228,303,305,],[197,215,265,265,265,265,265,]),'array_element':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'operand2':([9,26,43,49,60,79,93,104,105,107,137,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[68,68,68,68,68,68,68,68,68,68,213,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operand1':([9,26,43,49,60,79,93,104,105,107,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[61,61,61,61,61,61,61,61,61,61,61,219,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'array_slice':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'for_control':([48,],[121,]),'step_value':([251,],[289,]),'end_value':([251,289,],[290,315,]),'statement':([0,7,190,237,],[12,53,12,53,]),'result_spec':([240,],[279,]),'newmode_list':([22,],[100,]),'index_mode':([223,305,],[268,329,]),'boolean_literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'string_concatenation_operator':([61,219,],[133,133,]),'action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[20,20,20,20,192,20,192,20,20,20,20,20,20,20,]),'character_string_literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'operator1':([85,],[157,]),'synonym_list':([11,],[89,]),'label_id':([0,5,7,47,118,129,190,200,206,207,237,253,],[23,50,23,50,50,50,23,50,50,50,23,50,]),'declaration_statement':([0,7,190,237,],[24,24,24,24,]),'conditional_expression':([9,26,43,49,60,79,93,104,105,107,143,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'mode':([91,96,165,187,283,304,308,],[161,186,222,234,310,327,330,]),'do_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'exit_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'element_mode':([304,],[328,]),'discrete_mode':([91,96,165,187,204,223,247,283,304,305,308,],[179,179,179,179,249,269,288,179,179,269,179,]),'integer_literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'operand4':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[74,74,74,74,74,144,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'bracketed_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'array_location':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'newmode_statement':([0,7,190,237,],[32,32,32,32,]),'primitive_value':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'parenthesis_gambiarra':([193,],[240,]),'index_mode_list':([223,],[271,]),'identifier':([0,5,7,9,11,16,22,26,42,43,47,48,49,60,63,75,79,89,91,93,96,101,104,105,107,118,128,129,137,139,143,157,165,176,178,184,187,188,190,200,204,205,206,207,209,211,220,221,223,228,230,233,237,241,244,245,247,253,258,260,261,283,291,293,298,302,303,304,305,308,313,317,],[29,29,29,81,92,92,92,81,116,81,29,124,81,81,81,81,81,92,164,81,164,81,81,81,81,29,81,29,81,81,81,81,164,225,81,92,164,92,29,29,248,81,29,29,81,81,81,81,270,81,81,81,29,92,81,81,248,29,81,81,81,164,81,81,81,81,81,164,270,164,92,81,]),'declaration_list':([16,],[95,]),'referenced_location':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'formal_parameter':([241,313,],[281,332,]),'action_statement':([0,5,7,47,118,129,190,200,206,207,237,253,],[35,52,35,120,52,52,35,120,120,52,35,120,]),'parameter_list':([93,104,303,],[182,195,195,]),'reference_mode':([91,96,165,187,283,304,308,],[172,172,172,172,172,172,172,]),'literal':([9,26,43,49,60,75,79,93,104,105,107,137,139,143,157,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'result_action':([0,5,7,47,101,118,128,129,190,200,206,207,237,253,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'character_mode':([91,96,165,187,204,223,247,283,304,305,308,],[177,177,177,177,177,177,177,177,177,177,177,]),'expression':([9,26,43,49,60,79,93,104,105,107,143,178,205,209,211,220,221,223,228,230,233,244,245,258,260,261,291,293,298,302,303,305,317,],[87,103,103,87,87,145,183,183,198,199,217,227,252,87,256,227,266,266,266,183,276,285,287,87,299,287,252,319,87,287,326,266,252,]),'builtin_call':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'result':([26,43,],[102,117,]),'upper_bound':([245,261,302,],[286,300,325,]),'identifier_list':([11,16,22,89,184,188,241,313,],[91,96,99,91,96,99,283,283,]),'location':([0,5,7,9,26,43,47,49,60,63,75,79,93,101,104,105,107,118,128,129,137,139,143,157,178,190,200,205,206,207,209,211,220,221,223,228,230,233,237,244,245,253,258,260,261,291,293,298,302,303,305,317,],[34,34,34,88,88,88,34,88,88,138,88,88,88,34,88,88,88,34,34,34,88,88,88,88,88,34,34,88,34,34,88,88,88,88,88,88,88,88,34,88,88,34,88,88,88,88,88,88,88,88,88,88,]),'constant_expression':([178,220,],[226,263,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('string_length -> ICONST','string_length',1,'p_string_length','parser.py',223),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',393),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',399),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',405),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',411),
  ('expression -> operand0','expression',1,'p_expression','parser.py',418),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
