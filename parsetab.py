
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST IF DOWN READ TO BY ASC LOC LENGTH FOR CHARS END CHAR EXIT UPPER DO DCL LOWER RETURNS NUM TYPE WHILE REF PROC TRUE ARRAY INT THEN RESULT ABS NULL IN SYN BOOL ELSE RETURN FALSE ELSIF PRINT OD FIprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'CCONST':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[65,65,65,65,65,-122,65,-123,-143,-142,65,-146,-145,-144,-140,-141,65,65,65,65,65,-119,-118,-117,-113,-110,-111,-114,65,-112,65,-106,65,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'IF':([0,1,3,8,13,20,23,24,27,28,38,44,45,74,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,131,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[1,45,-2,-7,-8,45,-6,1,-5,-4,45,1,45,45,-143,-142,45,-146,-145,-144,-140,-141,45,1,-151,45,1,45,45,-128,-3,45,1,-24,-9,1,-152,1,1,45,-18,45,1,1,45,45,45,45,45,45,1,45,1,-201,-129,45,45,45,45,45,45,1,-204,45,45,45,45,45,45,-205,45,]),'REF':([9,83,94,110,148,157,214,278,297,311,],[-17,-15,157,157,157,157,-16,157,157,157,]),'DIVCREASE':([6,9,10,11,12,15,17,31,42,58,86,154,199,217,243,245,313,],[-60,-17,89,-56,-58,-57,-178,-179,-59,-56,-61,-180,-191,-181,-62,-192,-65,]),'LPAREN':([1,5,7,9,11,14,20,21,25,29,35,38,40,41,45,47,58,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,156,162,163,165,167,169,170,172,173,188,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,259,261,272,273,280,288,294,295,296,299,300,302,305,306,324,],[74,-196,-199,-17,93,-198,74,-200,-193,-195,-197,74,-194,115,74,74,93,-122,74,-123,-143,-142,74,-146,-145,-144,-140,-141,74,74,74,74,74,-119,-118,-117,-113,-110,-111,-114,74,-112,74,-106,74,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,-34,-36,-35,-33,222,-37,225,-38,-32,235,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,222,295,225,222,311,74,74,74,74,-40,-39,74,74,222,74,]),'TO':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,269,270,271,291,301,303,313,315,317,325,326,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-174,-170,305,-88,324,305,-65,-89,-83,-55,-171,]),'ARROW':([1,6,9,10,11,12,15,17,20,31,38,42,45,47,55,58,68,71,74,78,84,85,86,87,88,89,90,91,92,93,105,113,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,154,192,199,200,211,217,218,220,222,223,225,230,239,242,243,244,245,247,249,251,261,288,294,295,296,302,305,313,324,],[49,-60,-17,86,-56,-58,-57,-178,49,-179,49,-59,49,49,-60,-56,86,-122,49,-123,-143,-142,-61,49,-146,-145,-144,-140,-141,49,49,49,49,86,49,-119,-118,-117,-113,-110,-111,-114,49,-112,49,-106,49,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,-180,49,-191,49,49,-181,49,49,49,49,49,49,49,49,-62,49,-192,49,49,49,-56,49,49,49,49,49,49,-65,49,]),'MOD':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,62,63,64,65,66,68,69,70,72,75,76,79,86,119,120,154,199,202,203,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,122,-76,-56,-115,-70,-72,-126,-67,-79,-120,-124,-80,-81,-77,-125,-74,-73,-61,-121,-127,-180,-191,-116,122,-85,-181,-62,-192,-82,-56,-65,-83,]),'DIVIDE':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,62,63,64,65,66,68,69,70,72,75,76,79,86,119,120,154,199,202,203,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,123,-76,-56,-115,-70,-72,-126,-67,-79,-120,-124,-80,-81,-77,-125,-74,-73,-61,-121,-127,-180,-191,-116,123,-85,-181,-62,-192,-82,-56,-65,-83,]),'FOR':([24,],[104,]),'CHARS':([9,83,94,110,148,157,214,278,297,311,],[-17,-15,166,166,166,166,-16,166,166,166,]),'AND':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,141,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'RPAREN':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,93,115,119,120,144,152,153,154,155,156,158,159,160,162,163,164,165,167,169,170,171,172,173,198,199,202,203,207,208,217,219,235,243,245,252,256,265,267,277,279,284,291,295,298,299,300,309,310,313,315,317,319,320,322,323,329,330,331,335,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,154,199,-121,-127,208,217,-184,-180,-182,-34,-30,-28,-31,-36,-35,-46,-33,-29,-37,-41,-47,-38,-32,245,-191,-116,-109,-96,-85,-181,-45,276,-62,-192,-82,-183,299,300,307,-208,-44,-88,154,-48,-40,-39,-211,-210,-65,-89,-83,-42,-184,-54,-49,-209,-212,334,336,]),'TYPE':([0,3,8,13,23,27,28,44,116,117,150,175,187,194,233,237,238,282,312,],[4,-2,-7,-8,-6,-5,-4,4,-128,-3,-24,-9,4,-18,4,-201,-129,-204,-205,]),'UPPER':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[5,5,-2,-7,-8,5,-6,5,-5,-4,5,5,5,5,5,-122,5,-123,-143,-142,5,-146,-145,-144,-140,-141,5,5,-151,5,5,5,5,-128,-3,5,-119,-118,-117,-113,-110,-111,-114,5,-112,5,-106,5,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,5,-24,-9,5,-152,5,5,5,-18,5,5,5,5,5,5,5,5,5,5,5,5,-201,-129,5,5,5,5,5,5,5,-204,5,5,5,5,5,5,-205,5,]),'PLUS':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,130,-72,-126,-67,-79,-120,-124,-80,-81,-77,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,130,-85,-181,-62,-192,-82,-56,-65,-83,]),'INCREASE':([6,9,10,11,12,15,17,31,42,58,86,154,199,217,243,245,313,],[-60,-17,85,-56,-58,-57,-178,-179,-59,-56,-61,-180,-191,-181,-62,-192,-65,]),'ID':([0,1,3,4,8,9,12,13,15,16,17,19,20,23,24,27,28,31,33,38,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,78,79,83,84,85,86,87,88,89,90,91,92,93,94,102,103,104,105,109,110,111,112,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,148,149,150,154,157,174,175,176,177,186,187,192,193,194,199,200,202,203,207,208,209,210,211,214,217,218,220,222,223,225,227,230,231,233,235,237,238,239,240,241,242,243,244,245,247,249,251,252,253,274,278,282,283,288,291,294,295,296,297,302,305,308,311,312,313,315,317,324,],[9,9,-2,9,-7,-17,-58,-8,-57,9,-178,9,9,-6,9,-5,-4,-179,9,9,-59,9,9,-69,9,9,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-122,-77,-86,9,-125,-74,-123,-73,-15,-143,-142,-61,9,-146,-145,-144,-140,-141,9,9,9,-151,9,9,9,9,-19,9,9,9,-128,-3,-121,-127,9,-119,-118,-117,-113,-110,-111,-114,9,-112,9,-106,9,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,9,9,9,9,-24,-180,9,9,-9,9,-152,9,9,9,-20,-18,-191,9,-116,-109,-96,-85,9,9,9,-16,-181,9,9,9,9,9,9,9,9,9,9,-201,-129,9,-23,-21,9,-62,9,-192,9,9,9,-82,9,9,9,-204,-22,9,-88,9,9,9,9,9,9,9,9,-205,-65,-89,-83,9,]),'READ':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[7,7,-2,-7,-8,7,-6,7,-5,-4,7,7,7,7,7,-122,7,-123,-143,-142,7,-146,-145,-144,-140,-141,7,7,-151,7,7,7,7,-128,-3,7,-119,-118,-117,-113,-110,-111,-114,7,-112,7,-106,7,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,7,-24,-9,7,-152,7,7,7,-18,7,7,7,7,7,7,7,7,7,7,7,7,-201,-129,7,7,7,7,7,7,7,-204,7,7,7,7,7,7,-205,7,]),'DOWN':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,180,181,199,202,203,207,208,217,243,245,252,269,270,271,291,303,313,315,317,325,326,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-121,-127,-180,-169,232,-191,-116,-109,-96,-85,-181,-62,-192,-82,-174,-170,301,-88,301,-65,-89,-83,-55,-171,]),'LENGTH':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[14,14,-2,-7,-8,14,-6,14,-5,-4,14,14,14,14,14,-122,14,-123,-143,-142,14,-146,-145,-144,-140,-141,14,14,-151,14,14,14,14,-128,-3,14,-119,-118,-117,-113,-110,-111,-114,14,-112,14,-106,14,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,14,-24,-9,14,-152,14,14,14,-18,14,14,14,14,14,14,14,14,14,14,14,14,-201,-129,14,14,14,14,14,14,14,-204,14,14,14,14,14,14,-205,14,]),'ELSIF':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,103,116,119,120,145,146,154,177,199,201,202,203,207,208,209,217,238,243,245,246,248,252,291,293,313,315,316,317,332,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-151,-128,-121,-127,-149,211,-180,-152,-191,249,-116,-109,-96,-85,-150,-181,-129,-62,-192,-91,288,-82,-88,211,-65,-89,-93,-83,-94,]),'GREATER':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,136,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'FALSE':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[72,72,72,72,72,-122,72,-123,-143,-142,72,-146,-145,-144,-140,-141,72,72,72,72,72,-119,-118,-117,-113,-110,-111,-114,72,-112,72,-106,72,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'DCL':([0,3,8,13,23,27,28,44,116,117,150,175,187,194,233,237,238,282,312,],[16,-2,-7,-8,-6,-5,-4,16,-128,-3,-24,-9,16,-18,16,-201,-129,-204,-205,]),'DECREASE':([6,9,10,11,12,15,17,31,42,58,86,154,199,217,243,245,313,],[-60,-17,84,-56,-58,-57,-178,-179,-59,-56,-61,-180,-191,-181,-62,-192,-65,]),'CHAR':([9,83,94,110,148,157,214,220,231,274,278,296,297,311,],[-17,-15,172,172,172,172,-16,172,172,172,172,172,172,172,]),'IN':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,180,181,199,202,203,207,208,217,232,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,137,-125,-74,-73,-61,-121,-127,-180,-169,231,-191,-116,-109,-96,-85,-181,274,-62,-192,-82,-56,-65,-83,]),'OR':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,138,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'RESULT':([0,3,8,13,23,24,27,28,44,102,103,109,116,117,145,150,175,176,177,186,187,194,209,210,227,233,237,238,253,282,312,],[38,-2,-7,-8,-6,38,-5,-4,38,38,-151,38,-128,-3,38,-24,-9,38,-152,38,38,-18,38,38,38,38,-201,-129,38,-204,-205,]),'RETURN':([0,3,8,13,23,24,27,28,44,102,103,109,116,117,145,150,175,176,177,186,187,194,209,210,227,233,237,238,253,282,312,],[20,-2,-7,-8,-6,20,-5,-4,20,20,-151,20,-128,-3,20,-24,-9,20,-152,20,20,-18,20,20,20,20,-201,-129,20,-204,-205,]),'SCONST':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[70,70,70,70,70,-122,70,-123,-143,-142,70,-146,-145,-144,-140,-141,70,70,70,70,70,-119,-118,-117,-113,-110,-111,-114,70,-112,70,-106,70,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'WHILE':([9,12,15,17,24,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,156,162,163,165,169,172,173,179,182,183,184,199,202,203,207,208,217,243,245,252,269,273,291,299,300,304,306,313,315,317,327,328,333,],[-17,-58,-57,-178,105,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-121,-127,-180,-34,-36,-35,-33,-37,-38,-32,105,-166,-165,-164,-191,-116,-109,-96,-85,-181,-62,-192,-82,-174,-175,-88,-40,-39,-167,-176,-65,-89,-83,-168,-172,-173,]),'COMMA':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,80,81,82,83,86,94,95,96,110,119,120,152,153,154,155,156,158,159,160,162,163,164,165,167,168,169,170,171,172,173,195,197,198,199,202,203,207,208,214,215,216,217,219,224,226,243,245,252,256,257,259,262,263,266,277,278,279,284,286,291,298,299,300,309,310,313,315,317,319,320,321,322,323,329,330,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,147,149,-25,-15,-61,147,174,-10,147,-121,-127,218,-184,-180,-182,-34,-30,-28,-31,-36,-35,-46,-33,-29,-12,-37,-41,-47,-38,-32,-63,244,218,-191,-116,-109,-96,-85,-16,-27,-26,-181,-45,-13,-11,-62,-192,-82,-183,-53,-52,-50,296,-14,308,147,-208,-44,-64,-88,-48,-40,-39,-211,-210,-65,-89,-83,-42,-184,-51,-54,-49,-209,-212,]),'OD':([24,102,103,116,176,177,227,238,],[107,178,-151,-128,228,-152,268,-129,]),'DO':([0,3,8,13,23,24,27,28,44,102,103,109,116,117,145,150,175,176,177,186,187,194,209,210,227,233,237,238,253,282,312,],[24,-2,-7,-8,-6,24,-5,-4,24,24,-151,24,-128,-3,24,-24,-9,24,-152,24,24,-18,24,24,24,24,-201,-129,24,-204,-205,]),'ABS':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[25,25,-2,-7,-8,25,-6,25,-5,-4,25,25,25,25,25,-122,25,-123,-143,-142,25,-146,-145,-144,-140,-141,25,25,-151,25,25,25,25,-128,-3,25,-119,-118,-117,-113,-110,-111,-114,25,-112,25,-106,25,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,25,-24,-9,25,-152,25,25,25,-18,25,25,25,25,25,25,25,25,25,25,25,25,-201,-129,25,25,25,25,25,25,25,-204,25,25,25,25,25,25,-205,25,]),'TRUE':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[50,50,50,50,50,-122,50,-123,-143,-142,50,-146,-145,-144,-140,-141,50,50,50,50,50,-119,-118,-117,-113,-110,-111,-114,50,-112,50,-106,50,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'RBRACKET':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,156,162,163,165,169,172,173,195,197,199,202,203,204,206,207,208,217,243,245,252,257,259,262,263,264,284,285,286,291,292,299,300,313,315,317,319,321,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-121,-127,-180,-34,-36,-35,-33,-37,-38,-32,-63,243,-191,-116,-109,-55,252,-96,-85,-181,-62,-192,-82,-53,-52,-50,297,298,-44,313,-64,-88,317,-40,-39,-65,-89,-83,-42,-51,]),'ELSE':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,103,116,119,120,145,146,154,177,199,201,202,203,207,208,209,217,238,243,245,246,248,252,291,293,313,315,316,317,332,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-151,-128,-121,-127,-149,210,-180,-152,-191,247,-116,-109,-96,-85,-150,-181,-129,-62,-192,-91,247,-82,-88,210,-65,-89,-93,-83,-94,]),'$end':([3,8,13,23,27,28,37,44,116,117,150,175,194,237,238,],[-2,-7,-8,-6,-5,-4,0,-1,-128,-3,-24,-9,-18,-201,-129,]),'NUM':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[29,29,-2,-7,-8,29,-6,29,-5,-4,29,29,29,29,29,-122,29,-123,-143,-142,29,-146,-145,-144,-140,-141,29,29,-151,29,29,29,29,-128,-3,29,-119,-118,-117,-113,-110,-111,-114,29,-112,29,-106,29,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,29,-24,-9,29,-152,29,29,29,-18,29,29,29,29,29,29,29,29,29,29,29,29,-201,-129,29,29,29,29,29,29,29,-204,29,29,29,29,29,29,-205,29,]),'LBRACKET':([6,9,10,11,12,15,17,31,34,42,46,50,51,52,53,55,57,58,60,62,63,64,65,67,68,69,70,72,76,79,86,120,154,161,166,199,208,217,243,245,252,261,313,317,],[-60,-17,-66,-56,-58,-57,-178,-179,113,-59,-69,-78,-68,-71,-75,-60,-76,-56,-70,-72,-84,-67,-79,131,-66,-80,-81,-77,-74,-73,-61,-66,-180,220,221,-191,-85,-181,-62,-192,-82,-56,-65,-83,]),'PRINT':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[21,21,-2,-7,-8,21,-6,21,-5,-4,21,21,21,21,21,-122,21,-123,-143,-142,21,-146,-145,-144,-140,-141,21,21,-151,21,21,21,21,-128,-3,21,-119,-118,-117,-113,-110,-111,-114,21,-112,21,-106,21,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,21,-24,-9,21,-152,21,21,21,-18,21,21,21,21,21,21,21,21,21,21,21,21,-201,-129,21,21,21,21,21,21,21,-204,21,21,21,21,21,21,-205,21,]),'FI':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,103,116,119,120,145,146,154,177,199,202,203,207,208,209,210,212,217,238,243,245,250,252,253,287,289,291,293,313,315,317,318,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-151,-128,-121,-127,-149,213,-180,-152,-191,-116,-109,-96,-85,-150,-153,255,-181,-129,-62,-192,291,-82,-154,-92,315,-88,-155,-65,-89,-83,-156,]),'BY':([9,12,15,17,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,269,270,271,291,313,315,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-174,-170,302,-88,-65,-89,-83,]),'PROC':([109,],[188,]),'COLON':([9,11,12,15,17,26,31,42,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,108,119,120,154,195,196,199,202,203,204,205,207,208,217,243,245,252,258,260,261,291,313,315,317,320,],[-17,-130,-58,-57,-178,109,-179,-59,-69,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,-61,186,-121,-127,-180,-43,242,-191,-116,-109,-43,251,-96,-85,-181,-62,-192,-82,-43,294,-56,-88,-65,-89,-83,-43,]),'EXIT':([0,3,8,13,23,24,27,28,44,102,103,109,116,117,145,150,175,176,177,186,187,194,209,210,227,233,237,238,253,282,312,],[19,-2,-7,-8,-6,19,-5,-4,19,19,-151,19,-128,-3,19,-24,-9,19,-152,19,19,-18,19,19,19,19,-201,-129,19,-204,-205,]),'ASSIGN':([6,9,10,11,12,15,17,31,42,58,80,83,86,110,154,156,158,159,160,162,163,164,165,167,168,169,170,171,172,173,180,181,191,199,214,217,219,243,245,298,299,300,313,322,323,],[-60,-17,91,-56,-58,-57,-178,-179,-59,-56,148,-15,-61,192,-180,-34,-30,-28,-31,-36,-35,-46,-33,-29,223,-37,-41,-47,-38,-32,-169,230,239,-191,-16,-181,-45,-62,-192,-48,-40,-39,-65,-54,-49,]),'BOOL':([9,83,94,110,148,157,214,220,231,274,278,296,297,311,],[-17,-15,169,169,169,169,-16,169,169,169,169,169,169,169,]),'DIFF':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,139,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'NULL':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[69,69,69,69,69,-122,69,-123,-143,-142,69,-146,-145,-144,-140,-141,69,69,69,69,69,-119,-118,-117,-113,-110,-111,-114,69,-112,69,-106,69,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'LESSEQ':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,132,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'SYN':([0,3,8,13,23,27,28,44,116,117,150,175,187,194,233,237,238,282,312,],[33,-2,-7,-8,-6,-5,-4,33,-128,-3,-24,-9,33,-18,33,-201,-129,-204,-205,]),'TIMES':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,62,63,64,65,66,68,69,70,72,75,76,79,86,119,120,154,199,202,203,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,124,-76,-56,-115,-70,-72,-126,-67,-79,-120,-124,-80,-81,-77,-125,-74,-73,-61,-121,-127,-180,-191,-116,124,-85,-181,-62,-192,-82,-56,-65,-83,]),'LESS':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,142,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'MULCREASE':([6,9,10,11,12,15,17,31,42,58,86,154,199,217,243,245,313,],[-60,-17,90,-56,-58,-57,-178,-179,-59,-56,-61,-180,-191,-181,-62,-192,-65,]),'MINUS':([1,9,12,15,17,20,31,38,42,45,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,74,75,76,79,84,85,86,87,88,89,90,91,92,93,105,113,115,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,154,192,199,200,202,203,207,208,211,217,218,220,222,223,225,230,239,242,243,244,245,247,249,251,252,261,288,294,295,296,302,305,313,317,324,],[71,-17,-58,-57,-178,71,-179,71,-59,71,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,125,-72,-126,-67,-79,-120,-124,-80,-81,-77,71,-125,-74,-73,-143,-142,-61,71,-146,-145,-144,-140,-141,71,71,71,71,-121,-127,71,-119,-118,-117,-113,-110,-111,-114,71,-112,71,-106,71,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,-180,71,-191,71,-116,-109,125,-85,71,-181,71,71,71,71,71,71,71,71,-62,71,-192,71,71,71,-82,-56,71,71,71,71,71,71,-65,-83,71,]),'RETURNS':([236,276,307,],[280,-206,-207,]),'LOC':([9,156,158,159,160,162,163,164,165,167,169,170,171,172,173,219,298,299,300,309,322,323,331,],[-17,-34,-30,-28,-31,-36,-35,-46,-33,-29,-37,-41,-47,-38,-32,-45,-48,-40,-39,330,-54,-49,335,]),'ARRAY':([9,83,94,110,148,157,214,278,297,311,],[-17,-15,161,161,161,161,-16,161,161,161,]),'LOWER':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[35,35,-2,-7,-8,35,-6,35,-5,-4,35,35,35,35,35,-122,35,-123,-143,-142,35,-146,-145,-144,-140,-141,35,35,-151,35,35,35,35,-128,-3,35,-119,-118,-117,-113,-110,-111,-114,35,-112,35,-106,35,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,35,-24,-9,35,-152,35,35,35,-18,35,35,35,35,35,35,35,35,35,35,35,35,-201,-129,35,35,35,35,35,35,35,-204,35,35,35,35,35,35,-205,35,]),'SEMI':([2,6,9,12,15,17,18,20,22,30,31,32,36,39,42,43,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,81,82,86,95,96,97,98,99,100,101,106,107,111,112,114,119,120,151,154,156,158,159,160,162,163,164,165,167,168,169,170,171,172,173,178,179,182,183,184,185,189,190,193,199,202,203,207,208,213,215,216,217,219,224,226,228,229,234,236,240,241,243,245,252,255,266,268,269,273,275,276,281,283,291,298,299,300,304,306,307,313,315,317,322,323,327,328,333,334,336,],[-132,-133,-17,-58,-57,-178,-138,-187,-137,-131,-179,-135,-136,-134,-59,116,-69,-90,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,-73,150,-25,-61,175,-10,-186,-185,-190,-188,176,-161,-157,-19,194,-189,-121,-127,-139,-180,-34,-30,-28,-31,-36,-35,-46,-33,-29,-12,-37,-41,-47,-38,-32,-159,-162,-166,-165,-164,-177,237,238,-20,-191,-116,-109,-96,-85,-147,-27,-26,-181,-45,-13,-11,-158,-163,-202,282,-23,-21,-62,-192,-82,-148,-14,-160,-174,-175,-203,-206,312,-22,-88,-48,-40,-39,-167,-176,-207,-65,-89,-83,-54,-49,-168,-172,-173,-213,-214,]),'GREATEREQ':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,135,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'INT':([9,83,94,110,148,157,214,220,231,274,278,296,297,311,],[-17,-15,162,162,162,162,-16,162,162,162,162,162,162,162,]),'ASC':([0,1,3,8,13,20,23,24,27,28,38,44,45,47,49,71,74,78,84,85,87,88,89,90,91,92,93,102,103,105,109,113,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,150,175,176,177,186,187,192,194,200,209,210,211,218,220,222,223,225,227,230,233,237,238,239,242,244,247,249,251,253,282,288,294,295,296,302,305,312,324,],[40,40,-2,-7,-8,40,-6,40,-5,-4,40,40,40,40,40,-122,40,-123,-143,-142,40,-146,-145,-144,-140,-141,40,40,-151,40,40,40,40,-128,-3,40,-119,-118,-117,-113,-110,-111,-114,40,-112,40,-106,40,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,40,-24,-9,40,-152,40,40,40,-18,40,40,40,40,40,40,40,40,40,40,40,40,-201,-129,40,40,40,40,40,40,40,-204,40,40,40,40,40,40,-205,40,]),'EQUAL':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,140,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,-56,-65,-83,]),'STRCAT':([9,12,15,17,31,42,46,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,75,76,79,86,119,120,154,199,202,203,207,208,217,243,245,252,261,313,317,],[-17,-58,-57,-178,-179,-59,-69,-78,-68,-71,-75,-60,-108,-76,-56,-115,-70,128,-72,-126,-67,-79,-120,-124,-80,-81,-77,-125,-74,-73,-61,-121,-127,-180,-191,-116,-109,128,-85,-181,-62,-192,-82,-56,-65,-83,]),'ICONST':([1,20,38,45,47,71,74,78,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,221,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[57,57,57,57,57,-122,57,-123,-143,-142,57,-146,-145,-144,-140,-141,57,57,57,57,57,-119,-118,-117,-113,-110,-111,-114,57,-112,57,-106,57,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,57,57,57,57,57,264,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NOT':([1,20,38,45,74,84,85,87,88,89,90,91,92,93,105,113,115,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[78,78,78,78,78,-143,-142,78,-146,-145,-144,-140,-141,78,78,78,78,78,-119,-118,-117,-113,-110,-111,-114,78,-112,78,-106,78,-97,-104,-103,-107,-100,-102,-101,-99,-105,-98,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'END':([3,8,13,23,27,28,116,117,150,175,187,194,233,237,238,282,312,],[-2,-7,-8,-6,-5,-4,-128,-3,-24,-9,234,-18,275,-201,-129,-204,-205,]),'MODCREASE':([6,9,10,11,12,15,17,31,42,58,86,154,199,217,243,245,313,],[-60,-17,88,-56,-58,-57,-178,-179,-59,-56,-61,-180,-191,-181,-62,-192,-65,]),'THEN':([9,12,15,17,31,42,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,76,77,79,86,118,119,120,154,199,202,203,207,208,217,243,245,252,254,290,291,313,314,315,317,],[-17,-58,-57,-178,-179,-59,-69,-90,-78,-68,-71,-75,-87,-60,-108,-76,-56,-115,-70,-95,-72,-126,-67,-79,-120,-124,-80,-81,-77,-86,-125,-74,145,-73,-61,200,-121,-127,-180,-191,-116,-109,-96,-85,-181,-62,-192,-82,145,200,-88,-65,200,-89,-83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal_range':([220,222,225,295,296,],[257,265,267,267,257,]),'assignment_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'empty_literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'synonym_list':([33,],[112,]),'composite_mode':([94,110,148,157,278,297,311,],[160,160,160,160,160,160,160,]),'arithmetic_multiplicative_operator':([56,203,],[121,121,]),'value_array_element':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'integer_literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'discrete_mode':([94,110,148,157,220,231,274,278,296,297,311,],[167,167,167,167,259,273,306,167,259,167,167,]),'declaration':([16,174,],[96,226,]),'elsif_expression':([201,],[248,]),'formal_procedure_head':([109,],[187,]),'identifier':([0,1,4,16,19,20,24,33,38,44,45,47,49,74,87,93,94,102,104,105,109,110,112,113,115,121,129,131,133,145,147,148,149,157,174,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,231,233,235,239,242,244,247,249,251,253,274,278,288,294,295,296,297,302,305,308,311,324,],[11,58,83,83,97,58,11,83,58,11,58,58,58,58,58,58,170,11,180,58,58,170,83,58,58,58,58,58,58,11,214,170,83,170,83,11,58,11,58,58,11,11,58,58,261,58,58,58,11,58,272,11,83,58,58,58,58,58,58,11,272,170,58,58,58,261,170,58,58,83,170,58,]),'array_element':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'result':([20,38,],[100,114,]),'value_array_slice':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'parenthesized_expression':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'loop_counter':([104,],[181,]),'range_enumeration':([104,],[182,]),'procedure_call':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'index_mode_list':([220,],[263,]),'primitive_value':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'integer_mode':([94,110,148,157,220,231,274,278,296,297,311,],[173,173,173,173,173,173,173,173,173,173,173,]),'element_mode':([297,],[323,]),'character_mode':([94,110,148,157,220,231,274,278,296,297,311,],[156,156,156,156,156,156,156,156,156,156,156,]),'operator2':([61,207,],[129,129,]),'location':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[10,68,68,10,68,10,68,68,120,68,68,68,10,68,10,68,68,68,68,68,68,10,10,10,10,68,68,10,10,68,68,68,68,68,68,10,68,10,68,68,68,68,68,68,10,68,68,68,68,68,68,68,]),'while_control':([24,179,],[106,229,]),'bracketed_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'then_clause':([77,254,],[146,293,]),'formal_parameter':([235,308,],[279,329,]),'discrete_range_mode':([94,110,148,157,220,231,274,278,296,297,311,],[163,163,163,163,163,163,163,163,163,163,163,]),'assigning_operator':([10,],[87,]),'string_concatenation_operator':([61,207,],[127,127,]),'step_value':([271,],[303,]),'parenthesis_gambiarra':([188,],[236,]),'membership_operator':([73,],[143,]),'discrete_expression':([230,305,324,],[270,328,333,]),'declaration_list':([16,],[95,]),'exit_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'end_value':([271,303,],[304,327,]),'exit_label_id':([19,],[98,]),'label_id':([0,24,44,102,145,176,187,209,210,227,233,253,],[26,108,26,108,108,108,26,108,108,108,26,108,]),'array_mode':([94,110,148,157,278,297,311,],[171,171,171,171,171,171,171,]),'identifier_list':([4,16,33,112,149,174,235,308,],[80,94,110,110,80,94,278,278,]),'newmode_list':([4,],[81,]),'mode_definition':([4,149,],[82,216,]),'start_value':([230,],[271,]),'parameter':([93,115,218,295,],[155,155,256,155,]),'character_literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'else_expression':([201,248,],[250,289,]),'step_enumeration':([104,],[183,]),'boolean_mode':([94,110,148,157,220,231,274,278,296,297,311,],[165,165,165,165,165,165,165,165,165,165,165,]),'reference_mode':([94,110,148,157,278,297,311,],[158,158,158,158,158,158,158,]),'monadic_operator':([1,20,38,45,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'expression':([1,20,38,45,74,87,93,105,113,115,131,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[48,99,99,48,144,151,153,48,195,153,204,240,246,48,153,258,258,266,258,269,240,284,286,287,48,284,48,284,320,258,325,269,269,]),'lower_bound':([113,131,220,222,225,295,296,],[196,205,260,260,260,260,260,]),'index_mode':([220,296,],[262,321,]),'constant_expression':([192,239,],[241,283,]),'parameter_list':([93,115,295,],[152,198,152,]),'iteration':([104,],[184,]),'character_string_literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'control_part':([24,],[101,]),'statement':([0,44,187,233,],[3,117,3,117,]),'conditional_expression':([1,20,38,45,74,87,93,105,113,115,131,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'call_action':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[6,55,55,6,55,6,55,55,55,55,55,55,6,55,6,55,55,55,55,55,55,6,6,6,6,55,55,6,6,55,55,55,55,55,55,6,55,6,55,55,55,55,55,55,6,55,55,55,55,55,55,55,]),'operand2':([1,20,38,45,74,87,93,105,113,115,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[56,56,56,56,56,56,56,56,56,56,203,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'procedure_statement':([0,44,187,233,],[8,8,8,8,]),'then_expression':([118,290,314,],[201,316,332,]),'array_location':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'declaration_statement':([0,44,187,233,],[28,28,28,28,]),'statement_list':([0,187,],[44,233,]),'action_statement':([0,24,44,102,145,176,187,209,210,227,233,253,],[13,103,13,177,103,103,13,177,103,177,13,177,]),'operand3':([1,20,38,45,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[59,59,59,59,59,59,59,59,59,59,202,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'dereferenced_reference':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'action_statement_list':([24,145,176,210,],[102,209,227,253,]),'result_spec':([236,],[281,]),'operand1':([1,20,38,45,74,87,93,105,113,115,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[61,61,61,61,61,61,61,61,61,61,61,207,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'synonym_definition':([33,112,],[111,193,]),'boolean_literal':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'do_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'procedure_definition':([109,],[189,]),'if_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'newmode_statement':([0,44,187,233,],[23,23,23,23,]),'operand4':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[66,66,66,66,119,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'for_control':([104,],[179,]),'operator1':([73,],[133,]),'boolean_expression':([1,45,105,211,249,288,],[77,118,185,254,290,314,]),'synonym_statement':([0,44,187,233,],[27,27,27,27,]),'relational_operator':([73,],[134,]),'mode_name':([94,110,148,157,278,297,311,],[159,159,159,159,159,159,159,]),'arithmetic_additive_operator':([61,207,],[126,126,]),'string_mode':([94,110,148,157,278,297,311,],[164,164,164,164,164,164,164,]),'formal_parameter_list':([235,],[277,]),'builtin_call':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'upper_bound':([242,251,294,],[285,292,319,]),'array_slice':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'mode':([94,110,148,157,278,297,311,],[168,191,215,219,309,322,331,]),'array_primitive_value':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'result_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'program':([0,],[37,]),'else_clause':([146,293,],[212,318,]),'operand0':([1,20,38,45,74,87,93,105,113,115,131,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'referenced_location':([1,20,38,45,47,74,87,93,105,113,115,121,129,131,133,192,200,211,218,220,222,223,225,230,239,242,244,247,249,251,288,294,295,296,302,305,324,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'builtin_name':([0,1,20,24,38,44,45,47,49,74,87,93,102,105,109,113,115,121,129,131,133,145,176,186,187,192,200,209,210,211,218,220,222,223,225,227,230,233,239,242,244,247,249,251,253,288,294,295,296,302,305,324,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'expression_list':([113,],[197,]),'parameter_spec':([278,],[310,]),'return_action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'closed_dyadic_operator':([10,],[92,]),'action':([0,24,44,102,109,145,176,186,187,209,210,227,233,253,],[43,43,43,43,190,43,43,190,43,43,43,43,43,43,]),'initialization':([168,],[224,]),'integer_expression':([131,302,],[206,326,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
