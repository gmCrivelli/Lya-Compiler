
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST DOWN ABS WHILE PROC FI OD NULL FOR RESULT BOOL ASC READ LENGTH THEN RETURNS CHARS PRINT ELSIF ELSE LOWER DCL DO SYN END ARRAY CHAR INT TYPE BY RETURN IF TRUE TO UPPER NUM REF LOC EXIT IN FALSEprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'INT':([11,46,48,61,130,191,201,203,212,260,278,288,289,306,],[-17,124,-15,124,124,124,124,-16,124,124,124,124,124,124,]),'DO':([0,5,9,14,16,18,22,23,33,45,51,53,99,100,138,146,148,150,151,188,189,197,213,229,232,234,241,243,273,285,307,],[5,5,-7,-8,-5,-4,-2,-6,5,-128,-151,5,-3,5,-18,-152,5,5,-9,5,-24,5,5,-129,-201,5,5,5,-204,5,-205,]),'SYN':([0,9,14,16,18,22,23,33,45,99,138,151,188,189,229,232,234,273,307,],[2,-7,-8,-5,-4,-2,-6,2,-128,-3,-18,-9,2,-24,-129,-201,2,-204,-205,]),'MOD':([7,8,11,28,29,35,64,65,66,68,71,74,75,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,161,-74,-115,-73,-75,-70,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,161,-85,-62,-181,-56,-82,-65,-83,]),'SEMI':([1,6,7,8,10,11,12,15,21,25,28,29,32,35,36,43,47,49,52,54,56,58,59,60,62,64,65,66,67,68,69,70,71,74,75,77,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,101,102,106,115,117,118,119,120,121,122,124,126,127,128,131,132,134,135,136,139,140,141,142,144,147,149,153,157,169,184,185,187,196,199,204,205,206,209,214,215,217,219,220,221,225,226,230,233,235,236,238,240,245,256,257,261,263,264,266,275,279,280,284,287,292,293,294,299,305,309,312,315,316,320,321,324,326,332,335,336,],[45,-138,-58,-178,-135,-17,-137,-132,-133,-136,-57,-59,-187,-179,-131,-134,-19,138,-161,148,-157,-185,-186,151,-10,-78,-108,-74,-87,-115,-188,-95,-73,-75,-70,-190,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,189,-25,-90,-61,-189,-34,-33,-46,-47,-37,-36,-29,-28,-35,-31,-32,-41,-38,-30,-20,-165,-162,-164,-166,-159,-177,-12,-191,-127,-121,229,232,-180,-139,-45,-23,-21,-163,-158,-11,-13,-192,-116,-109,-96,-85,273,-202,-26,-27,-62,-181,-147,-22,-174,-175,-160,-14,-82,307,-206,-203,-148,-48,-40,-39,-167,-176,-88,-207,-65,-49,-54,-172,-168,-83,-89,-173,-213,-214,]),'SCONST':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[92,92,92,92,92,-122,-123,92,92,92,92,92,-141,92,-144,-142,-140,-146,-143,-145,92,92,-117,-118,-119,-114,92,-111,-112,-113,-110,92,92,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'TO':([7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,257,258,259,266,295,297,305,312,322,323,324,326,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-174,-170,296,-82,319,296,-88,-65,-171,-55,-83,-89,]),'ICONST':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,200,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[95,95,95,95,95,-122,-123,95,95,95,95,95,-141,95,-144,-142,-140,-146,-143,-145,95,95,-117,-118,-119,-114,95,-111,-112,-113,-110,95,95,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,246,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'LOWER':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[26,26,-7,-8,-5,-4,-2,-6,26,26,26,26,-128,-151,26,26,26,26,-122,-123,26,26,26,-3,26,26,26,-141,26,-144,-142,-140,-146,-143,-145,26,-18,-152,26,26,-9,26,-117,-118,-119,-114,26,-111,-112,-113,-110,26,26,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,26,-24,26,26,26,26,26,26,26,26,26,26,-129,-201,26,26,26,26,26,26,26,26,26,-204,26,26,26,26,26,26,26,-205,26,]),'PROC':([100,],[186,]),'MULCREASE':([7,8,11,21,28,29,35,40,42,96,115,157,196,219,238,240,312,],[-58,-178,-17,-60,-57,-59,-179,-56,110,-56,-61,-191,-180,-192,-62,-181,-65,]),'NUM':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[30,30,-7,-8,-5,-4,-2,-6,30,30,30,30,-128,-151,30,30,30,30,-122,-123,30,30,30,-3,30,30,30,-141,30,-144,-142,-140,-146,-143,-145,30,-18,-152,30,30,-9,30,-117,-118,-119,-114,30,-111,-112,-113,-110,30,30,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,30,-24,30,30,30,30,30,30,30,30,30,30,-129,-201,30,30,30,30,30,30,30,30,30,-204,30,30,30,30,30,30,30,-205,30,]),'IN':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,143,145,157,169,184,196,211,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,174,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,212,-169,-191,-127,-121,-180,260,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'BY':([7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,257,258,259,266,305,312,324,326,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-174,-170,298,-82,-88,-65,-83,-89,]),'CHARS':([11,46,48,61,130,191,203,278,289,306,],[-17,123,-15,123,123,123,-16,123,123,123,]),'FOR':([5,],[50,]),'MODCREASE':([7,8,11,21,28,29,35,40,42,96,115,157,196,219,238,240,312,],[-58,-178,-17,-60,-57,-59,-179,-56,113,-56,-61,-191,-180,-192,-62,-181,-65,]),'ARROW':([7,8,11,21,28,29,32,35,40,41,42,44,55,63,76,78,80,84,86,96,97,98,104,105,108,109,110,111,112,113,114,115,116,133,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,196,201,202,207,208,210,216,218,219,227,237,238,239,240,244,252,267,270,271,288,290,291,296,298,301,312,319,],[-58,-178,-17,-60,-57,-59,73,-179,-56,73,115,73,73,73,-122,-123,-60,73,73,-56,73,115,73,73,-141,73,-144,-142,-140,-146,-143,-61,-145,73,-191,73,-117,-118,-119,-114,73,-111,-112,-113,-110,73,115,73,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,-180,73,73,73,73,73,73,73,-192,73,73,-62,73,-181,73,-56,73,73,73,73,73,73,73,73,73,-65,73,]),'COLON':([7,8,11,28,29,34,35,40,57,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,192,194,196,219,220,221,223,224,225,226,238,240,250,252,253,266,305,312,317,324,326,],[-58,-178,-17,-57,-59,100,-179,-130,150,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-43,239,-180,-192,-116,-109,-43,267,-96,-85,-62,-181,-43,-56,291,-82,-88,-65,-43,-83,-89,]),'ID':([0,2,5,7,8,9,11,14,16,18,20,22,23,27,28,29,32,33,35,38,41,44,45,46,47,48,49,50,51,53,55,61,63,64,65,66,67,68,70,71,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,108,109,110,111,112,113,114,115,116,129,130,133,138,139,146,148,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,188,189,190,191,196,197,201,202,203,205,206,207,208,210,212,213,216,218,219,220,221,225,226,227,229,231,232,234,237,238,239,240,241,243,244,256,260,266,267,270,271,273,278,285,288,289,290,291,296,298,301,305,306,307,308,312,319,324,326,],[11,11,11,-58,-178,-7,-17,-8,-5,-4,11,-2,-6,11,-57,-59,11,11,-179,11,11,11,-128,11,-19,-15,11,11,-151,11,11,11,11,-78,-108,-74,-87,-115,-95,-73,11,-75,-70,-122,-123,-86,-60,-126,-80,-77,11,-71,11,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,11,-124,-3,11,11,11,-141,11,-144,-142,-140,-146,-143,-61,-145,11,11,11,-18,-20,-152,11,11,-9,11,-191,11,-117,-118,-119,-114,11,-111,-112,-113,-110,11,-127,11,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,-121,11,-24,11,11,-180,11,11,11,-16,-23,-21,11,11,11,11,11,11,11,-192,-116,-109,-96,-85,11,-129,11,-201,11,11,-62,11,-181,11,11,11,-22,11,-82,11,11,11,-204,11,11,11,11,11,11,11,11,11,-88,11,-205,11,-65,11,-83,-89,]),'LOC':([11,118,119,120,121,122,124,126,127,128,131,132,134,135,136,204,287,292,293,311,315,316,328,],[-17,-34,-33,-46,-47,-37,-36,-29,-28,-35,-31,-32,-41,-38,-30,-45,-48,-40,-39,330,-49,-54,334,]),'LESS':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,171,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'PRINT':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[13,13,-7,-8,-5,-4,-2,-6,13,13,13,13,-128,-151,13,13,13,13,-122,-123,13,13,13,-3,13,13,13,-141,13,-144,-142,-140,-146,-143,-145,13,-18,-152,13,13,-9,13,-117,-118,-119,-114,13,-111,-112,-113,-110,13,13,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,13,-24,13,13,13,13,13,13,13,13,13,13,-129,-201,13,13,13,13,13,13,13,13,13,-204,13,13,13,13,13,13,13,-205,13,]),'OR':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,175,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'DIVIDE':([7,8,11,28,29,35,64,65,66,68,71,74,75,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,160,-74,-115,-73,-75,-70,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,160,-85,-62,-181,-56,-82,-65,-83,]),'CCONST':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[87,87,87,87,87,-122,-123,87,87,87,87,87,-141,87,-144,-142,-140,-146,-143,-145,87,87,-117,-118,-119,-114,87,-111,-112,-113,-110,87,87,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'MINUS':([7,8,11,28,29,32,35,41,44,55,63,64,65,66,68,70,71,74,75,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,104,105,108,109,110,111,112,113,114,115,116,133,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,196,201,202,207,208,210,216,218,219,220,221,225,226,227,237,238,239,240,244,252,266,267,270,271,288,290,291,296,298,301,312,319,324,],[-58,-178,-17,-57,-59,76,-179,76,76,76,76,-78,-108,-74,-115,166,-73,-75,-70,-60,-126,-80,-77,76,-71,76,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,76,76,-141,76,-144,-142,-140,-146,-143,-61,-145,76,-191,76,-117,-118,-119,-114,76,-111,-112,-113,-110,76,-127,76,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,-121,-180,76,76,76,76,76,76,76,-192,-116,-109,166,-85,76,76,-62,76,-181,76,-56,-82,76,76,76,76,76,76,76,76,76,-65,76,-83,]),'RBRACKET':([7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,118,119,122,124,128,132,135,157,169,184,192,193,196,219,220,221,222,223,225,226,238,240,246,247,248,249,251,266,281,282,283,292,293,300,305,312,314,318,324,326,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-34,-33,-37,-36,-35,-32,-38,-191,-127,-121,-63,238,-180,-192,-116,-109,266,-55,-96,-85,-62,-181,287,-52,-50,289,-53,-82,-64,-44,312,-40,-39,324,-88,-65,-51,-42,-83,-89,]),'GREATER':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,177,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'TIMES':([7,8,11,28,29,35,64,65,66,68,71,74,75,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,159,-74,-115,-73,-75,-70,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,159,-85,-62,-181,-56,-82,-65,-83,]),'LBRACKET':([7,8,11,21,28,29,35,39,40,42,64,66,71,72,74,75,80,81,82,83,85,87,88,89,90,92,94,95,96,98,115,123,125,157,169,196,219,226,238,240,252,266,312,324,],[-58,-178,-17,-60,-57,-59,-179,104,-56,-66,-78,-74,-73,168,-75,-70,-60,-84,-80,-77,-71,-79,-69,-68,-67,-81,-72,-76,-56,-66,-61,200,201,-191,-66,-180,-192,-85,-62,-181,-56,-82,-65,-83,]),'LENGTH':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[17,17,-7,-8,-5,-4,-2,-6,17,17,17,17,-128,-151,17,17,17,17,-122,-123,17,17,17,-3,17,17,17,-141,17,-144,-142,-140,-146,-143,-145,17,-18,-152,17,17,-9,17,-117,-118,-119,-114,17,-111,-112,-113,-110,17,17,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,17,-24,17,17,17,17,17,17,17,17,17,17,-129,-201,17,17,17,17,17,17,17,17,17,-204,17,17,17,17,17,17,17,-205,17,]),'NOT':([32,41,44,55,63,84,86,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[78,78,78,78,78,78,78,78,78,-141,78,-144,-142,-140,-146,-143,-145,78,78,-117,-118,-119,-114,78,-111,-112,-113,-110,78,78,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'ASC':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[19,19,-7,-8,-5,-4,-2,-6,19,19,19,19,-128,-151,19,19,19,19,-122,-123,19,19,19,-3,19,19,19,-141,19,-144,-142,-140,-146,-143,-145,19,-18,-152,19,19,-9,19,-117,-118,-119,-114,19,-111,-112,-113,-110,19,19,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,19,-24,19,19,19,19,19,19,19,19,19,19,-129,-201,19,19,19,19,19,19,19,19,19,-204,19,19,19,19,19,19,19,-205,19,]),'END':([9,14,16,18,22,23,45,99,138,151,188,189,229,232,234,273,307,],[-7,-8,-5,-4,-2,-6,-128,-3,-18,-9,233,-24,-129,-201,280,-204,-205,]),'EXIT':([0,5,9,14,16,18,22,23,33,45,51,53,99,100,138,146,148,150,151,188,189,197,213,229,232,234,241,243,273,285,307,],[20,20,-7,-8,-5,-4,-2,-6,20,-128,-151,20,-3,20,-18,-152,20,20,-9,20,-24,20,20,-129,-201,20,20,20,-204,20,-205,]),'FI':([7,8,11,28,29,35,45,51,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,146,157,169,184,196,197,198,219,220,221,225,226,229,238,240,241,242,243,266,272,285,302,303,305,312,313,324,326,331,],[-58,-178,-17,-57,-59,-179,-128,-151,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-152,-191,-127,-121,-180,-149,245,-192,-116,-109,-96,-85,-129,-62,-181,-150,284,-153,-82,305,-154,326,-92,-88,-65,-155,-83,-89,-156,]),'BOOL':([11,46,48,61,130,191,201,203,212,260,278,288,289,306,],[-17,122,-15,122,122,122,122,-16,122,122,122,122,122,122,]),'NULL':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[82,82,82,82,82,-122,-123,82,82,82,82,82,-141,82,-144,-142,-140,-146,-143,-145,82,82,-117,-118,-119,-114,82,-111,-112,-113,-110,82,82,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'DIFF':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,173,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'FALSE':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[83,83,83,83,83,-122,-123,83,83,83,83,83,-141,83,-144,-142,-140,-146,-143,-145,83,83,-117,-118,-119,-114,83,-111,-112,-113,-110,83,83,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'ABS':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[24,24,-7,-8,-5,-4,-2,-6,24,24,24,24,-128,-151,24,24,24,24,-122,-123,24,24,24,-3,24,24,24,-141,24,-144,-142,-140,-146,-143,-145,24,-18,-152,24,24,-9,24,-117,-118,-119,-114,24,-111,-112,-113,-110,24,24,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,24,-24,24,24,24,24,24,24,24,24,24,24,-129,-201,24,24,24,24,24,24,24,24,24,-204,24,24,24,24,24,24,24,-205,24,]),'LPAREN':([4,11,13,17,19,24,26,30,31,32,37,40,41,44,55,63,76,78,84,86,96,97,104,105,108,109,110,111,112,113,114,116,118,119,122,124,126,128,132,133,134,135,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,186,201,202,207,208,210,216,218,227,237,239,244,247,252,261,262,267,270,271,274,288,290,291,292,293,296,298,299,301,319,],[-199,-17,-200,-198,-194,-193,-197,-195,63,84,-196,105,84,84,84,84,-122,-123,84,84,105,84,84,84,-141,84,-144,-142,-140,-146,-143,-145,-34,-33,-37,-36,202,-35,-32,84,207,-38,84,-117,-118,-119,-114,84,-111,-112,-113,-110,84,84,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,231,84,84,84,84,84,84,84,84,84,84,84,202,290,202,207,84,84,84,306,84,84,84,-40,-39,84,84,202,84,84,]),'READ':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[4,4,-7,-8,-5,-4,-2,-6,4,4,4,4,-128,-151,4,4,4,4,-122,-123,4,4,4,-3,4,4,4,-141,4,-144,-142,-140,-146,-143,-145,4,-18,-152,4,4,-9,4,-117,-118,-119,-114,4,-111,-112,-113,-110,4,4,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,4,-24,4,4,4,4,4,4,4,4,4,4,-129,-201,4,4,4,4,4,4,4,4,4,-204,4,4,4,4,4,4,4,-205,4,]),'THEN':([7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,106,107,115,157,169,183,184,196,219,220,221,225,226,238,240,266,286,304,305,312,324,325,326,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-90,197,-61,-191,-127,227,-121,-180,-192,-116,-109,-96,-85,-62,-181,-82,197,227,-88,-65,-83,227,-89,]),'AND':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,178,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'DCL':([0,9,14,16,18,22,23,33,45,99,138,151,188,189,229,232,234,273,307,],[27,-7,-8,-5,-4,-2,-6,27,-128,-3,-18,-9,27,-24,-129,-201,27,-204,-205,]),'STRCAT':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,162,-73,-75,-70,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,162,-85,-62,-181,-56,-82,-65,-83,]),'GREATEREQ':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,179,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'OD':([5,45,51,53,146,148,213,229,],[56,-128,-151,147,-152,214,263,-129,]),'RPAREN':([7,8,11,28,29,35,63,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,105,115,118,119,120,121,122,124,126,127,128,131,132,134,135,136,154,155,156,157,169,182,184,195,196,204,219,220,221,225,226,231,238,240,254,255,265,266,276,277,282,287,290,292,293,305,310,311,312,315,316,317,318,324,326,328,329,330,334,],[-58,-178,-17,-57,-59,-179,157,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,196,-61,-34,-33,-46,-47,-37,-36,-29,-28,-35,-31,-32,-41,-38,-30,219,-184,-182,-191,-127,226,-121,240,-180,-45,-192,-116,-109,-96,-85,279,-62,-181,292,293,-183,-82,-208,309,-44,-48,196,-40,-39,-88,-210,-211,-65,-49,-54,-184,-42,-83,-89,335,-209,-212,336,]),'DIVCREASE':([7,8,11,21,28,29,35,40,42,96,115,157,196,219,238,240,312,],[-58,-178,-17,-60,-57,-59,-179,-56,116,-56,-61,-191,-180,-192,-62,-181,-65,]),'ARRAY':([11,46,48,61,130,191,203,278,289,306,],[-17,125,-15,125,125,125,-16,125,125,125,]),'RETURN':([0,5,9,14,16,18,22,23,33,45,51,53,99,100,138,146,148,150,151,188,189,197,213,229,232,234,241,243,273,285,307,],[32,32,-7,-8,-5,-4,-2,-6,32,-128,-151,32,-3,32,-18,-152,32,32,-9,32,-24,32,32,-129,-201,32,32,32,-204,32,-205,]),'PLUS':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,165,-73,-75,-70,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,165,-85,-62,-181,-56,-82,-65,-83,]),'TRUE':([32,41,44,55,63,76,78,84,86,97,104,105,108,109,110,111,112,113,114,116,133,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[64,64,64,64,64,-122,-123,64,64,64,64,64,-141,64,-144,-142,-140,-146,-143,-145,64,64,-117,-118,-119,-114,64,-111,-112,-113,-110,64,64,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'RETURNS':([230,279,309,],[274,-206,-207,]),'LESSEQ':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,172,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'COMMA':([7,8,11,28,29,35,46,48,60,61,62,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,101,102,103,115,118,119,120,121,122,124,126,127,128,131,132,134,135,136,153,154,155,156,157,169,184,192,193,195,196,203,204,215,217,219,220,221,225,226,235,236,238,240,247,248,249,251,264,265,266,276,277,278,281,282,287,292,293,305,310,311,312,314,315,316,317,318,324,326,329,330,],[-58,-178,-17,-57,-59,-179,129,-15,152,129,-10,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,190,-25,129,-61,-34,-33,-46,-47,-37,-36,-29,-28,-35,-31,-32,-41,-38,-30,-12,218,-184,-182,-191,-127,-121,-63,237,218,-180,-16,-45,-11,-13,-192,-116,-109,-96,-85,-26,-27,-62,-181,-52,-50,288,-53,-14,-183,-82,-208,308,129,-64,-44,-48,-40,-39,-88,-210,-211,-65,-51,-49,-54,-184,-42,-83,-89,-209,-212,]),'REF':([11,46,48,61,130,191,203,278,289,306,],[-17,130,-15,130,130,130,-16,130,130,130,]),'INCREASE':([7,8,11,21,28,29,35,40,42,96,115,157,196,219,238,240,312,],[-58,-178,-17,-60,-57,-59,-179,-56,111,-56,-61,-191,-180,-192,-62,-181,-65,]),'UPPER':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,73,76,78,84,86,97,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[37,37,-7,-8,-5,-4,-2,-6,37,37,37,37,-128,-151,37,37,37,37,-122,-123,37,37,37,-3,37,37,37,-141,37,-144,-142,-140,-146,-143,-145,37,-18,-152,37,37,-9,37,-117,-118,-119,-114,37,-111,-112,-113,-110,37,37,-105,-106,-102,-107,-100,-101,-103,-99,-104,-97,-98,37,-24,37,37,37,37,37,37,37,37,37,37,-129,-201,37,37,37,37,37,37,37,37,37,-204,37,37,37,37,37,37,37,-205,37,]),'TYPE':([0,9,14,16,18,22,23,33,45,99,138,151,188,189,229,232,234,273,307,],[38,-7,-8,-5,-4,-2,-6,38,-128,-3,-18,-9,38,-24,-129,-201,38,-204,-205,]),'EQUAL':([7,8,11,28,29,35,64,65,66,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,157,169,184,196,219,220,221,225,226,238,240,252,266,312,324,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-115,-95,-73,-75,-70,176,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-56,-82,-65,-83,]),'ASSIGN':([7,8,11,21,28,29,35,40,42,46,48,96,103,115,118,119,120,121,122,124,126,127,128,131,132,134,135,136,137,143,145,153,157,196,203,204,219,238,240,287,292,293,312,315,316,],[-58,-178,-17,-60,-57,-59,-179,-56,112,133,-15,-56,191,-61,-34,-33,-46,-47,-37,-36,-29,-28,-35,-31,-32,-41,-38,-30,208,210,-169,216,-191,-180,-16,-45,-192,-62,-181,-48,-40,-39,-65,-49,-54,]),'DOWN':([7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,143,145,157,169,184,196,219,220,221,225,226,238,240,257,258,259,266,297,305,312,322,323,324,326,],[-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,211,-169,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-174,-170,295,-82,295,-88,-65,-171,-55,-83,-89,]),'$end':([3,9,14,16,18,22,23,33,45,99,138,151,189,229,232,],[0,-7,-8,-5,-4,-2,-6,-1,-128,-3,-18,-9,-24,-129,-201,]),'DECREASE':([7,8,11,21,28,29,35,40,42,96,115,157,196,219,238,240,312,],[-58,-178,-17,-60,-57,-59,-179,-56,114,-56,-61,-191,-180,-192,-62,-181,-65,]),'ELSE':([7,8,11,28,29,35,45,51,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,146,157,169,184,196,197,198,219,220,221,225,226,228,229,238,240,241,266,268,269,305,312,313,324,326,327,333,],[-58,-178,-17,-57,-59,-179,-128,-151,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-152,-191,-127,-121,-180,-149,243,-192,-116,-109,-96,-85,270,-129,-62,-181,-150,-82,-91,270,-88,-65,243,-83,-89,-93,-94,]),'CHAR':([11,46,48,61,130,191,201,203,212,260,278,288,289,306,],[-17,135,-15,135,135,135,135,-16,135,135,135,135,135,135,]),'WHILE':([5,7,8,11,28,29,35,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,118,119,122,124,128,132,135,140,141,142,144,157,169,184,196,219,220,221,225,226,238,240,257,261,266,292,293,294,299,305,312,320,321,324,326,332,],[55,-58,-178,-17,-57,-59,-179,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-34,-33,-37,-36,-35,-32,-38,-165,55,-164,-166,-191,-127,-121,-180,-192,-116,-109,-96,-85,-62,-181,-174,-175,-82,-40,-39,-167,-176,-88,-65,-172,-168,-83,-89,-173,]),'IF':([0,5,9,14,16,18,22,23,32,33,41,44,45,51,53,55,63,84,86,99,100,104,105,108,109,110,111,112,113,114,116,133,138,146,148,150,151,168,188,189,197,201,202,207,208,210,213,216,218,227,229,232,234,237,239,241,243,244,267,270,271,273,285,288,290,291,296,298,301,307,319,],[41,41,-7,-8,-5,-4,-2,-6,86,41,86,86,-128,-151,41,86,86,86,86,-3,41,86,86,-141,86,-144,-142,-140,-146,-143,-145,86,-18,-152,41,41,-9,86,41,-24,41,86,86,86,86,86,41,86,86,86,-129,-201,41,86,86,41,41,86,86,86,86,-204,41,86,86,86,86,86,86,-205,86,]),'ELSIF':([7,8,11,28,29,35,45,51,64,65,66,67,68,70,71,74,75,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,98,115,146,157,169,184,196,197,198,219,220,221,225,226,228,229,238,240,241,266,268,269,305,312,313,324,326,327,333,],[-58,-178,-17,-57,-59,-179,-128,-151,-78,-108,-74,-87,-115,-95,-73,-75,-70,-86,-60,-126,-80,-77,-71,-79,-69,-68,-67,-120,-81,-125,-72,-76,-56,-124,-61,-152,-191,-127,-121,-180,-149,244,-192,-116,-109,-96,-85,271,-129,-62,-181,-150,-82,-91,301,-88,-65,244,-83,-89,-93,-94,]),'RESULT':([0,5,9,14,16,18,22,23,33,45,51,53,99,100,138,146,148,150,151,188,189,197,213,229,232,234,241,243,273,285,307,],[44,44,-7,-8,-5,-4,-2,-6,44,-128,-151,44,-3,44,-18,-152,44,44,-9,44,-24,44,44,-129,-201,44,44,44,-204,44,-205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[1,1,1,1,185,1,185,1,1,1,1,1,1,1,]),'conditional_expression':([32,41,44,55,63,84,86,104,105,109,133,168,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'do_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'index_mode_list':([201,],[249,]),'result':([32,44,],[69,117,]),'array_element':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'then_clause':([107,286,],[198,313,]),'formal_parameter_list':([231,],[277,]),'constant_expression':([133,208,],[206,256,]),'discrete_mode':([46,61,130,191,201,212,260,278,288,289,306,],[126,126,126,126,247,261,299,126,247,126,126,]),'integer_expression':([168,298,],[222,322,]),'discrete_range_mode':([46,61,130,191,201,212,260,278,288,289,306,],[128,128,128,128,128,128,128,128,128,128,128,]),'operator2':([70,225,],[163,163,]),'array_location':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'string_concatenation_operator':([70,225,],[164,164,]),'expression':([32,41,44,55,63,84,86,104,105,109,133,168,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[77,106,77,106,155,182,106,192,155,199,205,223,250,250,250,205,257,264,155,268,281,282,106,282,303,106,250,317,282,257,323,106,257,]),'string_mode':([46,61,130,191,278,289,306,],[120,120,120,120,120,120,120,]),'loop_counter':([50,],[143,]),'mode_definition':([38,190,],[102,235,]),'operand0':([32,41,44,55,63,84,86,104,105,109,133,168,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'arithmetic_additive_operator':([70,225,],[167,167,]),'synonym_statement':([0,33,188,234,],[16,16,16,16,]),'character_mode':([46,61,130,191,201,212,260,278,288,289,306,],[118,118,118,118,118,118,118,118,118,118,118,]),'statement':([0,33,188,234,],[22,99,22,99,]),'expression_list':([104,],[193,]),'parameter':([63,105,218,290,],[156,156,265,156,]),'newmode_statement':([0,33,188,234,],[23,23,23,23,]),'identifier_list':([2,27,38,49,152,190,231,308,],[46,61,103,46,61,103,278,278,]),'parameter_spec':([278,],[310,]),'integer_literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'statement_list':([0,188,],[33,234,]),'dereferenced_reference':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_slice':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'start_value':([210,],[259,]),'value_array_slice':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'for_control':([50,],[141,]),'initialization':([153,],[217,]),'operator1':([79,],[170,]),'value_array_element':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'elsif_expression':([228,],[269,]),'exit_label_id':([20,],[58,]),'builtin_call':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'referenced_location':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'closed_dyadic_operator':([42,],[108,]),'operand1':([32,41,44,55,63,84,86,104,105,109,133,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[70,70,70,70,70,70,70,70,70,70,70,70,225,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'discrete_expression':([210,296,319,],[258,320,332,]),'monadic_operator':([32,41,44,55,63,84,86,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'location':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[42,42,98,42,98,98,42,98,98,169,98,98,98,42,98,98,98,98,42,42,98,98,98,98,42,42,98,98,98,98,98,42,98,98,98,42,98,98,42,42,98,98,98,98,42,98,98,98,98,98,98,98,]),'lower_bound':([104,168,201,202,207,288,290,],[194,224,253,253,253,253,253,]),'mode':([46,61,130,191,278,289,306,],[137,153,204,236,311,316,328,]),'declaration':([27,152,],[62,215,]),'operand2':([32,41,44,55,63,84,86,104,105,109,133,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[65,65,65,65,65,65,65,65,65,65,65,221,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'program':([0,],[3,]),'boolean_mode':([46,61,130,191,201,212,260,278,288,289,306,],[119,119,119,119,119,119,119,119,119,119,119,]),'literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'builtin_name':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'operand3':([32,41,44,55,63,84,86,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[68,68,68,68,68,68,68,68,68,68,68,220,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'array_mode':([46,61,130,191,278,289,306,],[121,121,121,121,121,121,121,]),'procedure_call':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'procedure_statement':([0,33,188,234,],[9,9,9,9,]),'character_literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'array_primitive_value':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'range_enumeration':([50,],[144,]),'return_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'synonym_definition':([2,49,],[47,139,]),'index_mode':([201,288,],[248,314,]),'parameter_list':([63,105,290,],[154,195,195,]),'arithmetic_multiplicative_operator':([65,221,],[158,158,]),'boolean_literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'parenthesized_expression':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'if_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'action_statement':([0,5,33,53,148,188,197,213,234,241,243,285,],[14,51,14,146,51,14,51,146,14,146,51,146,]),'while_control':([5,141,],[52,209,]),'membership_operator':([79,],[181,]),'iteration':([50,],[142,]),'assigning_operator':([42,],[109,]),'action_statement_list':([5,148,197,243,],[53,213,241,285,]),'upper_bound':([239,267,291,],[283,300,318,]),'assignment_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaration_statement':([0,33,188,234,],[18,18,18,18,]),'literal_range':([201,202,207,288,290,],[251,254,255,251,255,]),'step_enumeration':([50,],[140,]),'synonym_list':([2,],[49,]),'call_action':([0,5,32,33,41,44,53,55,63,73,84,86,97,100,104,105,109,133,148,150,158,163,168,170,188,197,201,202,207,208,210,213,216,218,227,234,237,239,241,243,244,267,270,271,285,288,290,291,296,298,301,319,],[21,21,80,21,80,80,21,80,80,80,80,80,80,21,80,80,80,80,21,21,80,80,80,80,21,21,80,80,80,80,80,21,80,80,80,21,80,80,21,21,80,80,80,80,21,80,80,80,80,80,80,80,]),'primitive_value':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'parenthesis_gambiarra':([186,],[230,]),'element_mode':([289,],[315,]),'procedure_definition':([100,],[187,]),'control_part':([5,],[54,]),'result_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'result_spec':([230,],[275,]),'declaration_list':([27,],[60,]),'newmode_list':([38,],[101,]),'else_expression':([228,269,],[272,302,]),'else_clause':([198,313,],[242,331,]),'empty_literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'then_expression':([183,304,325,],[228,327,333,]),'relational_operator':([79,],[180,]),'end_value':([259,297,],[294,321,]),'mode_name':([46,61,130,191,278,289,306,],[127,127,127,127,127,127,127,]),'operand4':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[91,91,91,91,91,91,91,184,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'label_id':([0,5,33,53,148,188,197,213,234,241,243,285,],[34,57,34,57,57,34,57,57,34,57,57,57,]),'formal_parameter':([231,308,],[276,329,]),'bracketed_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'composite_mode':([46,61,130,191,278,289,306,],[131,131,131,131,131,131,131,]),'integer_mode':([46,61,130,191,201,212,260,278,288,289,306,],[132,132,132,132,132,132,132,132,132,132,132,]),'character_string_literal':([32,41,44,55,63,84,86,97,104,105,109,133,158,163,168,170,201,202,207,208,210,216,218,227,237,239,244,267,270,271,288,290,291,296,298,301,319,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'formal_procedure_head':([100,],[188,]),'identifier':([0,2,5,20,27,32,33,38,41,44,46,49,50,53,55,61,63,73,84,86,97,100,104,105,109,129,130,133,148,150,152,158,163,168,170,188,190,191,197,201,202,207,208,210,212,213,216,218,227,231,234,237,239,241,243,244,260,267,270,271,278,285,288,289,290,291,296,298,301,306,308,319,],[40,48,40,59,48,96,40,48,96,96,134,48,145,40,96,134,96,96,96,96,96,96,96,96,96,203,134,96,40,96,48,96,96,96,96,40,48,134,40,252,96,96,96,96,262,40,96,96,96,48,40,96,96,40,40,96,262,96,96,96,134,40,252,134,96,96,96,96,96,134,48,96,]),'boolean_expression':([41,55,86,244,271,301,],[107,149,183,286,304,325,]),'step_value':([259,],[297,]),'exit_action':([0,5,33,53,100,148,150,188,197,213,234,241,243,285,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'reference_mode':([46,61,130,191,278,289,306,],[136,136,136,136,136,136,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',29),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',40),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',45),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',50),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',51),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',58),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',59),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',66),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',79),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',84),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',89),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',90),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',97),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',98),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',105),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',110),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',115),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',116),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',123),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',128),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',129),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',130),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',131),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',136),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',137),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',138),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',139),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',144),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',149),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',154),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',159),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',160),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',167),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',172),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',177),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',182),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',203),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',208),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',209),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',216),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',217),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',222),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',227),
  ('location -> identifier','location',1,'p_location','parser.py',232),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',233),
  ('location -> array_element','location',1,'p_location','parser.py',234),
  ('location -> array_slice','location',1,'p_location','parser.py',235),
  ('location -> call_action','location',1,'p_location','parser.py',236),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',245),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',250),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',255),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',256),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',263),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',268),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',273),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',274),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',275),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',276),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',282),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',283),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',284),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',285),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',286),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',291),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',296),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',297),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',302),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',307),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',312),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',317),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',322),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',327),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',332),
  ('expression -> operand0','expression',1,'p_expression','parser.py',337),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',338),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',343),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',344),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',351),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',356),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',361),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',366),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',367),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',374),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',375),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',382),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',383),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',387),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',388),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',389),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',390),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',391),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',392),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',393),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',394),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',399),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',404),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',405),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',412),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',413),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',417),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',418),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',423),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',427),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',428),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',435),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',436),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',437),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',442),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',443),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',450),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',451),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',456),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',457),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',458),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',463),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',468),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',469),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',476),
  ('action -> bracketed_action','action',1,'p_action','parser.py',481),
  ('action -> assignment_action','action',1,'p_action','parser.py',482),
  ('action -> call_action','action',1,'p_action','parser.py',483),
  ('action -> exit_action','action',1,'p_action','parser.py',484),
  ('action -> return_action','action',1,'p_action','parser.py',485),
  ('action -> result_action','action',1,'p_action','parser.py',486),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',491),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',492),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',497),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',502),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',503),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',508),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',509),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',510),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',511),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',512),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',517),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',518),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',525),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',526),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',533),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',534),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',541),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',542),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',543),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',544),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',555),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',556),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',557),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',558),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',569),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',570),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',571),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',580),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',584),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',585),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',589),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',590),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',597),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',601),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',605),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',609),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',610),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',617),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',621),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',622),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',629),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',633),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',634),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',638),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',639),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',646),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',647),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',654),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',662),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',666),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',670),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',671),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',678),
  ('result -> expression','result',1,'p_result','parser.py',682),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',686),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',687),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',694),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',695),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',696),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',697),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',698),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',699),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',700),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',701),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',705),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',709),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',710),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',717),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',718),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',726),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',727),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',734),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',735),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',742),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',746),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',747),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',754),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',755),
]
