
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULVAL DIVVAL DIFF MOD MODVAL NOT ICONST CCONST SCONST BOOL UPPER RETURN ELSE DCL NULL LOC PRINT ARRAY IF IN ABS FOR TO RETURNS EXIT REF DOWN TRUE CHAR END RESULT ASC BY NUM THEN SYN READ PROC LOWER INT OD LENGTH FALSE WHILE FI CHARS ELSIF TYPE DOprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_listsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n            | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_value\n            | integer_literalreferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operator ASSIGNclosed_dyadic_operator :  arithmetic_additive_operator\n            | arithmetic_multiplicative_operator\n            | string_concatenation_operatorif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part :  for_control\n                        | while_control\n                        | for_control while_controlfor_control :  FOR iterationiteration :  step_enumeration\n                     | range_enumerationstep_enumeration :  loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_value\n                            | loop_counter ASSIGN start_value DOWN end_value\n                            | loop_counter ASSIGN start_value step_value DOWN end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value :  TO discrete_expressiondiscrete_expression :  expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call :  identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name :  ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC LPAREN RPAREN SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI\n                                 | PROC LPAREN RPAREN result_spec SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMIformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode parameter_attributeparameter_attribute :  LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode result_attribute RPARENresult_attribute :  LOC'
    
_lr_action_items = {'STRCAT':([13,17,20,25,26,29,30,37,38,39,40,61,62,63,64,65,66,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,152,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,101,-127,-115,-77,-85,-122,-82,-134,-87,-57,-75,101,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-57,-187,-197,-135,-128,-65,-188,-198,-92,-123,101,-116,-70,-57,-89,-67,-73,-90,]),'ASSIGN':([13,17,20,25,26,29,30,37,38,39,40,47,49,97,101,102,104,105,106,107,108,109,110,111,112,127,129,130,131,132,133,135,138,139,140,141,142,144,145,146,149,152,159,163,200,202,212,213,225,227,228,240,295,299,300,308,315,325,326,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,103,-15,128,189,-121,-125,-152,-120,192,-126,-64,-151,-150,-124,-119,-47,-28,-31,-29,-32,-38,-36,-33,-35,-34,-30,-46,-41,-37,215,217,-57,-187,-197,246,-177,-45,-16,-65,-188,-198,-70,-40,-48,-39,-67,-73,-50,-55,]),'SYN':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,48,50,54,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,126,147,150,159,163,167,183,190,207,208,219,222,223,225,227,228,229,230,231,232,240,264,274,305,308,313,315,330,331,335,337,345,],[1,1,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,-18,-19,-3,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-20,-9,1,-187,-197,-135,-128,-24,-23,-21,1,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,-22,-89,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'RESULT':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,41,48,50,54,55,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,117,121,126,147,150,159,163,167,183,190,194,195,197,205,207,208,219,222,223,225,227,228,229,230,231,232,240,243,248,249,264,274,291,305,308,313,315,330,331,335,337,345,],[43,43,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,43,-18,-19,-3,43,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,43,-157,-20,-9,43,-187,-197,-135,-128,-24,43,43,-158,43,-23,-21,43,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,43,43,43,-22,-89,43,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'RPAREN':([13,20,25,26,29,30,37,38,57,59,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,127,129,130,131,132,133,135,138,139,140,141,142,144,145,159,160,161,162,163,164,165,167,183,212,221,225,227,228,229,230,231,232,240,255,263,267,269,273,274,281,295,298,299,300,306,307,308,313,315,323,325,326,327,328,333,334,335,337,346,349,351,],[-60,-61,-186,-59,-185,-58,-17,-62,159,163,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-47,-28,-31,-29,-32,-38,-36,-33,-35,-34,-30,-46,-41,-37,-187,-191,227,-189,-197,228,229,-135,-128,-45,268,-65,-188,-198,-92,-123,-103,-116,-70,295,300,302,-214,-190,-89,-44,-40,159,-48,-39,-216,-217,-67,-95,-73,-42,-50,-55,-191,-215,-218,-219,-90,-96,350,352,-222,]),'DIFF':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,174,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'ELSIF':([13,20,25,26,29,30,37,38,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,121,159,163,167,183,197,205,206,222,225,227,228,229,230,231,232,237,240,248,274,276,278,308,313,315,322,335,337,338,347,],[-60,-61,-186,-59,-185,-58,-17,-62,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-157,-187,-197,-135,-128,-158,-155,251,-137,-65,-188,-198,-92,-123,-103,-116,280,-70,-156,-89,-98,311,-67,-95,-73,251,-90,-96,-100,-101,]),'DCL':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,48,50,54,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,126,147,150,159,163,167,183,190,207,208,219,222,223,225,227,228,229,230,231,232,240,264,274,305,308,313,315,330,331,335,337,345,],[4,4,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,-18,-19,-3,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-20,-9,4,-187,-197,-135,-128,-24,-23,-21,4,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,-22,-89,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'ARRAY':([37,47,49,53,137,189,213,270,297,332,],[-17,-15,134,134,134,134,-16,134,134,134,]),'ID':([0,1,4,6,10,13,18,19,20,21,25,26,27,29,30,32,34,35,36,37,38,41,43,44,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,120,121,122,126,128,137,143,147,148,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,190,191,192,194,195,197,205,207,208,209,210,213,214,215,217,219,221,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,245,246,248,249,251,264,270,274,275,277,280,290,291,294,296,297,298,301,305,308,311,313,315,316,319,330,331,332,335,337,345,],[37,37,37,37,-6,-60,-2,-7,-61,-5,-186,-59,37,-185,-58,-4,37,-8,37,-17,-62,37,37,37,-15,37,37,-19,37,-3,37,37,37,-136,37,37,-127,-115,-77,-85,-122,-82,37,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,37,-132,-80,-81,-88,-79,-63,-78,-131,-83,37,37,-121,-125,-148,-120,-126,-64,-124,-119,37,37,37,-157,37,-20,37,37,37,-9,37,37,-187,-197,37,-135,-114,-107,-108,37,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,37,-128,37,37,-24,37,-149,37,37,-158,37,-23,-21,37,37,-16,37,37,37,37,37,-137,-207,37,-65,37,-188,-198,-92,-123,-103,-116,37,37,37,-70,37,37,37,37,37,37,-22,37,-89,37,37,37,37,37,37,37,37,37,37,-210,-67,37,-95,-73,37,37,-211,-212,37,-90,-96,-213,]),'PLUS':([13,17,20,25,26,29,30,37,38,39,40,61,62,63,64,65,66,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,152,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,112,-127,-115,-77,-85,-122,-82,-134,-87,-57,-75,112,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-57,-187,-197,-135,-128,-65,-188,-198,-92,-123,112,-116,-70,-57,-89,-67,-73,-90,]),'INT':([37,47,49,53,137,189,210,213,245,270,290,296,297,332,],[-17,-15,135,135,135,135,135,-16,135,135,135,135,135,135,]),'SEMI':([2,8,11,12,13,16,20,22,24,25,26,27,29,30,33,37,38,39,51,52,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,96,98,99,100,108,114,116,118,119,123,125,127,129,130,131,132,133,135,138,139,140,141,142,144,145,149,153,154,159,163,167,183,193,196,198,199,201,203,204,212,216,218,220,225,227,228,229,230,231,232,240,241,242,244,252,265,266,268,274,284,285,287,292,295,299,300,302,303,308,313,315,318,321,325,326,329,335,337,339,340,343,348,350,352,],[-143,-140,-146,-139,-60,-144,-61,58,-142,-186,-59,-193,-185,-58,-145,-17,-62,-141,-10,147,-127,-115,-77,-85,-122,-82,-93,-194,-134,-196,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-25,190,-192,-138,-64,194,-168,-167,-163,-195,-97,-47,-28,-31,-29,-32,-38,-36,-33,-35,-34,-30,-46,-41,-37,-12,222,223,-187,-197,-135,-128,-147,-165,-169,-170,-172,-171,-184,-45,-11,-13,-208,-65,-188,-198,-92,-123,-103,-116,-70,-27,-26,-164,-153,-14,-209,305,-89,-166,-182,-181,-154,-40,-48,-39,330,331,-67,-95,-73,-173,-183,-50,-55,345,-90,-96,-180,-175,-174,-176,-220,-221,]),'LPAREN':([3,9,14,15,17,23,27,28,37,42,43,44,45,46,56,57,59,60,73,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,131,132,133,135,138,139,140,144,145,151,152,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,256,259,275,277,280,285,286,294,295,296,298,300,304,311,316,319,321,],[-202,-205,-201,-203,57,59,60,-204,-17,-199,60,60,-206,-200,60,60,60,60,57,-129,-130,60,60,60,-121,-125,-148,-120,-126,-124,-119,60,60,60,209,-32,-38,-36,-33,-35,-34,214,-37,221,57,60,-114,-107,-108,60,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,60,60,-149,60,60,60,60,60,60,60,60,60,60,60,60,209,298,60,60,60,209,214,60,-40,60,60,-39,332,60,60,60,209,]),'LESSEQ':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,177,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'READ':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[9,9,-6,-60,-2,-7,-61,-5,-186,-59,9,-185,-58,-4,-8,-17,-62,9,9,9,-18,-19,-3,9,9,9,-136,9,9,-127,-115,-77,-85,-122,-82,9,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,9,-132,-80,-81,-88,-79,-63,-78,-131,-83,9,9,-121,-125,-148,-120,-126,-64,-124,-119,9,9,-157,9,-20,9,-9,9,-187,-197,9,-135,-114,-107,-108,9,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,9,-128,9,-24,-149,9,9,-158,9,-23,-21,9,9,9,9,9,9,-137,-207,9,-65,9,-188,-198,-92,-123,-103,-116,9,9,9,-70,9,9,9,9,9,-22,-89,9,9,9,9,9,9,9,-210,-67,9,-95,-73,9,9,-211,-212,-90,-96,-213,]),'BY':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,274,287,288,289,308,313,315,335,337,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-89,-181,319,-178,-67,-95,-73,-90,-96,]),'CHARS':([37,47,49,53,137,189,213,270,297,332,],[-17,-15,136,136,136,136,-16,136,136,136,]),'EXIT':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,41,48,50,54,55,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,117,121,126,147,150,159,163,167,183,190,194,195,197,205,207,208,219,222,223,225,227,228,229,230,231,232,240,243,248,249,264,274,291,305,308,313,315,330,331,335,337,345,],[36,36,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,36,-18,-19,-3,36,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,36,-157,-20,-9,36,-187,-197,-135,-128,-24,36,36,-158,36,-23,-21,36,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,36,36,36,-22,-89,36,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'MOD':([13,17,20,25,26,29,30,37,38,39,40,61,62,63,64,65,66,70,72,73,74,76,77,79,80,84,85,86,87,88,89,90,91,93,108,152,159,163,167,183,225,227,228,229,230,232,240,259,274,308,315,335,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,107,-127,107,-77,-85,-122,-82,-134,-87,-57,-75,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-57,-187,-197,-135,-128,-65,-188,-198,-92,-123,107,-70,-57,-89,-67,-73,-90,]),'NULL':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[72,72,72,72,72,72,72,-129,-130,72,72,72,-121,-125,-148,-120,-126,-124,-119,72,72,72,72,-114,-107,-108,72,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,72,72,-149,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'RETURNS':([268,302,],[304,304,]),'PROC':([55,],[151,]),'NUM':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[14,14,-6,-60,-2,-7,-61,-5,-186,-59,14,-185,-58,-4,-8,-17,-62,14,14,14,-18,-19,-3,14,14,14,-136,14,14,-127,-115,-77,-85,-122,-82,14,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,14,-132,-80,-81,-88,-79,-63,-78,-131,-83,14,14,-121,-125,-148,-120,-126,-64,-124,-119,14,14,-157,14,-20,14,-9,14,-187,-197,14,-135,-114,-107,-108,14,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,14,-128,14,-24,-149,14,14,-158,14,-23,-21,14,14,14,14,14,14,-137,-207,14,-65,14,-188,-198,-92,-123,-103,-116,14,14,14,-70,14,14,14,14,14,-22,-89,14,14,14,14,14,14,14,-210,-67,14,-95,-73,14,14,-211,-212,-90,-96,-213,]),'LESS':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,178,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'COMMA':([13,20,25,26,29,30,37,38,47,49,51,52,53,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,96,97,98,108,127,129,130,131,132,133,135,138,139,140,141,142,144,145,149,159,160,161,162,163,164,167,183,186,188,212,213,216,218,225,227,228,229,230,231,232,240,241,242,256,257,258,260,265,267,269,270,273,274,281,283,295,299,300,306,307,308,313,315,323,324,325,326,327,328,333,334,335,337,],[-60,-61,-186,-59,-185,-58,-17,-62,-15,143,-10,148,143,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-25,143,191,-64,-47,-28,-31,-29,-32,-38,-36,-33,-35,-34,-30,-46,-41,-37,-12,-187,-191,226,-189,-197,226,-135,-128,-71,239,-45,-16,-11,-13,-65,-188,-198,-92,-123,-103,-116,-70,-27,-26,-53,296,-51,-54,-14,301,-214,143,-190,-89,-44,-72,-40,-48,-39,-216,-217,-67,-95,-73,-42,-52,-50,-55,-191,-215,-218,-219,-90,-96,]),'GREATER':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,175,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'ARROW':([13,17,20,25,26,27,29,30,37,38,39,40,43,44,56,57,59,60,73,81,82,83,89,91,94,95,101,102,103,105,107,108,111,112,113,122,128,152,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,225,226,227,228,236,238,239,240,246,251,259,275,277,280,294,296,298,308,311,315,316,319,],[-60,-57,-61,-186,-59,67,-185,-58,-17,-62,-63,108,67,67,67,67,67,67,-57,-129,-130,67,-63,108,67,67,-121,-125,-148,-120,-126,-64,-124,-119,67,67,67,-57,-187,-197,67,108,-114,-107,-108,67,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,67,67,-149,67,67,67,67,67,67,-65,67,-188,-198,67,67,67,-70,67,67,-57,67,67,67,67,67,67,-67,67,-73,67,67,]),'TO':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,157,159,163,167,183,225,227,228,229,230,231,232,240,274,287,288,289,308,313,315,317,320,335,337,341,342,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-56,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-89,-181,316,-178,-67,-95,-73,316,316,-90,-96,-179,316,]),'CCONST':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[76,76,76,76,76,76,76,-129,-130,76,76,76,-121,-125,-148,-120,-126,-124,-119,76,76,76,76,-114,-107,-108,76,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,76,76,-149,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'UPPER':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[3,3,-6,-60,-2,-7,-61,-5,-186,-59,3,-185,-58,-4,-8,-17,-62,3,3,3,-18,-19,-3,3,3,3,-136,3,3,-127,-115,-77,-85,-122,-82,3,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,3,-132,-80,-81,-88,-79,-63,-78,-131,-83,3,3,-121,-125,-148,-120,-126,-64,-124,-119,3,3,-157,3,-20,3,-9,3,-187,-197,3,-135,-114,-107,-108,3,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,3,-128,3,-24,-149,3,3,-158,3,-23,-21,3,3,3,3,3,3,-137,-207,3,-65,3,-188,-198,-92,-123,-103,-116,3,3,3,-70,3,3,3,3,3,-22,-89,3,3,3,3,3,3,3,-210,-67,3,-95,-73,3,3,-211,-212,-90,-96,-213,]),'LOWER':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[15,15,-6,-60,-2,-7,-61,-5,-186,-59,15,-185,-58,-4,-8,-17,-62,15,15,15,-18,-19,-3,15,15,15,-136,15,15,-127,-115,-77,-85,-122,-82,15,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,15,-132,-80,-81,-88,-79,-63,-78,-131,-83,15,15,-121,-125,-148,-120,-126,-64,-124,-119,15,15,-157,15,-20,15,-9,15,-187,-197,15,-135,-114,-107,-108,15,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,15,-128,15,-24,-149,15,15,-158,15,-23,-21,15,15,15,15,15,15,-137,-207,15,-65,15,-188,-198,-92,-123,-103,-116,15,15,15,-70,15,15,15,15,15,-22,-89,15,15,15,15,15,15,15,-210,-67,15,-95,-73,15,15,-211,-212,-90,-96,-213,]),'DO':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,41,48,50,54,55,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,117,121,126,147,150,159,163,167,183,190,194,195,197,205,207,208,219,222,223,225,227,228,229,230,231,232,240,243,248,249,264,274,291,305,308,313,315,330,331,335,337,345,],[41,41,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,41,-18,-19,-3,41,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,41,-157,-20,-9,41,-187,-197,-135,-128,-24,41,41,-158,41,-23,-21,41,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,41,41,41,-22,-89,41,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'GREATEREQ':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,179,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'FALSE':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[77,77,77,77,77,77,77,-129,-130,77,77,77,-121,-125,-148,-120,-126,-124,-119,77,77,77,77,-114,-107,-108,77,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,77,77,-149,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'IN':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,200,202,225,227,228,229,230,231,232,240,247,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,168,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,245,-177,-65,-188,-198,-92,-123,-103,-116,-70,290,-57,-89,-67,-73,-90,]),'FOR':([41,],[120,]),'OD':([41,58,117,121,194,197,222,243,],[119,-136,196,-157,244,-158,-137,284,]),'ELSE':([13,20,25,26,29,30,37,38,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,121,159,163,167,183,197,205,206,222,225,227,228,229,230,231,232,237,240,248,274,276,278,308,313,315,322,335,337,338,347,],[-60,-61,-186,-59,-185,-58,-17,-62,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-157,-187,-197,-135,-128,-158,-155,249,-137,-65,-188,-198,-92,-123,-103,-116,277,-70,-156,-89,-98,277,-67,-95,-73,249,-90,-96,-100,-101,]),'LBRACKET':([13,17,20,25,26,29,30,31,37,38,39,40,63,64,66,72,73,74,76,77,79,80,85,86,87,88,89,90,91,92,108,134,136,152,159,163,167,225,227,228,229,240,259,274,308,315,335,],[-60,56,-61,-186,-59,-185,-58,95,-17,-62,-63,-74,-77,-85,-82,-87,56,-75,-86,-84,-76,-91,-80,-81,-88,-79,-63,-78,-74,184,-64,210,211,56,-187,-197,-74,-65,-188,-198,-92,-70,56,-89,-67,-73,-90,]),'DOWN':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,157,159,163,167,183,200,202,225,227,228,229,230,231,232,240,274,287,288,289,308,313,315,320,335,337,341,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-56,-187,-197,-135,-128,247,-177,-65,-188,-198,-92,-123,-103,-116,-70,-89,-181,317,-178,-67,-95,-73,342,-90,-96,-179,]),'RETURN':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,41,48,50,54,55,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,117,121,126,147,150,159,163,167,183,190,194,195,197,205,207,208,219,222,223,225,227,228,229,230,231,232,240,243,248,249,264,274,291,305,308,313,315,330,331,335,337,345,],[27,27,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,27,-18,-19,-3,27,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,27,-157,-20,-9,27,-187,-197,-135,-128,-24,27,27,-158,27,-23,-21,27,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,27,27,27,-22,-89,27,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'COLON':([7,13,17,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,115,155,156,157,159,163,167,183,186,187,225,227,228,229,230,231,232,233,235,240,253,254,259,274,308,313,315,327,335,337,],[55,-60,-138,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,195,224,-68,-56,-187,-197,-135,-128,-43,238,-65,-188,-198,-92,-123,-103,-116,-43,275,-70,-43,294,-57,-89,-67,-95,-73,-43,-90,-96,]),'LENGTH':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[28,28,-6,-60,-2,-7,-61,-5,-186,-59,28,-185,-58,-4,-8,-17,-62,28,28,28,-18,-19,-3,28,28,28,-136,28,28,-127,-115,-77,-85,-122,-82,28,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,28,-132,-80,-81,-88,-79,-63,-78,-131,-83,28,28,-121,-125,-148,-120,-126,-64,-124,-119,28,28,-157,28,-20,28,-9,28,-187,-197,28,-135,-114,-107,-108,28,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,28,-128,28,-24,-149,28,28,-158,28,-23,-21,28,28,28,28,28,28,-137,-207,28,-65,28,-188,-198,-92,-123,-103,-116,28,28,28,-70,28,28,28,28,28,-22,-89,28,28,28,28,28,28,28,-210,-67,28,-95,-73,28,28,-211,-212,-90,-96,-213,]),'MINUS':([13,17,20,25,26,27,29,30,37,38,39,40,43,44,56,57,59,60,61,62,63,64,65,66,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,122,128,152,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,209,210,214,215,217,224,225,226,227,228,229,230,231,232,236,238,239,240,246,251,259,274,275,277,280,294,296,298,308,311,315,316,319,335,],[-60,-57,-61,-186,-59,81,-185,-58,-17,-62,-63,105,81,81,81,81,81,81,-127,-115,-77,-85,-122,-82,-134,-87,-57,-75,105,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,81,81,-121,-125,-148,-120,-126,-64,-124,-119,81,81,81,-57,-187,-197,81,-135,-114,-107,-108,81,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,81,-128,81,-149,81,81,81,81,81,81,-65,81,-188,-198,-92,-123,105,-116,81,81,81,-70,81,81,-57,-89,81,81,81,81,81,81,-67,81,-73,81,81,-90,]),'END':([10,13,18,19,20,21,25,26,29,30,32,35,37,38,48,50,54,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,126,147,150,159,163,167,183,190,207,208,219,222,223,225,227,228,229,230,231,232,240,264,274,305,308,313,315,330,331,335,337,345,],[-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,-18,-19,-3,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-20,-9,220,-187,-197,-135,-128,-24,-23,-21,266,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,-22,-89,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'OR':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,169,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'ABS':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[42,42,-6,-60,-2,-7,-61,-5,-186,-59,42,-185,-58,-4,-8,-17,-62,42,42,42,-18,-19,-3,42,42,42,-136,42,42,-127,-115,-77,-85,-122,-82,42,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,42,-132,-80,-81,-88,-79,-63,-78,-131,-83,42,42,-121,-125,-148,-120,-126,-64,-124,-119,42,42,-157,42,-20,42,-9,42,-187,-197,42,-135,-114,-107,-108,42,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,42,-128,42,-24,-149,42,42,-158,42,-23,-21,42,42,42,42,42,42,-137,-207,42,-65,42,-188,-198,-92,-123,-103,-116,42,42,42,-70,42,42,42,42,42,-22,-89,42,42,42,42,42,42,42,-210,-67,42,-95,-73,42,42,-211,-212,-90,-96,-213,]),'NOT':([27,43,44,56,57,59,60,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[82,82,82,82,82,82,82,82,82,-121,-125,-148,-120,-126,-124,-119,82,82,82,82,-114,-107,-108,82,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,82,82,-149,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'TIMES':([13,17,20,25,26,29,30,37,38,39,40,61,62,63,64,65,66,70,72,73,74,76,77,79,80,84,85,86,87,88,89,90,91,93,108,152,159,163,167,183,225,227,228,229,230,232,240,259,274,308,315,335,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,111,-127,111,-77,-85,-122,-82,-134,-87,-57,-75,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-57,-187,-197,-135,-128,-65,-188,-198,-92,-123,111,-70,-57,-89,-67,-73,-90,]),'FI':([13,20,25,26,29,30,37,38,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,121,159,163,167,183,197,205,206,222,225,227,228,229,230,231,232,240,248,249,250,274,279,291,308,310,312,313,315,322,335,337,344,],[-60,-61,-186,-59,-185,-58,-17,-62,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-157,-187,-197,-135,-128,-158,-155,252,-137,-65,-188,-198,-92,-123,-103,-116,-70,-156,-159,292,-89,313,-160,-67,-99,337,-95,-73,-161,-90,-96,-162,]),'RBRACKET':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,132,133,135,138,139,140,145,156,157,158,159,163,167,183,186,188,225,227,228,229,230,231,232,233,234,240,256,257,258,260,261,262,271,272,274,281,282,283,295,300,308,309,313,315,323,324,335,337,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-32,-38,-36,-33,-35,-34,-37,-66,-56,225,-187,-197,-135,-128,-71,240,-65,-188,-198,-92,-123,-103,-116,-56,274,-70,-53,297,-51,-54,-49,299,308,-69,-89,-44,315,-72,-40,-39,-67,335,-95,-73,-42,-52,-90,-96,]),'BOOL':([37,47,49,53,137,189,210,213,245,270,290,296,297,332,],[-17,-15,145,145,145,145,145,-16,145,145,145,145,145,145,]),'REF':([37,47,49,53,137,189,213,270,297,332,],[-17,-15,137,137,137,137,-16,137,137,137,]),'TYPE':([0,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,48,50,54,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,126,147,150,159,163,167,183,190,207,208,219,222,223,225,227,228,229,230,231,232,240,264,274,305,308,313,315,330,331,335,337,345,],[34,34,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,-18,-19,-3,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-20,-9,34,-187,-197,-135,-128,-24,-23,-21,34,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,-22,-89,-210,-67,-95,-73,-211,-212,-90,-96,-213,]),'IF':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,94,95,103,108,113,117,121,122,126,128,147,150,159,163,167,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[44,44,-6,-60,-2,-7,-61,-5,-186,-59,94,-185,-58,-4,-8,-17,-62,44,94,94,-18,-19,-3,44,94,94,-136,94,94,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,94,94,-148,-64,94,44,-157,94,-20,94,-9,44,-187,-197,-135,-128,94,-24,-149,44,44,-158,44,-23,-21,94,94,94,94,94,44,-137,-207,94,-65,94,-188,-198,-92,-123,-103,-116,94,94,94,-70,44,94,44,44,94,-22,-89,94,94,94,44,94,94,94,-210,-67,94,-95,-73,94,94,-211,-212,-90,-96,-213,]),'LOC':([37,127,129,130,131,132,133,135,138,139,140,141,142,144,145,212,295,299,300,307,325,326,346,],[-17,-47,-28,-31,-29,-32,-38,-36,-33,-35,-34,-30,-46,-41,-37,-45,-40,-48,-39,334,-50,-55,351,]),'WHILE':([13,20,25,26,29,30,37,38,41,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,118,132,133,135,138,139,140,145,159,163,167,183,199,201,203,225,227,228,229,230,231,232,240,274,285,287,295,300,308,313,315,318,321,335,337,339,340,343,348,],[-60,-61,-186,-59,-185,-58,-17,-62,122,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,122,-32,-38,-36,-33,-35,-34,-37,-187,-197,-135,-128,-170,-172,-171,-65,-188,-198,-92,-123,-103,-116,-70,-89,-182,-181,-40,-39,-67,-95,-73,-173,-183,-90,-96,-180,-175,-174,-176,]),'EQUAL':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,170,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'AND':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,79,80,84,85,86,87,88,89,90,91,93,108,159,163,167,183,225,227,228,229,230,231,232,240,259,274,308,315,335,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,172,-134,-87,-57,-75,-102,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-187,-197,-135,-128,-65,-188,-198,-92,-123,-103,-116,-70,-57,-89,-67,-73,-90,]),'THEN':([13,20,25,26,29,30,37,38,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,124,125,159,163,167,183,185,225,227,228,229,230,231,232,240,274,293,308,313,314,315,335,336,337,],[-60,-61,-186,-59,-185,-58,-17,-62,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,205,-97,-187,-197,-135,-128,236,-65,-188,-198,-92,-123,-103,-116,-70,-89,205,-67,-95,236,-73,-90,236,-96,]),'CHAR':([37,47,49,53,137,189,210,213,245,270,290,296,297,332,],[-17,-15,133,133,133,133,133,-16,133,133,133,133,133,133,]),'DIVIDE':([13,17,20,25,26,29,30,37,38,39,40,61,62,63,64,65,66,70,72,73,74,76,77,79,80,84,85,86,87,88,89,90,91,93,108,152,159,163,167,183,225,227,228,229,230,232,240,259,274,308,315,335,],[-60,-57,-61,-186,-59,-185,-58,-17,-62,-63,102,-127,102,-77,-85,-122,-82,-134,-87,-57,-75,-86,-84,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-57,-187,-197,-135,-128,-65,-188,-198,-92,-123,102,-70,-57,-89,-67,-73,-90,]),'TRUE':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[64,64,64,64,64,64,64,-129,-130,64,64,64,-121,-125,-148,-120,-126,-124,-119,64,64,64,64,-114,-107,-108,64,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,64,64,-149,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SCONST':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[87,87,87,87,87,87,87,-129,-130,87,87,87,-121,-125,-148,-120,-126,-124,-119,87,87,87,87,-114,-107,-108,87,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,87,87,-149,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'ICONST':([27,43,44,56,57,59,60,81,82,83,94,95,101,102,103,105,107,111,112,113,122,128,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,209,210,211,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[93,93,93,93,93,93,93,-129,-130,93,93,93,-121,-125,-148,-120,-126,-124,-119,93,93,93,93,-114,-107,-108,93,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,93,93,-149,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'PRINT':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[45,45,-6,-60,-2,-7,-61,-5,-186,-59,45,-185,-58,-4,-8,-17,-62,45,45,45,-18,-19,-3,45,45,45,-136,45,45,-127,-115,-77,-85,-122,-82,45,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,45,-132,-80,-81,-88,-79,-63,-78,-131,-83,45,45,-121,-125,-148,-120,-126,-64,-124,-119,45,45,-157,45,-20,45,-9,45,-187,-197,45,-135,-114,-107,-108,45,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,45,-128,45,-24,-149,45,45,-158,45,-23,-21,45,45,45,45,45,45,-137,-207,45,-65,45,-188,-198,-92,-123,-103,-116,45,45,45,-70,45,45,45,45,45,-22,-89,45,45,45,45,45,45,45,-210,-67,45,-95,-73,45,45,-211,-212,-90,-96,-213,]),'$end':([5,6,10,13,18,19,20,21,25,26,29,30,32,35,37,38,48,50,54,58,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,79,80,84,85,86,87,88,89,90,91,93,108,126,147,159,163,167,183,190,207,208,222,223,225,227,228,229,230,231,232,240,264,274,308,313,315,335,337,],[0,-1,-6,-60,-2,-7,-61,-5,-186,-59,-185,-58,-4,-8,-17,-62,-18,-19,-3,-136,-127,-115,-77,-85,-122,-82,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-132,-80,-81,-88,-79,-63,-78,-131,-83,-64,-20,-9,-187,-197,-135,-128,-24,-23,-21,-137,-207,-65,-188,-198,-92,-123,-103,-116,-70,-22,-89,-67,-95,-73,-90,-96,]),'ASC':([0,6,10,13,18,19,20,21,25,26,27,29,30,32,35,37,38,41,43,44,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,101,102,103,105,107,108,111,112,113,117,121,122,126,128,147,150,159,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,190,192,194,195,197,205,207,208,209,210,214,215,217,219,222,223,224,225,226,227,228,229,230,231,232,236,238,239,240,243,246,248,249,251,264,274,275,277,280,291,294,296,298,305,308,311,313,315,316,319,330,331,335,337,345,],[46,46,-6,-60,-2,-7,-61,-5,-186,-59,46,-185,-58,-4,-8,-17,-62,46,46,46,-18,-19,-3,46,46,46,-136,46,46,-127,-115,-77,-85,-122,-82,46,-93,-134,-87,-57,-75,-102,-86,-84,-94,-76,-133,-129,-130,46,-132,-80,-81,-88,-79,-63,-78,-131,-83,46,46,-121,-125,-148,-120,-126,-64,-124,-119,46,46,-157,46,-20,46,-9,46,-187,-197,46,-135,-114,-107,-108,46,-106,-105,-109,-110,-104,-113,-112,-111,-117,-118,46,-128,46,-24,-149,46,46,-158,46,-23,-21,46,46,46,46,46,46,-137,-207,46,-65,46,-188,-198,-92,-123,-103,-116,46,46,46,-70,46,46,46,46,46,-22,-89,46,46,46,46,46,46,46,-210,-67,46,-95,-73,46,46,-211,-212,-90,-96,-213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_attribute':([307,],[333,]),'else_expression':([237,278,],[279,312,]),'left_element':([56,],[155,]),'formal_parameter_list':([221,],[267,]),'return_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'discrete_mode':([49,53,137,189,210,245,270,290,296,297,332,],[131,131,131,131,256,285,131,321,256,131,131,]),'operator1':([68,],[171,]),'do_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'string_concatenation_operator':([40,75,231,],[104,181,181,]),'element_mode':([297,],[325,]),'arithmetic_multiplicative_operator':([40,62,232,],[109,166,166,]),'program':([0,],[5,]),'start_value':([246,],[288,]),'operand3':([27,43,44,56,57,59,60,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[65,65,65,65,65,65,65,65,65,65,65,65,230,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'statement_list':([0,150,],[6,219,]),'label_id':([0,6,36,41,117,150,194,205,219,243,248,249,291,],[7,7,99,115,115,7,115,115,7,115,115,115,115,]),'assignment_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'exit_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'integer_literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,211,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,261,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'newmode_statement':([0,6,150,219,],[10,10,10,10,]),'elsif_expression':([237,],[278,]),'expression':([27,43,44,56,57,59,60,94,95,113,122,128,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[71,71,125,157,160,160,165,125,186,193,125,207,233,253,253,253,207,265,157,160,276,281,283,287,125,281,310,125,281,253,327,125,287,157,]),'action_statement_list':([41,194,205,249,],[117,243,248,291,]),'bracketed_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'for_control':([41,],[118,]),'string_slice':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'parameter_list':([57,59,298,],[161,164,161,]),'literal_range':([209,210,214,296,298,],[255,260,263,260,263,]),'array_element':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'index_mode_list':([210,],[257,]),'upper_bound':([238,275,294,],[282,309,323,]),'identifier_list':([1,4,34,48,148,191,221,301,],[49,53,97,49,53,97,270,270,]),'string_length':([211,],[262,]),'synonym_statement':([0,6,150,219,],[21,21,21,21,]),'operator2':([75,231,],[182,182,]),'action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[22,22,22,153,22,22,22,153,22,22,22,22,22,22,]),'parameter_spec':([270,],[306,]),'operand4':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[61,61,61,61,61,61,61,183,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'initialization':([149,],[218,]),'array_primitive_value':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'builtin_call':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'integer_mode':([49,53,137,189,210,245,270,290,296,297,332,],[132,132,132,132,132,132,132,132,132,132,132,]),'procedure_call':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'empty_literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'declaration_statement':([0,6,150,219,],[32,32,32,32,]),'arithmetic_additive_operator':([40,75,231,],[110,180,180,]),'if_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'monadic_operator':([27,43,44,56,57,59,60,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'control_part':([41,],[114,]),'discrete_range_mode':([49,53,137,189,210,245,270,290,296,297,332,],[139,139,139,139,139,139,139,139,139,139,139,]),'character_literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'boolean_mode':([49,53,137,189,210,245,270,290,296,297,332,],[138,138,138,138,138,138,138,138,138,138,138,]),'range_enumeration':([120,],[201,]),'boolean_literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'call_action':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[39,39,89,39,89,89,39,89,89,89,89,89,89,89,89,89,39,89,89,39,89,89,89,89,39,39,39,89,89,89,89,89,39,89,89,89,89,89,39,89,39,39,89,89,89,89,39,89,89,89,89,89,89,]),'result_spec':([268,302,],[303,329,]),'string_mode':([49,53,137,189,270,297,332,],[142,142,142,142,142,142,142,]),'constant_expression':([128,215,],[208,264,]),'right_element':([224,],[271,]),'discrete_expression':([246,316,],[289,339,]),'step_enumeration':([120,],[203,]),'expression_list':([95,],[188,]),'membership_operator':([68,],[173,]),'procedure_definition':([55,],[154,]),'array_mode':([49,53,137,189,270,297,332,],[127,127,127,127,127,127,127,]),'declaration':([4,148,],[51,216,]),'mode_definition':([34,191,],[96,242,]),'loop_counter':([120,],[200,]),'composite_mode':([49,53,137,189,270,297,332,],[130,130,130,130,130,130,130,]),'result_action':([0,6,41,55,117,150,194,195,205,219,243,248,249,291,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'value_array_slice':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'step_value':([288,],[320,]),'location':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[40,40,91,40,91,91,40,91,91,91,91,167,91,91,91,91,40,91,91,40,91,91,91,91,40,40,40,91,91,91,91,91,40,91,91,91,91,91,40,91,40,40,91,91,91,91,40,91,91,91,91,91,91,]),'synonym_list':([1,],[48,]),'index_mode':([210,296,],[258,324,]),'relational_operator':([68,],[176,]),'integer_expression':([56,184,224,319,],[156,234,272,341,]),'iteration':([120,],[199,]),'while_control':([41,118,],[116,198,]),'builtin_name':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'else_clause':([206,322,],[250,344,]),'operand1':([27,43,44,56,57,59,60,94,95,113,122,128,171,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[75,75,75,75,75,75,75,75,75,75,75,75,231,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'formal_procedure_head':([55,],[150,]),'character_mode':([49,53,137,189,210,245,270,290,296,297,332,],[140,140,140,140,140,140,140,140,140,140,140,]),'reference_mode':([49,53,137,189,270,297,332,],[141,141,141,141,141,141,141,]),'operand0':([27,43,44,56,57,59,60,94,95,113,122,128,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'identifier':([0,1,4,6,27,34,36,41,43,44,48,49,53,55,56,57,59,60,67,83,94,95,113,117,120,122,128,137,143,148,150,166,171,182,184,189,191,194,195,205,209,210,214,215,217,219,221,224,226,236,238,239,243,245,246,248,249,251,270,275,277,280,290,291,294,296,297,298,301,311,316,319,332,],[17,47,47,17,73,47,100,17,73,73,47,144,144,152,73,73,73,73,73,73,73,73,73,17,202,73,73,144,213,47,17,73,73,73,73,144,47,17,152,17,73,259,73,73,73,17,47,73,73,73,73,73,17,286,73,17,17,73,144,73,73,73,286,17,73,259,144,73,47,73,73,73,144,]),'literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'primitive_value':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'statement':([0,6,150,219,],[18,54,18,54,]),'procedure_statement':([0,6,150,219,],[19,19,19,19,]),'array_slice':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'conditional_expression':([27,43,44,56,57,59,60,94,95,113,122,128,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode_name':([49,53,137,189,270,297,332,],[129,129,129,129,129,129,129,]),'start_element':([56,],[158,]),'value_array_element':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'newmode_list':([34,],[98,]),'synonym_definition':([1,48,],[50,126,]),'formal_parameter':([221,301,],[269,328,]),'lower_bound':([95,184,209,210,214,296,298,],[187,235,254,254,254,254,254,]),'dereferenced_reference':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'then_expression':([185,314,336,],[237,338,347,]),'boolean_expression':([44,94,122,251,280,311,],[124,185,204,293,314,336,]),'operand2':([27,43,44,56,57,59,60,94,95,113,122,128,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[62,62,62,62,62,62,62,62,62,62,62,62,62,232,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'parameter':([57,59,226,298,],[162,162,273,162,]),'assigning_operator':([40,],[113,]),'referenced_location':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'string_element':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'action_statement':([0,6,41,117,150,194,205,219,243,248,249,291,],[35,35,121,197,35,121,121,35,197,197,121,197,]),'character_string_literal':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'array_location':([0,6,27,41,43,44,55,56,57,59,60,67,83,94,95,113,117,122,128,150,166,171,182,184,194,195,205,209,210,214,215,217,219,224,226,236,238,239,243,246,248,249,251,275,277,280,291,294,296,298,311,316,319,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'result_attribute':([346,],[349,]),'parenthesized_expression':([27,43,44,56,57,59,60,83,94,95,113,122,128,166,171,182,184,209,210,214,215,217,224,226,236,238,239,246,251,275,277,280,294,296,298,311,316,319,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'closed_dyadic_operator':([40,],[106,]),'then_clause':([124,293,],[206,322,]),'result':([27,43,],[69,123,]),'end_value':([288,317,320,342,],[318,340,343,348,]),'declaration_list':([4,],[52,]),'mode':([49,53,137,189,270,297,332,],[146,149,212,241,307,326,346,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',25),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',26),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',38),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',42),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',54),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',55),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',62),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',66),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',67),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',74),
  ('synonym_statement -> SYN synonym_list','synonym_statement',2,'p_synonym_statement','parser.py',79),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',83),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',84),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',91),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',92),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',99),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',103),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',107),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',108),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',115),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',119),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',120),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',121),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',122),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',126),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',127),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',128),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',129),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',133),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',137),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',141),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',145),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',146),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',150),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',158),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',162),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',166),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',170),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',174),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',175),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',179),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',183),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',187),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',191),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',192),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',199),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',200),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',204),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',208),
  ('location -> identifier','location',1,'p_location','parser.py',212),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',213),
  ('location -> string_element','location',1,'p_location','parser.py',214),
  ('location -> string_slice','location',1,'p_location','parser.py',215),
  ('location -> array_element','location',1,'p_location','parser.py',216),
  ('location -> array_slice','location',1,'p_location','parser.py',217),
  ('location -> call_action','location',1,'p_location','parser.py',218),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',222),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',226),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',230),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',234),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',242),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',246),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',250),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',254),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',255),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',262),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',266),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',270),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',271),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',272),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',273),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',277),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',278),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',279),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',280),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',284),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',288),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',289),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',294),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',298),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',303),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',307),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',311),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',315),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',319),
  ('expression -> operand0','expression',1,'p_expression','parser.py',323),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',324),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',328),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',329),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',336),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',340),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',344),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',348),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',349),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',356),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',357),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',361),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',362),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',366),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',367),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',368),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',369),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',370),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',371),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',372),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',373),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',377),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',381),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',382),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',386),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',387),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',391),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',392),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',396),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',400),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',401),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',408),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',409),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',410),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',414),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',415),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',422),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',423),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',427),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',428),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',429),
  ('operand4 -> integer_literal','operand4',1,'p_operand4','parser.py',430),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',434),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',438),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',439),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',446),
  ('action -> bracketed_action','action',1,'p_action','parser.py',450),
  ('action -> assignment_action','action',1,'p_action','parser.py',451),
  ('action -> call_action','action',1,'p_action','parser.py',452),
  ('action -> exit_action','action',1,'p_action','parser.py',453),
  ('action -> return_action','action',1,'p_action','parser.py',454),
  ('action -> result_action','action',1,'p_action','parser.py',455),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',459),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',460),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',464),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',468),
  ('assigning_operator -> closed_dyadic_operator ASSIGN','assigning_operator',2,'p_assigning_operator','parser.py',469),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',476),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',477),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',478),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',482),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',483),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',490),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',491),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',498),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',499),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',506),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',507),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',508),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',509),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',520),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',521),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',522),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',523),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',532),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',533),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',534),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',541),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',545),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',546),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',550),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',551),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',552),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',553),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',562),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',566),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',570),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',574),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',578),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',582),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',583),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',590),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',594),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',595),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',599),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',600),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',607),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',608),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',615),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',623),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',627),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',628),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',635),
  ('result -> expression','result',1,'p_result','parser.py',639),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',643),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',644),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',651),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',652),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',653),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',654),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',655),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',656),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',657),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',658),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',662),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',666),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',667),
  ('formal_procedure_head -> PROC LPAREN RPAREN SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',674),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',675),
  ('formal_procedure_head -> PROC LPAREN RPAREN result_spec SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',676),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI','formal_procedure_head',6,'p_formal_procedure_head','parser.py',677),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',687),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',688),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',695),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',699),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',700),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',707),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',711),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','parser.py',712),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',719),
]
