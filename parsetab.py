
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST DCL FI CHAR WHILE INT BOOL TYPE DO RESULT LENGTH ARRAY CHARS FOR END LOC UPPER RETURN THEN PROC LOWER EXIT READ DOWN ELSIF ASC PRINT BY NUM IF NULL ELSE TO ABS TRUE RETURNS OD REF SYN IN FALSEprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list initialization\n                              | identifier_list mode initializationnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : ICONSTarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'STRCAT':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,135,-124,-108,-61,-127,-121,-180,-191,135,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'OD':([5,82,83,96,152,153,215,233,],[80,151,-151,-128,-152,214,258,-129,]),'READ':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[10,-5,10,10,-8,-4,10,-6,-7,10,-2,10,10,-122,10,10,10,-123,10,-151,10,10,-128,-3,10,10,10,-141,10,-145,-144,-143,-146,-140,-142,-98,-97,10,-104,-100,-107,-99,-106,-101,-102,-103,-105,10,-114,-111,-112,-110,-113,10,-118,-119,10,-117,-152,10,10,-9,-23,10,10,-18,10,10,10,10,10,10,10,10,10,10,-201,-129,10,10,10,10,10,10,10,-204,10,10,10,10,10,10,10,-205,10,]),'FOR':([5,],[81,]),'MULCREASE':([4,11,15,19,30,35,36,42,44,52,112,182,184,226,228,230,304,],[-59,-58,-56,-60,-178,-57,-179,-17,113,-56,-61,-180,-191,-181,-192,-62,-65,]),'COLON':([4,11,15,27,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,85,112,118,132,182,184,186,188,201,202,203,205,208,209,226,228,230,246,259,260,265,289,304,312,314,322,],[-59,-58,-130,100,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,154,-61,-127,-121,-180,-191,-42,231,-96,-42,245,-85,-109,-116,-181,-192,-62,-82,-42,297,-56,-88,-65,-83,-89,-42,]),'INT':([42,88,90,106,162,179,212,218,221,252,275,301,302,310,],[-17,-15,163,163,163,163,163,-16,163,163,163,163,163,163,]),'RETURN':([0,1,5,7,13,17,26,29,37,82,83,96,97,100,152,153,154,175,177,191,194,195,215,232,233,235,240,242,279,284,309,],[3,-5,3,-8,-4,3,-6,-7,-2,3,-151,-128,-3,3,-152,3,3,-9,-23,3,3,-18,3,-201,-129,3,3,3,-204,3,-205,]),'RBRACKET':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,158,160,163,164,167,170,173,182,184,186,187,201,202,204,205,208,209,226,228,230,246,263,264,266,267,268,269,271,272,273,285,289,298,299,304,312,314,321,325,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-36,-37,-35,-32,-33,-34,-31,-180,-191,-63,230,-96,-55,246,-85,-109,-116,-181,-192,-62,-82,-52,-50,301,-53,303,-48,-64,-43,304,312,-88,-39,-38,-65,-83,-89,-41,-51,]),'INCREASE':([4,11,15,19,30,35,36,42,44,52,112,182,184,226,228,230,304,],[-59,-58,-56,-60,-178,-57,-179,-17,117,-56,-61,-180,-191,-181,-192,-62,-65,]),'DIVIDE':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,68,70,72,73,74,75,77,79,112,118,132,182,184,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-124,141,-61,-127,-121,-180,-191,-85,141,-116,-181,-192,-62,-82,-56,-65,-83,]),'RPAREN':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,95,98,112,118,132,133,156,158,160,161,163,164,165,166,167,168,169,170,171,173,180,181,182,183,184,185,201,205,208,209,219,226,228,230,236,246,261,262,270,272,277,278,289,298,299,300,303,304,305,306,312,314,321,322,323,324,326,327,328,333,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,182,184,-61,-127,-121,205,-28,-36,-37,-46,-35,-32,-45,-27,-33,-29,-40,-34,-30,-31,-184,-182,-180,226,-191,228,-96,-85,-109,-116,-44,-181,-192,-62,276,-82,298,299,-183,-43,-208,308,-88,-39,-38,182,-47,-65,-211,-210,-83,-89,-41,-184,-54,-49,-212,-209,332,334,]),'PLUS':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,137,-124,-108,-61,-127,-121,-180,-191,137,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'DCL':([0,1,7,13,17,26,29,37,96,97,175,177,191,195,232,233,235,279,309,],[6,-5,-8,-4,6,-6,-7,-2,-128,-3,-9,-23,6,-18,-201,-129,6,-204,-205,]),'TIMES':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,68,70,72,73,74,75,77,79,112,118,132,182,184,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-124,144,-61,-127,-121,-180,-191,-85,144,-116,-181,-192,-62,-82,-56,-65,-83,]),'AND':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,125,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'ASC':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[9,-5,9,9,-8,-4,9,-6,-7,9,-2,9,9,-122,9,9,9,-123,9,-151,9,9,-128,-3,9,9,9,-141,9,-145,-144,-143,-146,-140,-142,-98,-97,9,-104,-100,-107,-99,-106,-101,-102,-103,-105,9,-114,-111,-112,-110,-113,9,-118,-119,9,-117,-152,9,9,-9,-23,9,9,-18,9,9,9,9,9,9,9,9,9,9,-201,-129,9,9,9,9,9,9,9,-204,9,9,9,9,9,9,9,-205,9,]),'EQUAL':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,127,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'TRUE':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[62,62,62,-122,62,62,62,-123,62,62,62,62,-141,62,-145,-144,-143,-146,-140,-142,-98,-97,62,-104,-100,-107,-99,-106,-101,-102,-103,-105,62,-114,-111,-112,-110,-113,62,-118,-119,62,-117,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ABS':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[34,-5,34,34,-8,-4,34,-6,-7,34,-2,34,34,-122,34,34,34,-123,34,-151,34,34,-128,-3,34,34,34,-141,34,-145,-144,-143,-146,-140,-142,-98,-97,34,-104,-100,-107,-99,-106,-101,-102,-103,-105,34,-114,-111,-112,-110,-113,34,-118,-119,34,-117,-152,34,34,-9,-23,34,34,-18,34,34,34,34,34,34,34,34,34,34,-201,-129,34,34,34,34,34,34,34,-204,34,34,34,34,34,34,34,-205,34,]),'END':([1,7,13,26,29,37,96,97,175,177,191,195,232,233,235,279,309,],[-5,-8,-4,-6,-7,-2,-128,-3,-9,-23,234,-18,-201,-129,274,-204,-205,]),'BOOL':([42,88,90,106,162,179,212,218,221,252,275,301,302,310,],[-17,-15,158,158,158,158,158,-16,158,158,158,158,158,158,]),'FI':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,83,96,112,118,132,152,182,184,193,194,201,205,208,209,226,228,230,233,238,240,242,246,250,284,287,289,290,304,311,312,314,329,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-151,-128,-61,-127,-121,-152,-180,-191,241,-149,-96,-85,-109,-116,-181,-192,-62,-129,282,-153,-150,-82,289,-154,314,-88,-92,-65,-155,-83,-89,-156,]),'LOWER':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[43,-5,43,43,-8,-4,43,-6,-7,43,-2,43,43,-122,43,43,43,-123,43,-151,43,43,-128,-3,43,43,43,-141,43,-145,-144,-143,-146,-140,-142,-98,-97,43,-104,-100,-107,-99,-106,-101,-102,-103,-105,43,-114,-111,-112,-110,-113,43,-118,-119,43,-117,-152,43,43,-9,-23,43,43,-18,43,43,43,43,43,43,43,43,43,43,-201,-129,43,43,43,43,43,43,43,-204,43,43,43,43,43,43,43,-205,43,]),'TYPE':([0,1,7,13,17,26,29,37,96,97,175,177,191,195,232,233,235,279,309,],[14,-5,-8,-4,14,-6,-7,-2,-128,-3,-9,-23,14,-18,-201,-129,14,-204,-205,]),'ARROW':([3,4,11,15,19,30,33,35,36,41,42,44,52,53,56,66,67,71,77,78,86,95,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,182,184,199,206,213,216,220,221,226,227,228,229,230,231,239,245,249,251,265,286,295,296,297,300,302,304,316,],[51,-59,-58,-56,-60,-178,51,-57,-179,51,-17,112,-56,-122,-60,51,51,51,112,-123,51,51,51,51,-141,51,-145,-61,-144,-143,-146,-140,-142,112,-98,-97,51,-104,-100,-107,-99,-106,-101,-102,-103,-105,51,-114,-111,-112,-110,-113,51,-118,-119,51,-117,-180,-191,51,51,51,51,51,51,-181,51,-192,51,-62,51,51,51,51,51,-56,51,51,51,51,51,51,-65,51,]),'LBRACKET':([4,11,15,19,25,30,35,36,42,44,46,48,49,50,52,54,55,56,59,60,61,62,63,64,68,70,72,73,75,77,112,118,172,174,182,184,205,226,228,230,246,265,304,312,],[-59,-58,-56,-60,99,-178,-57,-179,-17,-66,-84,-81,-67,-70,-56,-79,-72,-60,-76,-71,131,-78,-74,-68,-73,-69,-77,-80,-75,-66,-61,-66,221,222,-180,-191,-85,-181,-192,-62,-82,-56,-65,-83,]),'MINUS':([3,4,11,30,33,35,36,41,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,67,68,70,71,72,73,74,75,76,77,79,86,95,98,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,182,184,199,201,205,206,208,209,213,216,220,221,226,227,228,229,230,231,239,245,246,249,251,265,286,295,296,297,300,302,304,312,316,],[53,-59,-58,-178,53,-57,-179,53,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,53,-73,-69,53,-77,-80,-120,-75,139,-124,-108,53,53,53,53,-141,53,-145,-61,-144,-143,-146,-140,-142,-127,-98,-97,53,-104,-100,-107,-99,-106,-101,-102,-103,-105,53,-121,-114,-111,-112,-110,-113,53,-118,-119,53,-117,-180,-191,53,139,-85,53,-109,-116,53,53,53,53,-181,53,-192,53,-62,53,53,53,-82,53,53,-56,53,53,53,53,53,53,-65,-83,53,]),'DECREASE':([4,11,15,19,30,35,36,42,44,52,112,182,184,226,228,230,304,],[-59,-58,-56,-60,-178,-57,-179,-17,114,-56,-61,-180,-191,-181,-192,-62,-65,]),'ELSIF':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,83,96,112,118,132,152,182,184,193,194,201,205,207,208,209,226,228,230,233,242,246,247,248,289,304,311,312,314,315,330,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-151,-128,-61,-127,-121,-152,-180,-191,239,-149,-96,-85,249,-109,-116,-181,-192,-62,-129,-150,-82,-91,286,-88,-65,239,-83,-89,-93,-94,]),'ASSIGN':([4,11,15,19,30,35,36,42,44,52,88,94,106,112,147,150,156,157,158,160,161,163,164,165,166,167,168,169,170,171,173,182,184,197,218,219,226,228,230,298,299,303,304,323,324,],[-59,-58,-56,-60,-178,-57,-179,-17,116,-56,-15,179,199,-61,-169,213,-28,199,-36,-37,-46,-35,-32,-45,-27,-33,-29,-40,-34,-30,-31,-180,-191,199,-16,-44,-181,-192,-62,-39,-38,-47,-65,-54,-49,]),'LESSEQ':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,126,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'ARRAY':([42,88,90,106,162,179,218,275,301,310,],[-17,-15,172,172,172,172,-16,172,172,172,]),'LESS':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,130,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'THEN':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,103,104,112,118,132,134,182,184,201,205,208,209,226,228,230,246,283,288,289,304,312,313,314,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-90,194,-61,-127,-121,206,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,194,206,-88,-65,-83,206,-89,]),'WHILE':([4,5,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,145,146,148,149,158,160,163,164,167,170,173,182,184,201,205,208,209,226,228,230,246,253,255,289,291,293,298,299,304,312,314,317,320,331,],[-59,86,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,86,-164,-166,-165,-36,-37,-35,-32,-33,-34,-31,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-175,-174,-88,-176,-167,-39,-38,-65,-83,-89,-168,-172,-173,]),'DIFF':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,128,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'MODCREASE':([4,11,15,19,30,35,36,42,44,52,112,182,184,226,228,230,304,],[-59,-58,-56,-60,-178,-57,-179,-17,115,-56,-61,-180,-191,-181,-192,-62,-65,]),'ICONST':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,222,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[59,59,59,-122,59,59,59,-123,59,59,59,59,-141,59,-145,-144,-143,-146,-140,-142,-98,-97,59,-104,-100,-107,-99,-106,-101,-102,-103,-105,59,-114,-111,-112,-110,-113,59,-118,-119,59,-117,59,59,59,59,59,59,269,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'EXIT':([0,1,5,7,13,17,26,29,37,82,83,96,97,100,152,153,154,175,177,191,194,195,215,232,233,235,240,242,279,284,309,],[28,-5,28,-8,-4,28,-6,-7,-2,28,-151,-128,-3,28,-152,28,28,-9,-23,28,28,-18,28,-201,-129,28,28,28,-204,28,-205,]),'MOD':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,59,60,62,63,64,65,68,70,72,73,74,75,77,79,112,118,132,182,184,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-124,142,-61,-127,-121,-180,-191,-85,142,-116,-181,-192,-62,-82,-56,-65,-83,]),'RESULT':([0,1,5,7,13,17,26,29,37,82,83,96,97,100,152,153,154,175,177,191,194,195,215,232,233,235,240,242,279,284,309,],[41,-5,41,-8,-4,41,-6,-7,-2,41,-151,-128,-3,41,-152,41,41,-9,-23,41,41,-18,41,-201,-129,41,41,41,-204,41,-205,]),'RETURNS':([237,276,308,],[281,-206,-207,]),'COMMA':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,88,89,90,91,92,93,94,106,112,118,132,156,157,158,160,161,163,164,165,166,167,168,169,170,171,173,180,181,182,183,184,185,186,187,201,205,208,209,217,218,219,223,224,225,226,228,230,244,246,263,264,266,267,270,271,272,275,277,278,289,298,299,303,304,305,306,312,314,321,322,323,324,325,326,327,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-15,-10,159,176,-24,178,159,159,-61,-127,-121,-28,-12,-36,-37,-46,-35,-32,-45,-27,-33,-29,-40,-34,-30,-31,-184,-182,-180,227,-191,227,-63,229,-96,-85,-109,-116,-13,-16,-44,-11,-25,-26,-181,-192,-62,-14,-82,-52,-50,302,-53,-183,-64,-43,159,-208,307,-88,-39,-38,-47,-65,-211,-210,-83,-89,-41,-184,-54,-49,-51,-212,-209,]),'SCONST':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[48,48,48,-122,48,48,48,-123,48,48,48,48,-141,48,-145,-144,-143,-146,-140,-142,-98,-97,48,-104,-100,-107,-99,-106,-101,-102,-103,-105,48,-114,-111,-112,-110,-113,48,-118,-119,48,-117,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'OR':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,123,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'LENGTH':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[32,-5,32,32,-8,-4,32,-6,-7,32,-2,32,32,-122,32,32,32,-123,32,-151,32,32,-128,-3,32,32,32,-141,32,-145,-144,-143,-146,-140,-142,-98,-97,32,-104,-100,-107,-99,-106,-101,-102,-103,-105,32,-114,-111,-112,-110,-113,32,-118,-119,32,-117,-152,32,32,-9,-23,32,32,-18,32,32,32,32,32,32,32,32,32,32,-201,-129,32,32,32,32,32,32,32,-204,32,32,32,32,32,32,32,-205,32,]),'NULL':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[73,73,73,-122,73,73,73,-123,73,73,73,73,-141,73,-145,-144,-143,-146,-140,-142,-98,-97,73,-104,-100,-107,-99,-106,-101,-102,-103,-105,73,-114,-111,-112,-110,-113,73,-118,-119,73,-117,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'IN':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,147,150,182,184,201,205,208,209,211,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,124,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-169,212,-180,-191,-96,-85,-109,-116,252,-181,-192,-62,-82,-56,-65,-83,]),'DIVCREASE':([4,11,15,19,30,35,36,42,44,52,112,182,184,226,228,230,304,],[-59,-58,-56,-60,-178,-57,-179,-17,111,-56,-61,-180,-191,-181,-192,-62,-65,]),'CHAR':([42,88,90,106,162,179,212,218,221,252,275,301,302,310,],[-17,-15,160,160,160,160,160,-16,160,160,160,160,160,160,]),'LPAREN':([3,8,9,10,15,20,22,32,33,34,39,41,42,43,52,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,156,158,160,163,164,167,169,170,173,192,199,206,213,216,220,221,227,229,231,239,245,249,251,253,254,263,265,281,286,291,295,296,297,298,299,300,302,316,],[67,-196,-194,-199,95,98,-195,-198,67,-193,-200,67,-17,-197,95,-122,67,67,67,-123,67,67,67,67,-141,67,-145,-144,-143,-146,-140,-142,-98,-97,67,-104,-100,-107,-99,-106,-101,-102,-103,-105,67,-114,-111,-112,-110,-113,67,-118,-119,67,-117,216,-36,-37,-35,-32,-33,220,-34,-31,236,67,67,67,67,67,67,67,67,67,67,67,67,67,216,220,216,300,310,67,216,67,67,67,-39,-38,67,67,67,]),'DO':([0,1,5,7,13,17,26,29,37,82,83,96,97,100,152,153,154,175,177,191,194,195,215,232,233,235,240,242,279,284,309,],[5,-5,5,-8,-4,5,-6,-7,-2,5,-151,-128,-3,5,-152,5,5,-9,-23,5,5,-18,5,-201,-129,5,5,5,-204,5,-205,]),'NUM':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[22,-5,22,22,-8,-4,22,-6,-7,22,-2,22,22,-122,22,22,22,-123,22,-151,22,22,-128,-3,22,22,22,-141,22,-145,-144,-143,-146,-140,-142,-98,-97,22,-104,-100,-107,-99,-106,-101,-102,-103,-105,22,-114,-111,-112,-110,-113,22,-118,-119,22,-117,-152,22,22,-9,-23,22,22,-18,22,22,22,22,22,22,22,22,22,22,-201,-129,22,22,22,22,22,22,22,-204,22,22,22,22,22,22,22,-205,22,]),'GREATER':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,129,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'CCONST':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[54,54,54,-122,54,54,54,-123,54,54,54,54,-141,54,-145,-144,-143,-146,-140,-142,-98,-97,54,-104,-100,-107,-99,-106,-101,-102,-103,-105,54,-114,-111,-112,-110,-113,54,-118,-119,54,-117,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'IF':([0,1,3,5,7,13,17,26,29,33,37,41,67,71,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,131,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[33,-5,71,33,-8,-4,33,-6,-7,71,-2,71,71,71,33,-151,71,71,-128,-3,71,71,33,-141,71,-145,-144,-143,-146,-140,-142,71,-152,33,33,-9,-23,33,33,-18,71,71,71,33,71,71,71,71,71,71,-201,-129,33,71,33,33,71,71,71,-204,33,71,71,71,71,71,71,-205,71,]),'LOC':([42,156,158,160,161,163,164,165,166,167,168,169,170,171,173,219,298,299,303,305,323,324,328,],[-17,-28,-36,-37,-46,-35,-32,-45,-27,-33,-29,-40,-34,-30,-31,-44,-39,-38,-47,326,-54,-49,333,]),'FALSE':([3,33,41,53,66,67,71,78,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[72,72,72,-122,72,72,72,-123,72,72,72,72,-141,72,-145,-144,-143,-146,-140,-142,-98,-97,72,-104,-100,-107,-99,-106,-101,-102,-103,-105,72,-114,-111,-112,-110,-113,72,-118,-119,72,-117,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'PROC':([100,],[192,]),'$end':([1,7,13,17,26,29,37,40,96,97,175,177,195,232,233,],[-5,-8,-4,-1,-6,-7,-2,0,-128,-3,-9,-23,-18,-201,-129,]),'TO':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,255,256,257,289,292,294,304,312,314,318,319,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-174,296,-170,-88,316,296,-65,-83,-89,-55,-171,]),'SYN':([0,1,7,13,17,26,29,37,96,97,175,177,191,195,232,233,235,279,309,],[38,-5,-8,-4,38,-6,-7,-2,-128,-3,-9,-23,38,-18,-201,-129,38,-204,-205,]),'REF':([42,88,90,106,162,179,218,275,301,310,],[-17,-15,162,162,162,162,-16,162,162,162,]),'GREATEREQ':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,265,304,312,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,122,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-56,-65,-83,]),'PRINT':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[39,-5,39,39,-8,-4,39,-6,-7,39,-2,39,39,-122,39,39,39,-123,39,-151,39,39,-128,-3,39,39,39,-141,39,-145,-144,-143,-146,-140,-142,-98,-97,39,-104,-100,-107,-99,-106,-101,-102,-103,-105,39,-114,-111,-112,-110,-113,39,-118,-119,39,-117,-152,39,39,-9,-23,39,39,-18,39,39,39,39,39,39,39,39,39,39,-201,-129,39,39,39,39,39,39,39,-204,39,39,39,39,39,39,39,-205,39,]),'DOWN':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,147,150,182,184,201,205,208,209,226,228,230,246,255,256,257,289,294,304,312,314,318,319,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-169,211,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-174,292,-170,-88,292,-65,-83,-89,-55,-171,]),'SEMI':([2,3,4,11,12,16,18,19,21,23,24,30,31,35,36,42,45,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,69,70,72,73,74,75,76,77,79,80,84,87,89,91,92,93,101,102,103,105,107,108,112,118,132,145,146,148,149,151,155,156,157,158,160,161,163,164,165,166,167,168,169,170,171,173,182,184,189,190,196,198,200,201,205,208,209,210,214,217,219,223,224,225,226,228,230,234,237,241,243,244,246,253,255,258,274,276,280,282,289,291,293,298,299,303,304,308,312,314,317,320,323,324,331,332,334,],[-135,-187,-59,-58,-136,96,-131,-133,-137,-134,-138,-178,-132,-57,-179,-17,-190,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-188,-69,-77,-80,-120,-75,-95,-124,-108,-157,153,-161,-10,175,-24,177,-185,-186,-90,195,-19,-189,-61,-127,-121,-162,-164,-166,-165,-159,-177,-28,-12,-36,-37,-46,-35,-32,-45,-27,-33,-29,-40,-34,-30,-31,-180,-191,232,233,-20,-21,-139,-96,-85,-109,-116,-163,-158,-13,-44,-11,-25,-26,-181,-192,-62,-202,279,-147,-22,-14,-82,-175,-174,-160,-203,-206,309,-148,-88,-176,-167,-39,-38,-47,-65,-207,-83,-89,-168,-172,-54,-49,-173,-213,-214,]),'BY':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,112,118,132,182,184,201,205,208,209,226,228,230,246,255,256,257,289,304,312,314,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-61,-127,-121,-180,-191,-96,-85,-109,-116,-181,-192,-62,-82,-174,295,-170,-88,-65,-83,-89,]),'UPPER':([0,1,3,5,7,13,17,26,29,33,37,41,51,53,66,67,71,78,82,83,86,95,96,97,98,99,100,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,152,153,154,175,177,191,194,195,199,206,213,215,216,220,221,227,229,231,232,233,235,239,240,242,245,249,251,279,284,286,295,296,297,300,302,309,316,],[8,-5,8,8,-8,-4,8,-6,-7,8,-2,8,8,-122,8,8,8,-123,8,-151,8,8,-128,-3,8,8,8,-141,8,-145,-144,-143,-146,-140,-142,-98,-97,8,-104,-100,-107,-99,-106,-101,-102,-103,-105,8,-114,-111,-112,-110,-113,8,-118,-119,8,-117,-152,8,8,-9,-23,8,8,-18,8,8,8,8,8,8,8,8,8,8,-201,-129,8,8,8,8,8,8,8,-204,8,8,8,8,8,8,8,-205,8,]),'ID':([0,1,3,4,5,6,7,11,13,14,17,26,28,29,30,33,35,36,37,38,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,81,82,83,86,88,90,95,96,97,98,99,100,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,152,153,154,159,162,175,176,177,178,179,182,184,191,194,195,196,198,199,201,205,206,208,209,212,213,215,216,218,220,221,226,227,228,229,230,231,232,233,235,236,239,240,242,243,244,245,246,249,251,252,275,279,284,286,289,295,296,297,300,301,302,304,307,309,310,312,314,316,],[42,-5,42,-59,42,42,-8,-58,-4,42,42,-6,42,-7,-178,42,-57,-179,-2,42,42,-17,-126,-125,-81,-67,-70,42,-56,-122,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,42,42,-73,-69,42,-77,-80,-120,-75,-95,-124,-123,-108,42,42,-151,42,-15,42,42,-128,-3,42,42,42,42,42,-19,-141,42,-145,-61,-144,-143,-146,-140,-142,-127,-98,-97,42,-104,-100,-107,-99,-106,-101,-102,-103,-105,42,-121,-114,-111,-112,-110,-113,42,-118,-119,42,-117,-152,42,42,42,42,-9,42,-23,42,42,-180,-191,42,42,-18,-20,-21,42,-96,-85,42,-109,-116,42,42,42,42,-16,42,42,-181,42,-192,42,-62,42,-201,-129,42,42,42,42,42,-22,-14,42,-82,42,42,42,42,-204,42,42,-88,42,42,42,42,42,42,-65,42,-205,42,-83,-89,42,]),'ELSE':([4,11,30,35,36,42,46,47,48,49,50,52,54,55,56,57,58,59,60,62,63,64,65,68,70,72,73,74,75,76,77,79,83,96,112,118,132,152,182,184,193,194,201,205,207,208,209,226,228,230,233,242,246,247,248,289,304,311,312,314,315,330,],[-59,-58,-178,-57,-179,-17,-126,-125,-81,-67,-70,-56,-79,-72,-60,-87,-86,-76,-71,-78,-74,-68,-115,-73,-69,-77,-80,-120,-75,-95,-124,-108,-151,-128,-61,-127,-121,-152,-180,-191,240,-149,-96,-85,251,-109,-116,-181,-192,-62,-129,-150,-82,-91,251,-88,-65,240,-83,-89,-93,-94,]),'CHARS':([42,88,90,106,162,179,218,275,301,310,],[-17,-15,174,174,174,174,-16,174,174,174,]),'NOT':([3,33,41,67,71,86,95,98,99,109,110,111,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[78,78,78,78,78,78,78,78,78,-141,78,-145,-144,-143,-146,-140,-142,-98,-97,78,-104,-100,-107,-99,-106,-101,-102,-103,-105,78,-114,-111,-112,-110,-113,78,-118,-119,78,-117,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'membership_operator':([58,],[119,]),'expression':([3,33,41,67,71,86,95,98,99,110,131,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[45,103,45,133,103,103,180,180,186,200,202,244,247,255,259,259,259,180,271,272,103,272,103,290,103,318,255,272,322,259,255,]),'return_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'arithmetic_additive_operator':([76,201,],[138,138,]),'primitive_value':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'relational_operator':([58,],[120,]),'formal_parameter_list':([236,],[278,]),'exit_label_id':([28,],[101,]),'referenced_location':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'step_value':([256,],[294,]),'array_element':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'index_mode':([221,302,],[264,325,]),'result_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'parameter':([95,98,227,300,],[181,181,270,181,]),'literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'character_literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'range_enumeration':([81,],[148,]),'conditional_expression':([3,33,41,67,71,86,95,98,99,110,131,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[16,16,16,16,190,16,190,16,16,16,16,16,16,16,]),'start_value':([213,],[256,]),'action_statement':([0,5,17,82,153,191,194,215,235,240,242,284,],[7,83,7,152,83,7,83,152,7,83,152,152,]),'bracketed_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'boolean_literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'identifier':([0,3,5,6,14,17,28,33,38,41,51,66,67,71,81,82,86,90,95,98,99,100,105,106,110,121,131,140,143,153,154,159,162,176,178,179,191,194,199,206,212,213,215,216,220,221,227,229,231,235,236,239,240,242,245,249,251,252,275,284,286,295,296,297,300,301,302,307,310,316,],[15,52,15,88,88,15,102,52,88,52,52,52,52,52,147,15,52,169,52,52,52,52,88,169,52,52,52,52,52,15,52,218,169,88,88,169,15,15,52,52,254,52,15,52,52,265,52,52,52,15,88,52,15,15,52,52,52,254,169,15,52,52,52,52,52,169,265,88,169,52,]),'upper_bound':([231,245,297,],[273,285,321,]),'integer_literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'arithmetic_multiplicative_operator':([79,208,],[143,143,]),'value_array_element':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'literal_range':([216,220,221,300,302,],[261,262,267,262,267,]),'exit_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'do_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'element_mode':([301,],[324,]),'mode':([90,106,162,179,275,301,310,],[157,197,219,225,305,323,328,]),'expression_list':([99,],[187,]),'string_length':([222,],[268,]),'operand3':([3,33,41,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[65,65,65,65,65,65,65,65,65,65,65,65,65,209,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'monadic_operator':([3,33,41,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'step_enumeration':([81,],[149,]),'reference_mode':([90,106,162,179,275,301,310,],[168,168,168,168,168,168,168,]),'initialization':([106,157,197,],[198,217,243,]),'operand2':([3,33,41,67,71,86,95,98,99,110,121,131,140,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[79,79,79,79,79,79,79,79,79,79,79,79,208,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'for_control':([81,],[145,]),'boolean_mode':([90,106,162,179,212,221,252,275,301,302,310,],[164,164,164,164,164,164,164,164,164,164,164,]),'procedure_definition':([100,],[189,]),'integer_expression':([131,295,],[204,319,]),'character_mode':([90,106,162,179,212,221,252,275,301,302,310,],[167,167,167,167,167,167,167,167,167,167,167,]),'builtin_call':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operator1':([58,],[121,]),'index_mode_list':([221,],[266,]),'character_string_literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operand1':([3,33,41,67,71,86,95,98,99,110,121,131,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[76,76,76,76,76,76,76,76,76,76,201,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'newmode_list':([14,],[93,]),'loop_counter':([81,],[150,]),'statement':([0,17,191,235,],[37,97,37,97,]),'synonym_statement':([0,17,191,235,],[1,1,1,1,]),'assigning_operator':([44,],[110,]),'discrete_mode':([90,106,162,179,212,221,252,275,301,302,310,],[156,156,156,156,253,263,291,156,156,263,156,]),'dereferenced_reference':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'parameter_spec':([275,],[306,]),'discrete_expression':([213,296,316,],[257,320,331,]),'array_slice':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'operator2':([76,201,],[140,140,]),'formal_parameter':([236,307,],[277,327,]),'parenthesized_expression':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'declaration_statement':([0,17,191,235,],[13,13,13,13,]),'action_statement_list':([5,153,194,240,],[82,215,242,284,]),'parameter_list':([95,98,300,],[183,185,183,]),'result_spec':([237,],[280,]),'then_clause':([104,283,],[193,311,]),'statement_list':([0,191,],[17,235,]),'control_part':([5,],[84,]),'call_action':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[19,56,19,19,56,56,56,56,56,56,19,56,56,56,56,19,56,56,56,56,56,19,19,19,19,56,56,56,19,56,56,56,56,56,56,19,56,19,19,56,56,56,19,56,56,56,56,56,56,56,]),'result':([3,41,],[69,108,]),'builtin_name':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'discrete_range_mode':([90,106,162,179,212,221,252,275,301,302,310,],[170,170,170,170,170,170,170,170,170,170,170,]),'if_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'composite_mode':([90,106,162,179,275,301,310,],[171,171,171,171,171,171,171,]),'operand0':([3,33,41,67,71,86,95,98,99,110,131,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'procedure_statement':([0,17,191,235,],[29,29,29,29,]),'closed_dyadic_operator':([44,],[109,]),'array_location':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'newmode_statement':([0,17,191,235,],[26,26,26,26,]),'label_id':([0,5,17,82,153,191,194,215,235,240,242,284,],[27,85,27,85,85,27,85,85,27,85,85,85,]),'declaration':([6,176,],[89,223,]),'program':([0,],[40,]),'identifier_list':([6,14,38,105,176,178,236,307,],[90,94,106,106,90,94,275,275,]),'empty_literal':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'array_primitive_value':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'elsif_expression':([207,],[248,]),'assignment_action':([0,5,17,82,100,153,154,191,194,215,235,240,242,284,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'mode_definition':([14,178,],[92,224,]),'string_concatenation_operator':([76,201,],[136,136,]),'boolean_expression':([33,71,86,239,249,286,],[104,134,155,283,288,313,]),'else_clause':([193,311,],[238,329,]),'synonym_definition':([38,105,],[107,196,]),'else_expression':([207,248,],[250,287,]),'array_mode':([90,106,162,179,275,301,310,],[161,161,161,161,161,161,161,]),'value_array_slice':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'operand4':([3,33,41,66,67,71,86,95,98,99,110,121,131,140,143,199,206,213,216,220,221,227,229,231,239,245,249,251,286,295,296,297,300,302,316,],[74,74,74,132,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'lower_bound':([99,131,216,220,221,300,302,],[188,203,260,260,260,260,260,]),'then_expression':([134,288,313,],[207,315,330,]),'string_mode':([90,106,162,179,275,301,310,],[165,165,165,165,165,165,165,]),'end_value':([256,294,],[293,317,]),'mode_name':([90,106,162,179,275,301,310,],[166,166,166,166,166,166,166,]),'integer_mode':([90,106,162,179,212,221,252,275,301,302,310,],[173,173,173,173,173,173,173,173,173,173,173,]),'formal_procedure_head':([100,],[191,]),'synonym_list':([38,],[105,]),'iteration':([81,],[146,]),'procedure_call':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'while_control':([5,145,],[87,210,]),'parenthesis_gambiarra':([192,],[237,]),'declaration_list':([6,],[91,]),'location':([0,3,5,17,33,41,51,66,67,71,82,86,95,98,99,100,110,121,131,140,143,153,154,191,194,199,206,213,215,216,220,221,227,229,231,235,239,240,242,245,249,251,284,286,295,296,297,300,302,316,],[44,77,44,44,77,77,118,77,77,77,44,77,77,77,77,44,77,77,77,77,77,44,44,44,44,77,77,77,44,77,77,77,77,77,77,44,77,44,44,77,77,77,44,77,77,77,77,77,77,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list initialization','synonym_definition',2,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode initialization','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('string_length -> ICONST','string_length',1,'p_string_length','parser.py',223),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',423),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',424),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',433),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',439),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',445),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',469),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',470),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',475),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',487),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',492),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',493),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',501),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',502),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',507),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',514),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',518),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',519),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',526),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',533),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',534),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',542),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',548),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',550),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',555),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',560),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',561),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',570),
  ('action -> bracketed_action','action',1,'p_action','parser.py',576),
  ('action -> assignment_action','action',1,'p_action','parser.py',577),
  ('action -> call_action','action',1,'p_action','parser.py',578),
  ('action -> exit_action','action',1,'p_action','parser.py',579),
  ('action -> return_action','action',1,'p_action','parser.py',580),
  ('action -> result_action','action',1,'p_action','parser.py',581),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',586),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',592),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',611),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',617),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',626),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',627),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',636),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',637),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',646),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',647),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',654),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',655),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',657),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',672),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',673),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',674),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',675),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',689),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',691),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',700),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',705),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',711),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',712),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',719),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',724),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',729),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',734),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',735),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',743),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',748),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',749),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',756),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',760),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',761),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',766),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',767),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',774),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',775),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',782),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',790),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',794),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',798),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',799),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',806),
  ('result -> expression','result',1,'p_result','parser.py',810),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',815),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',816),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',823),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',830),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',834),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',838),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',839),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',846),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',847),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',855),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',856),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',863),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',871),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',875),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',876),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',888),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',889),
]
