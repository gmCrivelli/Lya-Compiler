
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE MULVAL DIVVAL DIFF MOD MODVAL NOT ICONST CCONST SCONST TO BOOL PROC ELSE DOWN EXIT IN RESULT WHILE OD TRUE NULL THEN BY RETURNS FALSE RETURN INT TYPE ABS CHAR LOC ELSIF REF LENGTH FI ASC NUM IF FOR END LOWER PRINT READ SYN DO ARRAY CHARS UPPER DCLprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_listsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_value\n            | integer_literalreferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part :  for_control\n                        | while_control\n                        | for_control while_controlfor_control :  FOR iterationiteration :  step_enumeration\n                     | range_enumerationstep_enumeration :  loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_value\n                            | loop_counter ASSIGN start_value DOWN end_value\n                            | loop_counter ASSIGN start_value step_value DOWN end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value :  TO discrete_expressiondiscrete_expression :  expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call :  identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name :  ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC LPAREN RPAREN SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI\n                                 | PROC LPAREN RPAREN result_spec SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMIformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode parameter_attributeparameter_attribute :  LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode result_attribute RPARENresult_attribute :  LOC'
    
_lr_action_items = {'WHILE':([2,6,8,20,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,110,131,153,154,159,161,162,164,171,172,182,189,190,191,197,210,211,219,220,224,240,246,248,266,283,286,295,297,305,309,310,313,316,325,328,334,336,338,347,],[-60,-17,-187,104,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,104,-128,-135,-32,-38,-35,-34,-33,-37,-36,-199,-174,-173,-172,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-184,-183,-73,-95,-39,-40,-185,-175,-67,-96,-90,-176,-182,-177,-178,]),'ABS':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[4,-60,4,4,-17,-5,-187,-2,4,-62,-61,-8,-58,-188,-4,-59,-6,4,4,-7,4,-3,-115,-77,-78,4,4,-102,-63,-76,-131,4,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,4,-150,-149,-151,4,-152,-154,-153,-64,-148,-18,-19,4,4,-159,4,4,4,-136,4,-124,-125,4,-126,4,-128,-119,-117,-120,4,-121,-118,4,-105,-112,-107,-111,-110,-113,-106,-114,4,-104,-109,-108,-135,-9,4,-20,-24,-199,4,-160,4,-189,4,4,4,-70,-123,4,4,4,4,-116,-92,-103,4,4,4,4,-21,-23,4,4,-200,4,4,-190,4,-65,-209,-137,4,4,4,4,4,-89,-22,-73,-95,4,4,4,4,4,4,-67,-212,-96,-90,-213,-214,-215,]),'TO':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,131,153,182,197,202,210,211,219,220,224,240,246,248,266,284,285,286,295,297,311,315,316,325,328,335,337,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-128,-135,-199,-189,-56,-70,-123,-116,-92,-103,-200,-190,-65,-89,312,-180,-183,-73,-95,312,312,-67,-96,-90,312,-181,]),'EQUAL':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,152,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'CHARS':([6,84,86,97,163,179,227,291,306,344,],[-17,156,-15,156,156,156,-16,156,156,156,]),'RPAREN':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,103,113,131,139,153,154,155,157,158,159,161,162,164,165,167,169,170,171,172,182,183,184,185,197,198,210,211,219,220,224,228,240,246,248,250,255,266,270,278,280,290,292,295,297,303,305,308,309,316,319,320,325,328,329,330,331,333,339,342,343,349,351,352,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,182,197,-128,220,-135,-32,-47,-41,-31,-38,-35,-34,-33,-46,-28,-29,-30,-37,-36,-199,-191,240,-193,-189,246,-70,-123,-116,-92,-103,-45,-200,-190,-65,293,-44,-89,305,309,-192,318,-216,-73,-95,-48,-39,197,-40,-67,-219,-218,-96,-90,-42,-50,-55,-193,-217,-220,-221,350,-224,353,]),'EXIT':([0,2,3,6,7,8,9,20,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,108,109,115,118,129,131,153,174,178,181,182,192,193,196,197,207,210,211,212,216,219,220,224,234,235,240,244,246,248,249,251,252,259,266,279,295,297,316,321,325,328,340,345,348,],[33,-60,33,-17,-5,-187,-2,33,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-159,33,-136,33,33,-128,-135,-9,-20,-24,-199,33,-160,33,-189,33,-70,-123,33,33,-116,-92,-103,-21,-23,-200,33,-190,-65,-209,-137,33,33,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'IF':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,129,131,140,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[5,-60,5,54,-17,-5,-187,-2,5,-62,-61,-8,-58,-188,-4,-59,-6,54,54,-7,54,-3,-115,-77,-78,54,-102,-63,-76,-131,54,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-150,-149,-151,54,-152,-154,-153,-64,-148,-18,-19,54,54,-159,5,54,54,-136,5,5,-128,54,-135,-9,54,-20,-24,-199,5,-160,5,-189,5,54,54,-70,-123,5,54,5,54,-116,-92,-103,54,54,54,54,-21,-23,54,54,-200,54,5,-190,54,-65,-209,-137,5,5,54,54,54,-89,-22,-73,-95,54,54,54,54,54,54,-67,-212,-96,-90,-213,-214,-215,]),'ARROW':([2,5,6,8,10,14,23,24,26,30,34,36,43,45,47,53,54,56,58,59,67,68,76,88,89,90,91,92,93,94,95,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,182,197,203,208,209,210,215,217,226,229,231,232,236,239,240,243,246,247,248,263,264,265,275,295,299,304,307,308,312,314,316,],[-60,83,-17,-187,-63,95,-62,-61,-58,-57,-188,-59,83,83,83,83,83,-63,95,83,-129,-57,-130,-150,-149,-151,83,-152,-154,-153,-64,-148,83,83,83,83,-124,-125,83,-126,-119,-117,-120,83,-121,-118,83,-105,-112,-107,-111,-110,-113,-106,-114,83,-104,-109,-108,95,83,-199,-189,-57,83,83,-70,83,83,83,83,83,83,83,83,-200,83,-190,83,-65,83,83,83,-57,-73,83,83,83,83,83,83,-67,]),'$end':([2,3,6,7,8,9,23,24,25,26,28,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,115,131,153,174,178,181,182,197,210,211,219,220,224,234,235,240,246,248,249,251,266,279,295,297,316,325,328,],[-60,-1,-17,-5,-187,-2,-62,-61,-8,-58,0,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-136,-128,-135,-9,-20,-24,-199,-189,-70,-123,-116,-92,-103,-21,-23,-200,-190,-65,-209,-137,-89,-22,-73,-95,-67,-96,-90,]),'ICONST':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,225,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[79,79,79,79,79,79,79,-129,-130,-150,-149,-151,79,-152,-154,-153,-148,79,79,79,79,-124,-125,79,-126,-119,-117,-120,79,-121,-118,79,-105,-112,-107,-111,-110,-113,-106,-114,79,-104,-109,-108,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'IN':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,187,188,197,210,211,219,220,224,240,241,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,148,-64,-128,-135,-199,242,-179,-189,-70,-123,-116,-92,-103,-200,281,-190,-65,-89,-57,-73,-67,-90,]),'READ':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[44,-60,44,44,-17,-5,-187,-2,44,-62,-61,-8,-58,-188,-4,-59,-6,44,44,-7,44,-3,-115,-77,-78,44,44,-102,-63,-76,-131,44,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,44,-150,-149,-151,44,-152,-154,-153,-64,-148,-18,-19,44,44,-159,44,44,44,-136,44,-124,-125,44,-126,44,-128,-119,-117,-120,44,-121,-118,44,-105,-112,-107,-111,-110,-113,-106,-114,44,-104,-109,-108,-135,-9,44,-20,-24,-199,44,-160,44,-189,44,44,44,-70,-123,44,44,44,44,-116,-92,-103,44,44,44,44,-21,-23,44,44,-200,44,44,-190,44,-65,-209,-137,44,44,44,44,44,-89,-22,-73,-95,44,44,44,44,44,44,-67,-212,-96,-90,-213,-214,-215,]),'ID':([0,2,3,5,6,7,8,9,13,15,16,20,23,24,25,26,33,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,103,104,105,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,160,163,173,174,176,178,179,180,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,227,229,231,232,234,235,236,239,240,242,243,244,246,247,248,249,250,251,252,259,263,264,265,266,279,281,291,295,297,299,304,306,307,308,312,314,316,317,321,325,328,340,344,345,348,],[6,-60,6,6,-17,-5,-187,-2,6,6,6,6,-62,-61,-8,-58,6,-188,-4,-59,-6,6,6,-7,6,-3,-115,-77,-78,6,6,-102,-63,-76,-131,6,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,6,6,-15,-150,-149,-151,6,-152,-154,-153,-64,-148,6,6,-19,6,6,6,-159,6,6,6,-136,6,-124,-125,6,-126,6,-128,-119,-117,-120,6,-121,-118,6,-105,-112,-107,-111,-110,-113,-106,-114,6,-104,-109,-108,-135,6,6,6,-9,6,-20,6,6,-24,-199,6,-160,6,-189,6,6,6,-70,-123,6,6,6,6,-116,-92,-103,6,-16,6,6,6,-21,-23,6,6,-200,6,6,6,-190,6,-65,-209,6,-137,6,6,6,6,6,-89,-22,6,6,-73,-95,6,6,6,6,6,6,6,-67,6,-212,-96,-90,-213,6,-214,-215,]),'UPPER':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[12,-60,12,12,-17,-5,-187,-2,12,-62,-61,-8,-58,-188,-4,-59,-6,12,12,-7,12,-3,-115,-77,-78,12,12,-102,-63,-76,-131,12,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,12,-150,-149,-151,12,-152,-154,-153,-64,-148,-18,-19,12,12,-159,12,12,12,-136,12,-124,-125,12,-126,12,-128,-119,-117,-120,12,-121,-118,12,-105,-112,-107,-111,-110,-113,-106,-114,12,-104,-109,-108,-135,-9,12,-20,-24,-199,12,-160,12,-189,12,12,12,-70,-123,12,12,12,12,-116,-92,-103,12,12,12,12,-21,-23,12,12,-200,12,12,-190,12,-65,-209,-137,12,12,12,12,12,-89,-22,-73,-95,12,12,12,12,12,12,-67,-212,-96,-90,-213,-214,-215,]),'DCL':([0,2,3,6,7,8,9,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,115,131,153,174,178,181,182,197,207,210,211,219,220,224,234,235,240,246,248,249,251,252,266,279,295,297,316,321,325,328,340,345,348,],[13,-60,13,-17,-5,-187,-2,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-136,-128,-135,-9,-20,-24,-199,-189,13,-70,-123,-116,-92,-103,-21,-23,-200,-190,-65,-209,-137,13,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'SYN':([0,2,3,6,7,8,9,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,115,131,153,174,178,181,182,197,207,210,211,219,220,224,234,235,240,246,248,249,251,252,266,279,295,297,316,321,325,328,340,345,348,],[15,-60,15,-17,-5,-187,-2,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-136,-128,-135,-9,-20,-24,-199,-189,15,-70,-123,-116,-92,-103,-21,-23,-200,-190,-65,-209,-137,15,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'TYPE':([0,2,3,6,7,8,9,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,115,131,153,174,178,181,182,197,207,210,211,219,220,224,234,235,240,246,248,249,251,252,266,279,295,297,316,321,325,328,340,345,348,],[16,-60,16,-17,-5,-187,-2,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-136,-128,-135,-9,-20,-24,-199,-189,16,-70,-123,-116,-92,-103,-21,-23,-200,-190,-65,-209,-137,16,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'ARRAY':([6,84,86,97,163,179,227,291,306,344,],[-17,166,-15,166,166,166,-16,166,166,166,]),'INT':([6,84,86,97,163,179,227,229,242,281,291,306,307,344,],[-17,172,-15,172,172,172,-16,172,172,172,172,172,172,172,]),'PRINT':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[41,-60,41,41,-17,-5,-187,-2,41,-62,-61,-8,-58,-188,-4,-59,-6,41,41,-7,41,-3,-115,-77,-78,41,41,-102,-63,-76,-131,41,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,41,-150,-149,-151,41,-152,-154,-153,-64,-148,-18,-19,41,41,-159,41,41,41,-136,41,-124,-125,41,-126,41,-128,-119,-117,-120,41,-121,-118,41,-105,-112,-107,-111,-110,-113,-106,-114,41,-104,-109,-108,-135,-9,41,-20,-24,-199,41,-160,41,-189,41,41,41,-70,-123,41,41,41,41,-116,-92,-103,41,41,41,41,-21,-23,41,41,-200,41,41,-190,41,-65,-209,-137,41,41,41,41,41,-89,-22,-73,-95,41,41,41,41,41,41,-67,-212,-96,-90,-213,-214,-215,]),'DO':([0,2,3,6,7,8,9,20,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,108,109,115,118,129,131,153,174,178,181,182,192,193,196,197,207,210,211,212,216,219,220,224,234,235,240,244,246,248,249,251,252,259,266,279,295,297,316,321,325,328,340,345,348,],[20,-60,20,-17,-5,-187,-2,20,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-159,20,-136,20,20,-128,-135,-9,-20,-24,-199,20,-160,20,-189,20,-70,-123,20,20,-116,-92,-103,-21,-23,-200,20,-190,-65,-209,-137,20,20,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'THEN':([2,6,8,23,24,26,34,36,49,50,51,52,55,56,57,58,60,61,62,64,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,131,132,153,182,197,210,211,219,220,224,240,246,248,258,266,295,297,301,316,325,326,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,129,-102,-63,-76,-131,-88,-80,-134,-97,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-128,217,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,129,-89,-73,-95,217,-67,-96,217,-90,]),'LENGTH':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[22,-60,22,22,-17,-5,-187,-2,22,-62,-61,-8,-58,-188,-4,-59,-6,22,22,-7,22,-3,-115,-77,-78,22,22,-102,-63,-76,-131,22,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,22,-150,-149,-151,22,-152,-154,-153,-64,-148,-18,-19,22,22,-159,22,22,22,-136,22,-124,-125,22,-126,22,-128,-119,-117,-120,22,-121,-118,22,-105,-112,-107,-111,-110,-113,-106,-114,22,-104,-109,-108,-135,-9,22,-20,-24,-199,22,-160,22,-189,22,22,22,-70,-123,22,22,22,22,-116,-92,-103,22,22,22,22,-21,-23,22,22,-200,22,22,-190,22,-65,-209,-137,22,22,22,22,22,-89,-22,-73,-95,22,22,22,22,22,22,-67,-212,-96,-90,-213,-214,-215,]),'NOT':([5,43,45,47,54,59,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[76,76,76,76,76,76,-150,-149,-151,76,-152,-154,-153,-148,76,76,76,76,-124,-125,76,-126,-119,-117,-120,76,-121,-118,76,-105,-112,-107,-111,-110,-113,-106,-114,76,-104,-109,-108,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'MULCREASE':([2,6,8,10,14,23,24,26,30,34,36,95,182,197,203,210,240,246,248,295,316,],[-60,-17,-187,-63,92,-62,-61,-58,-57,-188,-59,-64,-199,-189,-57,-70,-200,-190,-65,-73,-67,]),'NULL':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[69,69,69,69,69,69,69,-129,-130,-150,-149,-151,69,-152,-154,-153,-148,69,69,69,69,-124,-125,69,-126,-119,-117,-120,69,-121,-118,69,-105,-112,-107,-111,-110,-113,-106,-114,69,-104,-109,-108,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'BOOL':([6,84,86,97,163,179,227,229,242,281,291,306,307,344,],[-17,171,-15,171,171,171,-16,171,171,171,171,171,171,171,]),'LOWER':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[39,-60,39,39,-17,-5,-187,-2,39,-62,-61,-8,-58,-188,-4,-59,-6,39,39,-7,39,-3,-115,-77,-78,39,39,-102,-63,-76,-131,39,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,39,-150,-149,-151,39,-152,-154,-153,-64,-148,-18,-19,39,39,-159,39,39,39,-136,39,-124,-125,39,-126,39,-128,-119,-117,-120,39,-121,-118,39,-105,-112,-107,-111,-110,-113,-106,-114,39,-104,-109,-108,-135,-9,39,-20,-24,-199,39,-160,39,-189,39,39,39,-70,-123,39,39,39,39,-116,-92,-103,39,39,39,39,-21,-23,39,39,-200,39,39,-190,39,-65,-209,-137,39,39,39,39,39,-89,-22,-73,-95,39,39,39,39,39,39,-67,-212,-96,-90,-213,-214,-215,]),'DIVCREASE':([2,6,8,10,14,23,24,26,30,34,36,95,182,197,203,210,240,246,248,295,316,],[-60,-17,-187,-63,94,-62,-61,-58,-57,-188,-59,-64,-199,-189,-57,-70,-200,-190,-65,-73,-67,]),'DIFF':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,151,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'BY':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,284,285,286,295,297,316,325,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,314,-180,-183,-73,-95,-67,-96,-90,]),'CCONST':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[81,81,81,81,81,81,81,-129,-130,-150,-149,-151,81,-152,-154,-153,-148,81,81,81,81,-124,-125,81,-126,-119,-117,-120,81,-121,-118,81,-105,-112,-107,-111,-110,-113,-106,-114,81,-104,-109,-108,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ASC':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[27,-60,27,27,-17,-5,-187,-2,27,-62,-61,-8,-58,-188,-4,-59,-6,27,27,-7,27,-3,-115,-77,-78,27,27,-102,-63,-76,-131,27,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,27,-150,-149,-151,27,-152,-154,-153,-64,-148,-18,-19,27,27,-159,27,27,27,-136,27,-124,-125,27,-126,27,-128,-119,-117,-120,27,-121,-118,27,-105,-112,-107,-111,-110,-113,-106,-114,27,-104,-109,-108,-135,-9,27,-20,-24,-199,27,-160,27,-189,27,27,27,-70,-123,27,27,27,27,-116,-92,-103,27,27,27,27,-21,-23,27,27,-200,27,27,-190,27,-65,-209,-137,27,27,27,27,27,-89,-22,-73,-95,27,27,27,27,27,27,-67,-212,-96,-90,-213,-214,-215,]),'FALSE':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[66,66,66,66,66,66,66,-129,-130,-150,-149,-151,66,-152,-154,-153,-148,66,66,66,66,-124,-125,66,-126,-119,-117,-120,66,-121,-118,66,-105,-112,-107,-111,-110,-113,-106,-114,66,-104,-109,-108,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'OD':([20,108,109,115,192,193,244,251,],[112,-159,194,-136,245,-160,287,-137,]),'MINUS':([2,5,6,8,23,24,26,34,36,43,45,47,49,50,51,54,55,56,57,58,59,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,88,89,90,91,92,93,94,95,96,103,104,113,114,125,126,127,128,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,182,197,208,209,210,211,215,217,219,220,224,226,229,231,232,236,239,240,243,246,247,248,263,264,265,266,275,295,299,304,307,308,312,314,316,328,],[-60,67,-17,-187,-62,-61,-58,-188,-59,67,67,67,-115,-77,-78,67,135,-63,-76,-131,67,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-150,-149,-151,67,-152,-154,-153,-64,-148,67,67,67,67,-124,-125,67,-126,-128,-119,-117,-120,67,-121,-118,67,-105,-112,-107,-111,-110,-113,-106,-114,67,-104,-109,-108,-135,67,-199,-189,67,67,-70,-123,67,67,-116,-92,135,67,67,67,67,67,67,-200,67,-190,67,-65,67,67,67,-89,-57,-73,67,67,67,67,67,67,-67,-90,]),'PROC':([118,],[205,]),'MODCREASE':([2,6,8,10,14,23,24,26,30,34,36,95,182,197,203,210,240,246,248,295,316,],[-60,-17,-187,-63,93,-62,-61,-58,-57,-188,-59,-64,-199,-189,-57,-70,-200,-190,-65,-73,-67,]),'AND':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,147,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'LBRACKET':([1,2,6,8,10,14,23,24,26,30,34,36,50,51,56,57,58,60,61,63,66,68,69,70,72,75,77,78,80,81,95,153,156,166,182,197,203,210,220,240,246,248,266,275,295,316,328,],[47,-60,-17,-187,-63,-74,-62,-61,-58,114,-188,-59,-77,-78,-63,-76,-74,-88,-80,140,-84,114,-87,-85,-75,-79,-81,-82,-91,-86,-64,-74,225,229,-199,-189,114,-70,-92,-200,-190,-65,-89,114,-73,-67,-90,]),'INCREASE':([2,6,8,10,14,23,24,26,30,34,36,95,182,197,203,210,240,246,248,295,316,],[-60,-17,-187,-63,88,-62,-61,-58,-57,-188,-59,-64,-199,-189,-57,-70,-200,-190,-65,-73,-67,]),'GREATEREQ':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,144,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'CHAR':([6,84,86,97,163,179,227,229,242,281,291,306,307,344,],[-17,159,-15,159,159,159,-16,159,159,159,159,159,159,159,]),'RETURN':([0,2,3,6,7,8,9,20,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,108,109,115,118,129,131,153,174,178,181,182,192,193,196,197,207,210,211,212,216,219,220,224,234,235,240,244,246,248,249,251,252,259,266,279,295,297,316,321,325,328,340,345,348,],[43,-60,43,-17,-5,-187,-2,43,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-159,43,-136,43,43,-128,-135,-9,-20,-24,-199,43,-160,43,-189,43,-70,-123,43,43,-116,-92,-103,-21,-23,-200,43,-190,-65,-209,-137,43,43,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'ELSE':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,108,115,129,130,131,153,182,193,197,210,211,212,218,219,220,224,240,246,248,251,260,262,266,295,296,297,316,325,327,328,346,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-159,-136,-157,216,-128,-135,-199,-160,-189,-70,-123,-158,263,-116,-92,-103,-200,-190,-65,-137,-98,263,-89,-73,216,-95,-67,-96,-100,-90,-101,]),'RBRACKET':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,123,124,131,153,154,159,161,162,164,171,172,182,197,200,201,202,210,211,219,220,222,223,224,240,246,248,254,255,256,266,267,268,272,273,274,276,288,289,295,297,302,305,309,316,325,328,329,332,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,210,-71,-128,-135,-32,-38,-35,-34,-33,-37,-36,-199,-189,-66,248,-56,-70,-123,-116,-92,266,-56,-103,-200,-190,-65,295,-44,-72,-89,-49,303,-51,-54,306,-53,-69,316,-73,-95,328,-39,-40,-67,-96,-90,-42,-52,]),'STRCAT':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,137,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-64,-128,-135,-199,-189,-70,-123,-116,-92,137,-200,-190,-65,-89,-57,-73,-67,-90,]),'FOR':([20,],[105,]),'ASSIGN':([2,6,8,10,14,23,24,26,30,34,36,86,95,97,101,154,155,157,158,159,161,162,164,165,167,168,169,170,171,172,177,182,187,188,197,203,210,227,228,240,246,248,295,303,305,309,316,330,331,],[-60,-17,-187,-63,96,-62,-61,-58,-57,-188,-59,-15,-64,176,179,-32,-47,-41,-31,-38,-35,-34,-33,-46,-28,231,-29,-30,-37,-36,236,-199,243,-179,-189,-57,-70,-16,-45,-200,-190,-65,-73,-48,-39,-40,-67,-50,-55,]),'LOC':([6,154,155,157,158,159,161,162,164,165,167,169,170,171,172,228,303,305,309,319,330,331,349,],[-17,-32,-47,-41,-31,-38,-35,-34,-33,-46,-28,-29,-30,-37,-36,-45,-48,-39,-40,343,-50,-55,351,]),'NUM':([0,2,3,5,6,7,8,9,20,23,24,25,26,34,35,36,40,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,90,91,92,93,94,95,96,98,99,103,104,108,109,113,114,115,118,125,126,127,128,129,131,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,174,176,178,181,182,192,193,196,197,207,208,209,210,211,212,215,216,217,219,220,224,226,229,231,232,234,235,236,239,240,243,244,246,247,248,249,251,252,259,263,264,265,266,279,295,297,299,304,307,308,312,314,316,321,325,328,340,345,348,],[37,-60,37,37,-17,-5,-187,-2,37,-62,-61,-8,-58,-188,-4,-59,-6,37,37,-7,37,-3,-115,-77,-78,37,37,-102,-63,-76,-131,37,-88,-80,-134,-132,-84,-129,-57,-87,-85,-127,-75,-94,-122,-79,-130,-81,-82,-83,-133,-86,-93,37,-150,-149,-151,37,-152,-154,-153,-64,-148,-18,-19,37,37,-159,37,37,37,-136,37,-124,-125,37,-126,37,-128,-119,-117,-120,37,-121,-118,37,-105,-112,-107,-111,-110,-113,-106,-114,37,-104,-109,-108,-135,-9,37,-20,-24,-199,37,-160,37,-189,37,37,37,-70,-123,37,37,37,37,-116,-92,-103,37,37,37,37,-21,-23,37,37,-200,37,37,-190,37,-65,-209,-137,37,37,37,37,37,-89,-22,-73,-95,37,37,37,37,37,37,-67,-212,-96,-90,-213,-214,-215,]),'COMMA':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,84,85,86,87,95,97,100,101,102,123,124,131,153,154,155,157,158,159,161,162,164,165,167,168,169,170,171,172,182,183,184,185,197,198,210,211,219,220,224,227,228,230,233,237,238,240,246,248,255,256,266,272,273,274,276,277,280,290,291,292,295,297,303,305,309,316,319,320,325,328,329,330,331,332,333,339,342,343,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,160,173,-15,-10,-64,160,-25,160,180,209,-71,-128,-135,-32,-47,-41,-31,-38,-35,-34,-33,-46,-28,-12,-29,-30,-37,-36,-199,-191,239,-193,-189,239,-70,-123,-116,-92,-103,-16,-45,-13,-11,-27,-26,-200,-190,-65,-44,-72,-89,-51,-54,307,-53,-14,-192,317,160,-216,-73,-95,-48,-39,-40,-67,-219,-218,-96,-90,-42,-50,-55,-52,-193,-217,-220,-221,]),'LESS':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,142,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'COLON':([2,6,8,23,24,26,30,34,36,38,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,111,122,124,131,153,182,197,199,200,202,210,211,219,220,221,223,224,240,246,248,266,269,271,275,295,297,316,325,328,333,],[-60,-17,-187,-62,-61,-58,-138,-188,-59,118,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,196,208,-43,-128,-135,-199,-189,247,-68,-56,-70,-123,-116,-92,265,-43,-103,-200,-190,-65,-89,304,-43,-57,-73,-95,-67,-96,-90,-43,]),'DOWN':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,131,153,182,187,188,197,202,210,211,219,220,224,240,246,248,266,284,285,286,295,297,311,316,325,328,337,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-128,-135,-199,241,-179,-189,-56,-70,-123,-116,-92,-103,-200,-190,-65,-89,315,-180,-183,-73,-95,335,-67,-96,-90,-181,]),'DECREASE':([2,6,8,10,14,23,24,26,30,34,36,95,182,197,203,210,240,246,248,295,316,],[-60,-17,-187,-63,90,-62,-61,-58,-57,-188,-59,-64,-199,-189,-57,-70,-200,-190,-65,-73,-67,]),'REF':([6,84,86,97,163,179,227,291,306,344,],[-17,163,-15,163,163,163,-16,163,163,163,]),'OR':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,143,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'DIVIDE':([2,6,8,23,24,26,34,36,49,50,51,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,95,131,153,182,197,210,211,219,220,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,126,-77,-78,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-64,-128,-135,-199,-189,-70,-123,126,-92,-200,-190,-65,-89,-57,-73,-67,-90,]),'GREATER':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,145,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'FI':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,108,115,129,130,131,153,182,193,197,210,211,212,213,216,219,220,224,240,246,248,251,259,261,266,295,296,297,298,300,316,324,325,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-159,-136,-157,214,-128,-135,-199,-160,-189,-70,-123,-158,257,-161,-116,-92,-103,-200,-190,-65,-137,-162,297,-89,-73,-163,-95,325,-99,-67,-164,-96,-90,]),'END':([2,6,7,8,9,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,115,131,153,174,178,181,182,197,207,210,211,219,220,224,234,235,240,246,248,249,251,252,266,279,295,297,316,321,325,328,340,345,348,],[-60,-17,-5,-187,-2,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-136,-128,-135,-9,-20,-24,-199,-189,253,-70,-123,-116,-92,-103,-21,-23,-200,-190,-65,-209,-137,294,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),'SCONST':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[60,60,60,60,60,60,60,-129,-130,-150,-149,-151,60,-152,-154,-153,-148,60,60,60,60,-124,-125,60,-126,-119,-117,-120,60,-121,-118,60,-105,-112,-107,-111,-110,-113,-106,-114,60,-104,-109,-108,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ELSIF':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,108,115,129,130,131,153,182,193,197,210,211,212,218,219,220,224,240,246,248,251,260,262,266,295,296,297,316,325,327,328,346,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-159,-136,-157,215,-128,-135,-199,-160,-189,-70,-123,-158,264,-116,-92,-103,-200,-190,-65,-137,-98,299,-89,-73,215,-95,-67,-96,-100,-90,-101,]),'LPAREN':([4,5,6,12,17,22,27,30,37,39,41,43,44,45,47,53,54,59,67,68,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,157,159,161,162,164,169,171,172,176,203,205,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,275,276,282,283,299,304,305,307,308,309,310,312,314,322,],[-201,59,-17,-204,103,-206,-202,113,-203,-205,-208,59,-207,59,59,59,59,59,-129,113,-130,-150,-149,-151,59,-152,-154,-153,-148,59,59,59,59,-124,-125,59,-126,-119,-117,-120,59,-121,-118,59,-105,-112,-107,-111,-110,-113,-106,-114,59,-104,-109,-108,-32,226,-38,-35,-34,-33,232,-37,-36,59,113,250,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,308,232,226,232,59,59,-39,59,59,-40,232,59,59,344,]),'TIMES':([2,6,8,23,24,26,34,36,49,50,51,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,95,131,153,182,197,210,211,219,220,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,125,-77,-78,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-64,-128,-135,-199,-189,-70,-123,125,-92,-200,-190,-65,-89,-57,-73,-67,-90,]),'TRUE':([5,43,45,47,53,54,59,67,76,88,89,90,91,92,93,94,96,103,104,113,114,125,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[70,70,70,70,70,70,70,-129,-130,-150,-149,-151,70,-152,-154,-153,-148,70,70,70,70,-124,-125,70,-126,-119,-117,-120,70,-121,-118,70,-105,-112,-107,-111,-110,-113,-106,-114,70,-104,-109,-108,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'PLUS':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,133,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-64,-128,-135,-199,-189,-70,-123,-116,-92,133,-200,-190,-65,-89,-57,-73,-67,-90,]),'MOD':([2,6,8,23,24,26,34,36,49,50,51,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,95,131,153,182,197,210,211,219,220,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,128,-77,-78,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,-64,-128,-135,-199,-189,-70,-123,128,-92,-200,-190,-65,-89,-57,-73,-67,-90,]),'SEMI':([2,6,8,10,11,18,19,21,23,24,26,29,31,32,34,36,42,43,49,50,51,55,56,57,58,60,61,62,64,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,85,87,95,100,102,106,107,110,112,116,117,119,120,121,131,153,154,155,157,158,159,161,162,164,165,167,168,169,170,171,172,175,182,186,189,190,191,194,195,197,204,206,210,211,214,219,220,224,228,230,233,237,238,240,245,246,248,253,257,266,277,283,286,287,293,294,295,297,303,305,309,310,313,316,318,323,325,328,330,331,334,336,338,341,347,350,353,],[-60,-17,-187,-141,-143,-140,-144,-145,-62,-61,-58,-146,115,-142,-188,-59,-139,-195,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-97,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,174,-10,-64,-25,181,-170,192,-169,-165,-138,-194,-196,-198,-197,-128,-135,-32,-47,-41,-31,-38,-35,-34,-33,-46,-28,-12,-29,-30,-37,-36,-147,-199,-186,-174,-173,-172,-167,-171,-189,249,251,-70,-123,-155,-116,-92,-103,-45,-13,-11,-27,-26,-200,-166,-190,-65,-210,-156,-89,-14,-184,-183,-168,321,-211,-73,-95,-48,-39,-40,-185,-175,-67,340,345,-96,-90,-50,-55,-176,-182,-177,348,-178,-222,-223,]),'RETURNS':([293,318,],[322,322,]),'LESSEQ':([2,6,8,23,24,26,34,36,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,74,75,77,78,79,80,81,82,95,131,153,182,197,210,211,219,220,224,240,246,248,266,275,295,316,328,],[-60,-17,-187,-62,-61,-58,-188,-59,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-122,-79,-81,-82,-83,-133,-86,146,-64,-128,-135,-199,-189,-70,-123,-116,-92,-103,-200,-190,-65,-89,-57,-73,-67,-90,]),'RESULT':([0,2,3,6,7,8,9,20,23,24,25,26,34,35,36,40,46,48,49,50,51,55,56,57,58,60,61,62,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,98,99,108,109,115,118,129,131,153,174,178,181,182,192,193,196,197,207,210,211,212,216,219,220,224,234,235,240,244,246,248,249,251,252,259,266,279,295,297,316,321,325,328,340,345,348,],[45,-60,45,-17,-5,-187,-2,45,-62,-61,-8,-58,-188,-4,-59,-6,-7,-3,-115,-77,-78,-102,-63,-76,-131,-88,-80,-134,-132,-84,-57,-87,-85,-127,-75,-94,-122,-79,-81,-82,-83,-133,-86,-93,-64,-18,-19,-159,45,-136,45,45,-128,-135,-9,-20,-24,-199,45,-160,45,-189,45,-70,-123,45,45,-116,-92,-103,-21,-23,-200,45,-190,-65,-209,-137,45,45,-89,-22,-73,-95,-67,-212,-96,-90,-213,-214,-215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array_location':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'parenthesized_expression':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'upper_bound':([208,265,304,],[254,302,329,]),'operand2':([5,43,45,47,54,59,91,103,104,113,114,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[49,49,49,49,49,49,49,49,49,49,49,219,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'value_array_slice':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'integer_mode':([84,97,163,179,229,242,281,291,306,307,344,],[154,154,154,154,154,154,154,154,154,154,154,]),'step_value':([284,],[311,]),'result':([43,45,],[119,121,]),'while_control':([20,110,],[106,195,]),'elsif_expression':([218,],[262,]),'synonym_statement':([0,3,207,252,],[7,7,7,7,]),'procedure_call':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'assigning_operator':([14,],[91,]),'start_value':([243,],[284,]),'arithmetic_additive_operator':([55,224,],[134,134,]),'location':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[14,14,58,14,58,58,58,58,58,58,153,58,58,58,14,58,58,14,58,14,58,58,58,58,14,14,14,58,58,14,58,14,58,58,58,58,58,58,58,58,14,58,14,14,58,58,58,58,58,58,58,58,58,]),'expression':([5,43,45,47,54,59,91,103,104,113,114,140,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[64,120,120,124,64,139,175,185,64,185,202,223,235,255,256,64,260,271,271,277,271,235,185,286,202,300,64,255,64,255,271,333,286,202,]),'result_attribute':([349,],[352,]),'builtin_name':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'range_enumeration':([105,],[189,]),'assignment_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'result_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'integer_expression':([114,140,247,314,],[200,222,288,337,]),'index_mode':([229,307,],[272,332,]),'if_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'operand4':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[71,71,71,71,131,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'array_element':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'result_spec':([293,318,],[323,341,]),'action_statement':([0,3,20,109,129,192,207,212,216,244,252,259,],[25,25,108,193,108,108,25,193,108,193,25,193,]),'dereferenced_reference':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'iteration':([105,],[191,]),'array_primitive_value':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'relational_operator':([82,],[150,]),'integer_literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,225,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,267,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'index_mode_list':([229,],[274,]),'declaration_list':([13,],[85,]),'do_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[31,31,31,31,206,31,31,206,31,31,31,31,31,31,]),'composite_mode':([84,97,163,179,291,306,344,],[158,158,158,158,158,158,158,]),'exit_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'loop_counter':([105,],[187,]),'mode_definition':([16,180,],[100,238,]),'builtin_call':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'string_element':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'formal_parameter':([250,317,],[292,339,]),'identifier_list':([13,15,16,98,173,180,250,317,],[84,97,101,97,84,101,291,291,]),'operand3':([5,43,45,47,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[74,74,74,74,74,74,74,74,74,74,74,211,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'label_id':([0,3,20,33,109,129,192,207,212,216,244,252,259,],[38,38,111,117,111,111,111,38,111,111,111,38,111,]),'parameter':([103,113,239,308,],[183,183,280,183,]),'string_mode':([84,97,163,179,291,306,344,],[165,165,165,165,165,165,165,]),'discrete_range_mode':([84,97,163,179,229,242,281,291,306,307,344,],[161,161,161,161,161,161,161,161,161,161,161,]),'mode':([84,97,163,179,291,306,344,],[168,177,228,237,319,331,349,]),'closed_dyadic_operator':([14,],[89,]),'bracketed_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'primitive_value':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'parameter_attribute':([319,],[342,]),'referenced_location':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'reference_mode':([84,97,163,179,291,306,344,],[170,170,170,170,170,170,170,]),'string_slice':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'statement_list':([0,207,],[3,252,]),'array_mode':([84,97,163,179,291,306,344,],[155,155,155,155,155,155,155,]),'boolean_literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'empty_literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'boolean_expression':([5,54,104,215,264,299,],[52,132,186,258,301,326,]),'lower_bound':([47,140,226,229,232,307,308,],[122,221,269,269,269,269,269,]),'monadic_operator':([5,43,45,47,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'left_element':([114,],[199,]),'for_control':([20,],[110,]),'literal_range':([226,229,232,307,308,],[270,273,278,273,270,]),'operand1':([5,43,45,47,54,59,91,103,104,113,114,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[55,55,55,55,55,55,55,55,55,55,55,55,224,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'statement':([0,3,207,252,],[9,48,9,48,]),'call_action':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[10,10,56,10,56,56,56,56,56,56,56,56,56,56,10,56,56,10,56,10,56,56,56,56,10,10,10,56,56,10,56,10,56,56,56,56,56,56,56,56,10,56,10,10,56,56,56,56,56,56,56,56,56,]),'return_action':([0,3,20,109,118,129,192,196,207,212,216,244,252,259,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaration':([13,173,],[87,233,]),'value_array_element':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'element_mode':([306,],[330,]),'array_slice':([0,3,5,20,43,45,47,53,54,59,83,91,103,104,109,113,114,118,127,129,136,140,149,176,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,243,244,247,252,259,263,264,265,299,304,307,308,312,314,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'control_part':([20,],[107,]),'else_clause':([130,296,],[213,324,]),'right_element':([247,],[289,]),'arithmetic_multiplicative_operator':([49,219,],[127,127,]),'synonym_definition':([15,98,],[99,178,]),'then_expression':([132,301,326,],[218,327,346,]),'string_concatenation_operator':([55,224,],[138,138,]),'character_literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'start_element':([114,],[201,]),'constant_expression':([176,236,],[234,279,]),'end_value':([284,311,315,335,],[313,334,338,347,]),'discrete_expression':([243,312,],[285,336,]),'formal_procedure_head':([118,],[207,]),'else_expression':([218,262,],[261,298,]),'discrete_mode':([84,97,163,179,229,242,281,291,306,307,344,],[169,169,169,169,276,283,310,169,169,276,169,]),'operand0':([5,43,45,47,54,59,91,103,104,113,114,140,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'membership_operator':([82,],[141,]),'formal_parameter_list':([250,],[290,]),'program':([0,],[28,]),'action_statement_list':([20,129,192,216,],[109,212,244,259,]),'procedure_definition':([118,],[204,]),'identifier':([0,3,5,13,15,16,20,33,43,45,47,53,54,59,83,84,91,97,98,103,104,105,109,113,114,118,127,129,136,140,149,160,163,173,176,179,180,192,196,207,208,209,212,215,216,217,226,229,231,232,236,239,242,243,244,247,250,252,259,263,264,265,281,291,299,304,306,307,308,312,314,317,344,],[30,30,68,86,86,86,30,116,68,68,68,68,68,68,68,157,68,157,86,68,68,188,30,68,68,203,68,30,68,68,68,227,157,86,68,157,86,30,203,30,68,68,30,68,30,68,68,275,68,68,68,68,282,68,30,68,86,30,30,68,68,68,282,157,68,68,157,275,68,68,68,86,157,]),'operator2':([55,224,],[136,136,]),'expression_list':([47,],[123,]),'newmode_list':([16,],[102,]),'procedure_statement':([0,3,207,252,],[46,46,46,46,]),'step_enumeration':([105,],[190,]),'declaration_statement':([0,3,207,252,],[35,35,35,35,]),'string_length':([225,],[268,]),'then_clause':([52,258,],[130,296,]),'character_mode':([84,97,163,179,229,242,281,291,306,307,344,],[162,162,162,162,162,162,162,162,162,162,162,]),'literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'conditional_expression':([5,43,45,47,54,59,91,103,104,113,114,140,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'initialization':([168,],[230,]),'boolean_mode':([84,97,163,179,229,242,281,291,306,307,344,],[164,164,164,164,164,164,164,164,164,164,164,]),'synonym_list':([15,],[98,]),'parameter_list':([103,113,308,],[184,198,198,]),'mode_name':([84,97,163,179,291,306,344,],[167,167,167,167,167,167,167,]),'character_string_literal':([5,43,45,47,53,54,59,91,103,104,113,114,127,136,140,149,176,208,209,215,217,226,229,231,232,236,239,243,247,263,264,265,299,304,307,308,312,314,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'operator1':([82,],[149,]),'newmode_statement':([0,3,207,252,],[40,40,40,40,]),'parameter_spec':([291,],[320,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',25),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',26),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',38),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',42),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',54),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',55),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',62),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',66),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',67),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',74),
  ('synonym_statement -> SYN synonym_list','synonym_statement',2,'p_synonym_statement','parser.py',79),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',83),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',84),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',91),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',92),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',99),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',103),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',107),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',108),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',115),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',119),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',120),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',121),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',122),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',126),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',127),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',128),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',129),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',133),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',137),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',141),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',145),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',146),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',150),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',158),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',162),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',166),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',170),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',174),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',175),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',179),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',183),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',187),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',191),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',192),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',199),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',200),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',204),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',208),
  ('location -> identifier','location',1,'p_location','parser.py',212),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',213),
  ('location -> string_element','location',1,'p_location','parser.py',214),
  ('location -> string_slice','location',1,'p_location','parser.py',215),
  ('location -> array_element','location',1,'p_location','parser.py',216),
  ('location -> array_slice','location',1,'p_location','parser.py',217),
  ('location -> call_action','location',1,'p_location','parser.py',218),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',222),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',226),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',230),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',234),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',242),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',246),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',250),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',254),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',255),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',262),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',266),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',270),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',271),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',272),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',273),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',277),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',278),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',279),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',280),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',284),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',288),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',289),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',294),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',298),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',303),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',307),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',311),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',315),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',319),
  ('expression -> operand0','expression',1,'p_expression','parser.py',323),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',324),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',328),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',329),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',336),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',340),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',344),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',348),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',349),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',356),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',357),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',364),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',365),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',369),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',370),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',371),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',372),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',373),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',374),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',375),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',376),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',380),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',384),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',385),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',392),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',393),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',397),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',398),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',402),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',406),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',407),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',414),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',415),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',416),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',420),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',421),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',428),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',429),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',433),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',434),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',435),
  ('operand4 -> integer_literal','operand4',1,'p_operand4','parser.py',436),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',440),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',444),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',445),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',452),
  ('action -> bracketed_action','action',1,'p_action','parser.py',456),
  ('action -> assignment_action','action',1,'p_action','parser.py',457),
  ('action -> call_action','action',1,'p_action','parser.py',458),
  ('action -> exit_action','action',1,'p_action','parser.py',459),
  ('action -> return_action','action',1,'p_action','parser.py',460),
  ('action -> result_action','action',1,'p_action','parser.py',461),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',465),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',466),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',470),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',488),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',489),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',494),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',495),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',496),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',497),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',498),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',502),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',503),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',510),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',511),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',518),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',519),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',526),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',527),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',528),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',529),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',540),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',541),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',542),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',543),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',552),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',553),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',554),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',561),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',565),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',566),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',570),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',571),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',572),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',573),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',582),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',586),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',590),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',594),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',598),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',602),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',603),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',610),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',614),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',615),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',619),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',620),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',627),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',628),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',635),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',643),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',647),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',648),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',655),
  ('result -> expression','result',1,'p_result','parser.py',659),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',663),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',664),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',671),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',672),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',673),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',674),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',675),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',676),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',677),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',678),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',682),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',686),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',687),
  ('formal_procedure_head -> PROC LPAREN RPAREN SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',694),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',695),
  ('formal_procedure_head -> PROC LPAREN RPAREN result_spec SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',696),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI','formal_procedure_head',6,'p_formal_procedure_head','parser.py',697),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',707),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',708),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',715),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',719),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',720),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',727),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',731),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','parser.py',732),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',739),
]
