
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST UPPER BOOL EXIT WHILE LOC READ RESULT OD RETURNS PRINT LENGTH BY INT IN ELSIF FALSE FI DCL FOR REF LOWER END IF CHAR ABS DOWN TYPE PROC ASC NUM THEN SYN TRUE ARRAY ELSE DO TO CHARS RETURN NULLprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list initialization\n                              | identifier_list mode initializationnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : ICONSTarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'READ':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[1,1,1,-6,1,-5,-2,-8,1,-7,-4,1,-151,1,1,1,-123,1,-122,1,1,-128,1,-144,-142,-145,-140,-143,-146,-141,1,1,1,-3,1,1,1,-152,1,-114,-111,-110,-113,-112,1,1,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,1,-117,-118,-119,1,1,1,-18,-9,-23,1,1,1,1,1,1,1,-201,-129,1,1,1,1,1,1,1,1,1,1,-204,1,1,1,-205,1,1,1,1,]),'TO':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,247,248,249,258,288,289,291,304,312,313,317,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-174,287,-170,-82,315,287,-88,-65,-171,-55,-89,-83,]),'ABS':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[10,10,10,-6,10,-5,-2,-8,10,-7,-4,10,-151,10,10,10,-123,10,-122,10,10,-128,10,-144,-142,-145,-140,-143,-146,-141,10,10,10,-3,10,10,10,-152,10,-114,-111,-110,-113,-112,10,10,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,10,-117,-118,-119,10,10,10,-18,-9,-23,10,10,10,10,10,10,10,-201,-129,10,10,10,10,10,10,10,10,10,10,-204,10,10,10,-205,10,10,10,10,]),'DO':([0,3,12,17,20,23,29,32,37,47,51,92,93,116,124,126,127,156,158,191,193,197,205,216,217,222,223,224,259,263,298,],[3,3,-6,-5,-2,-8,-7,-4,3,-151,3,-128,3,-3,3,3,-152,3,3,-18,-9,-23,3,3,3,3,-201,-129,3,-204,-205,]),'BY':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,247,248,249,258,291,304,317,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-174,285,-170,-82,-88,-65,-89,-83,]),'SCONST':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[74,74,74,74,74,-123,74,-122,74,-144,-142,-145,-140,-143,-146,-141,74,74,74,74,74,-114,-111,-110,-113,-112,74,74,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,74,-117,-118,-119,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'FOR':([3,],[46,]),'RETURN':([0,3,12,17,20,23,29,32,37,47,51,92,93,116,124,126,127,156,158,191,193,197,205,216,217,222,223,224,259,263,298,],[6,6,-6,-5,-2,-8,-7,-4,6,-151,6,-128,6,-3,6,6,-152,6,6,-18,-9,-23,6,6,6,6,-201,-129,6,-204,-205,]),'DIVIDE':([5,9,11,14,38,42,53,54,55,56,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,86,87,96,137,138,164,199,207,213,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,154,-124,-61,-121,-127,-180,-191,154,-85,-116,-181,-62,-192,-82,-56,-65,-83,]),'MINUS':([5,6,9,11,13,14,27,38,42,49,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,70,71,74,75,76,77,81,83,84,86,87,94,95,96,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,164,183,199,203,207,208,213,214,215,220,227,228,229,230,231,232,233,236,244,254,256,257,258,283,285,287,294,304,305,309,311,315,320,],[-178,80,-179,-17,80,-58,80,-59,-57,80,-126,-70,-77,-69,133,-120,-74,-68,-125,-76,-67,-79,-75,-71,80,-60,-78,-81,-56,-115,-72,-80,80,-73,-108,-124,-144,-142,-61,-145,-140,-143,-146,-141,80,80,80,80,80,-114,-111,-110,-113,-112,80,-121,-127,80,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,80,-117,-118,-119,-180,80,-191,80,-109,80,-85,133,-116,80,80,-181,80,-62,80,80,80,80,-192,80,80,80,-82,-56,80,80,80,-65,80,80,80,80,-83,]),'EXIT':([0,3,12,17,20,23,29,32,37,47,51,92,93,116,124,126,127,156,158,191,193,197,205,216,217,222,223,224,259,263,298,],[8,8,-6,-5,-2,-8,-7,-4,8,-151,8,-128,8,-3,8,8,-152,8,8,-18,-9,-23,8,8,8,8,-201,-129,8,-204,-205,]),'MODCREASE':([5,9,11,14,16,21,22,38,42,75,96,164,199,228,230,244,304,],[-178,-179,-17,-58,-60,100,-56,-59,-57,-56,-61,-180,-191,-181,-62,-192,-65,]),'DIVCREASE':([5,9,11,14,16,21,22,38,42,75,96,164,199,228,230,244,304,],[-178,-179,-17,-58,-60,97,-56,-59,-57,-56,-61,-180,-191,-181,-62,-192,-65,]),'BOOL':([11,106,108,111,176,196,202,236,237,250,267,299,309,310,],[-17,175,-15,175,175,175,175,175,-16,175,175,175,175,175,]),'ID':([0,3,5,6,8,9,11,12,13,14,17,20,23,26,27,28,29,31,32,37,38,42,46,47,49,51,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,116,117,124,126,127,129,130,131,132,133,134,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,164,176,177,182,183,191,192,193,194,196,197,198,199,202,203,205,207,208,213,214,215,216,217,220,222,223,224,226,227,228,229,230,231,232,233,236,237,238,239,244,250,254,256,257,258,259,263,267,285,287,291,294,298,299,302,304,305,309,310,311,315,317,320,],[11,11,-178,11,11,-179,-17,-6,11,-58,-5,-2,-8,11,11,11,-7,11,-4,11,-59,-57,11,-151,11,11,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,11,-60,-78,-123,-87,-81,-56,-115,-72,11,-122,-80,11,11,-73,-86,-108,-124,-128,11,-144,-142,-61,-145,-140,-143,-146,-141,11,11,11,-19,11,11,-15,11,-3,11,11,11,-152,11,-114,-111,-110,-113,-112,11,-121,-127,11,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,11,-117,-118,-119,11,11,-180,11,-21,11,11,-18,-20,-9,11,11,-23,11,-191,11,11,11,-109,11,-85,-96,-116,11,11,11,11,-201,-129,11,11,-181,11,-62,11,11,11,11,-16,-14,-22,-192,11,11,11,11,-82,11,-204,11,11,11,-88,11,-205,11,11,-65,11,11,11,11,11,-89,-83,]),'ICONST':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,234,236,254,256,257,285,287,294,305,309,311,315,],[63,63,63,63,63,-123,63,-122,63,-144,-142,-145,-140,-143,-146,-141,63,63,63,63,63,-114,-111,-110,-113,-112,63,63,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,63,-117,-118,-119,63,63,63,63,63,63,63,63,63,278,63,63,63,63,63,63,63,63,63,63,63,]),'TIMES':([5,9,11,14,38,42,53,54,55,56,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,86,87,96,137,138,164,199,207,213,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,153,-124,-61,-121,-127,-180,-191,153,-85,-116,-181,-62,-192,-82,-56,-65,-83,]),'$end':([12,17,20,23,29,32,34,37,92,116,191,193,197,223,224,],[-6,-5,-2,-8,-7,-4,0,-1,-128,-3,-18,-9,-23,-201,-129,]),'CCONST':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[65,65,65,65,65,-123,65,-122,65,-144,-142,-145,-140,-143,-146,-141,65,65,65,65,65,-114,-111,-110,-113,-112,65,65,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,65,-117,-118,-119,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'FALSE':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[55,55,55,55,55,-123,55,-122,55,-144,-142,-145,-140,-143,-146,-141,55,55,55,55,55,-114,-111,-110,-113,-112,55,55,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,55,-117,-118,-119,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'MULCREASE':([5,9,11,14,16,21,22,38,42,75,96,164,199,228,230,244,304,],[-178,-179,-17,-58,-60,94,-56,-59,-57,-56,-61,-180,-191,-181,-62,-192,-65,]),'ARRAY':([11,106,108,111,176,196,237,267,299,310,],[-17,180,-15,180,180,180,-16,180,180,180,]),'IF':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,136,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[13,13,68,-6,68,-5,-2,-8,68,-7,-4,13,-151,68,13,68,68,-128,13,-144,-142,-145,-140,-143,-146,-141,68,68,68,-3,68,13,13,-152,68,13,13,68,-18,-9,-23,68,13,68,13,13,68,13,-201,-129,68,68,68,68,68,68,68,68,68,13,-204,68,68,68,-205,68,68,68,68,]),'INT':([11,106,108,111,176,196,202,236,237,250,267,299,309,310,],[-17,188,-15,188,188,188,188,188,-16,188,188,188,188,188,]),'NULL':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[81,81,81,81,81,-123,81,-122,81,-144,-142,-145,-140,-143,-146,-141,81,81,81,81,81,-114,-111,-110,-113,-112,81,81,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,81,-117,-118,-119,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'OR':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,142,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'ASSIGN':([5,9,11,14,16,21,22,38,42,75,96,106,108,114,118,123,164,170,171,172,174,175,178,179,181,184,185,186,187,188,189,190,195,199,228,230,235,237,244,304,306,307,308,327,328,],[-178,-179,-17,-58,-60,98,-56,-59,-57,-56,-61,183,-15,196,-169,203,-180,-40,-31,-28,-32,-36,-29,-34,-46,-30,-27,-37,-33,-35,183,-45,183,-191,-181,-62,-44,-16,-192,-65,-38,-39,-47,-49,-54,]),'EQUAL':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,144,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'CHARS':([11,106,108,111,176,196,237,267,299,310,],[-17,173,-15,173,173,173,-16,173,173,173,]),'AND':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,145,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'RPAREN':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,103,117,137,138,139,163,164,165,166,170,171,172,174,175,178,179,181,184,185,186,187,188,190,199,200,207,213,214,215,226,228,230,235,244,258,266,269,270,273,276,277,291,300,301,304,306,307,308,311,317,320,322,323,324,325,327,328,329,332,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,164,199,-121,-127,213,-184,-180,228,-182,-40,-31,-28,-32,-36,-29,-34,-46,-30,-27,-37,-33,-35,-45,-191,244,-109,-85,-96,-116,268,-181,-62,-44,-192,-82,-208,303,-183,-43,306,307,-88,-210,-211,-65,-38,-39,-47,164,-89,-83,333,-212,-209,-41,-49,-54,-184,334,]),'UPPER':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[18,18,18,-6,18,-5,-2,-8,18,-7,-4,18,-151,18,18,18,-123,18,-122,18,18,-128,18,-144,-142,-145,-140,-143,-146,-141,18,18,18,-3,18,18,18,-152,18,-114,-111,-110,-113,-112,18,18,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,18,-117,-118,-119,18,18,18,-18,-9,-23,18,18,18,18,18,18,18,-201,-129,18,18,18,18,18,18,18,18,18,18,-204,18,18,18,-205,18,18,18,18,]),'TRUE':([6,13,27,49,68,72,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[71,71,71,71,71,-123,71,-122,71,-144,-142,-145,-140,-143,-146,-141,71,71,71,71,71,-114,-111,-110,-113,-112,71,71,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,71,-117,-118,-119,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'SEMI':([4,5,6,7,9,11,14,15,16,24,33,36,38,40,41,42,45,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,78,81,84,85,86,87,88,89,91,96,105,107,109,110,112,113,115,119,120,121,122,125,128,137,138,159,160,162,164,170,171,172,174,175,177,178,179,181,184,185,186,187,188,190,192,195,199,201,206,207,213,214,215,219,221,225,228,230,235,238,239,240,241,242,243,244,245,247,251,258,260,262,264,268,286,290,291,303,304,306,307,308,314,316,317,320,327,328,330,333,334,],[-136,-178,-187,-131,-179,-17,-58,92,-133,-137,-134,-138,-59,-135,-132,-57,-161,124,-157,-126,-70,-77,-69,-95,-188,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-190,-80,-73,-86,-108,-124,-186,-185,-90,-61,-19,191,-189,193,-10,-24,197,-164,-165,-166,-162,-177,-159,-121,-127,223,224,-139,-180,-40,-31,-28,-32,-36,-21,-29,-34,-46,-30,-27,-37,-33,-35,-45,-20,-12,-191,-163,-158,-109,-85,-96,-116,-147,-202,263,-181,-62,-44,-14,-22,-11,-13,-26,-25,-192,-175,-174,-160,-82,-148,-203,298,-206,-167,-176,-88,-207,-65,-38,-39,-47,-172,-168,-89,-83,-49,-54,-173,-213,-214,]),'WHILE':([3,5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,119,120,121,122,137,138,164,171,174,175,179,186,187,188,199,207,213,214,215,228,230,244,245,247,258,286,290,291,304,306,307,314,316,317,320,330,],[49,-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-164,-165,-166,49,-121,-127,-180,-31,-32,-36,-34,-37,-33,-35,-191,-109,-85,-96,-116,-181,-62,-192,-175,-174,-82,-167,-176,-88,-65,-38,-39,-172,-168,-89,-83,-173,]),'DIFF':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,148,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'STRCAT':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,130,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,-108,-124,-61,-121,-127,-180,-191,-109,-85,130,-116,-181,-62,-192,-82,-56,-65,-83,]),'PLUS':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,134,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,-108,-124,-61,-121,-127,-180,-191,-109,-85,134,-116,-181,-62,-192,-82,-56,-65,-83,]),'RESULT':([0,3,12,17,20,23,29,32,37,47,51,92,93,116,124,126,127,156,158,191,193,197,205,216,217,222,223,224,259,263,298,],[27,27,-6,-5,-2,-8,-7,-4,27,-151,27,-128,27,-3,27,27,-152,27,27,-18,-9,-23,27,27,27,27,-201,-129,27,-204,-205,]),'END':([12,17,20,23,29,32,92,116,158,191,193,197,222,223,224,263,298,],[-6,-5,-2,-8,-7,-4,-128,-3,221,-18,-9,-23,262,-201,-129,-204,-205,]),'IN':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,118,123,137,138,164,199,204,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,141,-108,-124,-61,-169,202,-121,-127,-180,-191,250,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'NUM':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[39,39,39,-6,39,-5,-2,-8,39,-7,-4,39,-151,39,39,39,-123,39,-122,39,39,-128,39,-144,-142,-145,-140,-143,-146,-141,39,39,39,-3,39,39,39,-152,39,-114,-111,-110,-113,-112,39,39,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,39,-117,-118,-119,39,39,39,-18,-9,-23,39,39,39,39,39,39,39,-201,-129,39,39,39,39,39,39,39,39,39,39,-204,39,39,39,-205,39,39,39,39,]),'SYN':([0,12,17,20,23,29,32,37,92,116,158,191,193,197,222,223,224,263,298,],[26,-6,-5,-2,-8,-7,-4,26,-128,-3,26,-18,-9,-23,26,-201,-129,-204,-205,]),'LENGTH':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[30,30,30,-6,30,-5,-2,-8,30,-7,-4,30,-151,30,30,30,-123,30,-122,30,30,-128,30,-144,-142,-145,-140,-143,-146,-141,30,30,30,-3,30,30,30,-152,30,-114,-111,-110,-113,-112,30,30,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,30,-117,-118,-119,30,30,30,-18,-9,-23,30,30,30,30,30,30,30,-201,-129,30,30,30,30,30,30,30,30,30,30,-204,30,30,30,-205,30,30,30,30,]),'LOC':([11,170,171,172,174,175,178,179,181,184,185,186,187,188,190,235,301,306,307,308,322,327,328,],[-17,-40,-31,-28,-32,-36,-29,-34,-46,-30,-27,-37,-33,-35,-45,-44,323,-38,-39,-47,332,-49,-54,]),'DOWN':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,118,123,137,138,164,199,207,213,214,215,228,230,244,247,248,249,258,289,291,304,312,313,317,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-169,204,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-174,288,-170,-82,288,-88,-65,-171,-55,-89,-83,]),'NOT':([6,13,27,49,68,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[72,72,72,72,72,72,-144,-142,-145,-140,-143,-146,-141,72,72,72,72,72,-114,-111,-110,-113,-112,72,72,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,72,-117,-118,-119,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'DCL':([0,12,17,20,23,29,32,37,92,116,158,191,193,197,222,223,224,263,298,],[28,-6,-5,-2,-8,-7,-4,28,-128,-3,28,-18,-9,-23,28,-201,-129,-204,-205,]),'GREATEREQ':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,146,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'COLON':([5,9,11,14,19,22,38,42,50,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,137,138,164,168,169,199,207,210,211,213,214,215,228,230,244,258,274,275,283,291,304,317,320,329,],[-178,-179,-17,-58,93,-130,-59,-57,126,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-121,-127,-180,-42,231,-191,-109,-42,257,-85,-96,-116,-181,-62,-192,-82,305,-42,-56,-88,-65,-89,-83,-42,]),'REF':([11,106,108,111,176,196,237,267,299,310,],[-17,176,-15,176,176,176,-16,176,176,176,]),'PROC':([93,],[161,]),'LBRACKET':([5,9,11,14,16,21,22,25,38,42,53,54,55,56,60,61,63,64,65,66,67,69,70,71,74,75,77,81,84,87,96,138,164,173,180,199,213,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-60,-66,-56,104,-59,-57,-84,-70,-77,-69,-74,-68,-76,-67,-79,-75,-71,136,-60,-78,-81,-56,-72,-80,-73,-66,-61,-66,-180,234,236,-191,-85,-181,-62,-192,-82,-56,-65,-83,]),'TYPE':([0,12,17,20,23,29,32,37,92,116,158,191,193,197,222,223,224,263,298,],[31,-6,-5,-2,-8,-7,-4,31,-128,-3,31,-18,-9,-23,31,-201,-129,-204,-205,]),'FI':([5,9,11,14,38,42,47,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,92,96,127,137,138,156,157,164,199,207,213,214,215,216,217,218,224,228,230,244,253,258,259,291,292,293,297,304,317,320,321,],[-178,-179,-17,-58,-59,-57,-151,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-128,-61,-152,-121,-127,-149,219,-180,-191,-109,-85,-96,-116,-150,-153,260,-129,-181,-62,-192,291,-82,-154,-88,-92,317,-155,-65,-89,-83,-156,]),'MOD':([5,9,11,14,38,42,53,54,55,56,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,86,87,96,137,138,164,199,207,213,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,155,-124,-61,-121,-127,-180,-191,155,-85,-116,-181,-62,-192,-82,-56,-65,-83,]),'COMMA':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,106,108,110,111,112,113,114,115,137,138,163,164,165,166,167,168,170,171,172,174,175,178,179,181,184,185,186,187,188,190,195,199,200,207,213,214,215,228,230,235,237,238,240,241,242,243,244,258,266,267,269,270,271,273,280,281,282,284,291,300,301,304,306,307,308,317,320,323,324,325,326,327,328,329,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,182,-15,194,182,-10,-24,182,198,-121,-127,-184,-180,227,-182,229,-63,-40,-31,-28,-32,-36,-29,-34,-46,-30,-27,-37,-33,-35,-45,-12,-191,227,-109,-85,-96,-116,-181,-62,-44,-16,-14,-11,-13,-26,-25,-192,-82,-208,182,302,-183,-64,-43,-52,309,-53,-50,-88,-210,-211,-65,-38,-39,-47,-89,-83,-212,-209,-41,-51,-49,-54,-184,]),'ARROW':([5,6,9,11,13,14,16,21,22,27,38,42,49,68,70,72,75,79,80,83,87,94,95,96,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,164,183,199,203,208,220,227,228,229,230,231,232,233,236,244,254,256,257,283,285,287,294,304,305,309,311,315,],[-178,82,-179,-17,82,-58,-60,96,-56,82,-59,-57,82,82,-60,-123,-56,82,-122,82,96,-144,-142,-61,-145,-140,-143,-146,-141,82,82,82,82,82,-114,-111,-110,-113,-112,82,96,82,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,82,-117,-118,-119,-180,82,-191,82,82,82,82,-181,82,-62,82,82,82,82,-192,82,82,82,-56,82,82,82,-65,82,82,82,82,]),'RETURNS':([225,268,303,],[265,-206,-207,]),'LESSEQ':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,143,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'ASC':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[35,35,35,-6,35,-5,-2,-8,35,-7,-4,35,-151,35,35,35,-123,35,-122,35,35,-128,35,-144,-142,-145,-140,-143,-146,-141,35,35,35,-3,35,35,35,-152,35,-114,-111,-110,-113,-112,35,35,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,35,-117,-118,-119,35,35,35,-18,-9,-23,35,35,35,35,35,35,35,-201,-129,35,35,35,35,35,35,35,35,35,35,-204,35,35,35,-205,35,35,35,35,]),'DECREASE':([5,9,11,14,16,21,22,38,42,75,96,164,199,228,230,244,304,],[-178,-179,-17,-58,-60,99,-56,-59,-57,-56,-61,-180,-191,-181,-62,-192,-65,]),'INCREASE':([5,9,11,14,16,21,22,38,42,75,96,164,199,228,230,244,304,],[-178,-179,-17,-58,-60,95,-56,-59,-57,-56,-61,-180,-191,-181,-62,-192,-65,]),'GREATER':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,149,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'LESS':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,74,75,76,77,81,84,85,86,87,96,137,138,164,199,207,213,214,215,228,230,244,258,283,304,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-81,-56,-115,-72,-80,-73,147,-108,-124,-61,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,-56,-65,-83,]),'CHAR':([11,106,108,111,176,196,202,236,237,250,267,299,309,310,],[-17,186,-15,186,186,186,186,186,-16,186,186,186,186,186,]),'LOWER':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[2,2,2,-6,2,-5,-2,-8,2,-7,-4,2,-151,2,2,2,-123,2,-122,2,2,-128,2,-144,-142,-145,-140,-143,-146,-141,2,2,2,-3,2,2,2,-152,2,-114,-111,-110,-113,-112,2,2,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,2,-117,-118,-119,2,2,2,-18,-9,-23,2,2,2,2,2,2,2,-201,-129,2,2,2,2,2,2,2,2,2,2,-204,2,2,2,-205,2,2,2,2,]),'THEN':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,90,91,96,135,137,138,164,199,207,213,214,215,228,230,244,258,261,291,295,304,317,318,320,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,156,-90,-61,208,-121,-127,-180,-191,-109,-85,-96,-116,-181,-62,-192,-82,156,-88,208,-65,-89,208,-83,]),'ELSE':([5,9,11,14,38,42,47,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,92,96,127,137,138,156,157,164,199,207,209,213,214,215,216,224,228,230,244,252,255,258,291,297,304,317,319,320,331,],[-178,-179,-17,-58,-59,-57,-151,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-128,-61,-152,-121,-127,-149,217,-180,-191,-109,254,-85,-96,-116,-150,-129,-181,-62,-192,-91,254,-82,-88,217,-65,-89,-93,-83,-94,]),'ELSIF':([5,9,11,14,38,42,47,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,92,96,127,137,138,156,157,164,199,207,209,213,214,215,216,224,228,230,244,252,255,258,291,297,304,317,319,320,331,],[-178,-179,-17,-58,-59,-57,-151,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-128,-61,-152,-121,-127,-149,220,-180,-191,-109,256,-85,-96,-116,-150,-129,-181,-62,-192,-91,294,-82,-88,220,-65,-89,-93,-83,-94,]),'LPAREN':([1,2,6,10,11,13,18,22,27,30,35,39,43,44,49,68,72,75,79,80,83,94,95,97,98,99,100,101,102,103,104,117,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,161,170,171,172,174,175,179,183,186,187,188,203,208,220,227,229,231,232,233,236,245,246,254,256,257,265,280,283,285,287,290,294,305,306,307,309,311,315,],[-199,-197,83,-193,-17,83,-196,103,83,-198,-194,-195,117,-200,83,83,-123,103,83,-122,83,-144,-142,-145,-140,-143,-146,-141,83,83,83,83,83,-114,-111,-110,-113,-112,83,83,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,83,-117,-118,-119,226,232,-31,233,-32,-36,-34,83,-37,-33,-35,83,83,83,83,83,83,83,83,83,233,232,83,83,83,299,233,311,83,83,233,83,83,-38,-39,83,83,83,]),'RBRACKET':([5,9,11,14,38,42,53,54,55,56,57,59,60,61,62,63,64,65,66,67,70,71,73,74,75,76,77,81,84,85,86,87,96,137,138,164,167,168,171,174,175,179,186,187,188,199,207,210,212,213,214,215,228,230,244,258,271,272,273,278,279,280,281,282,284,291,296,304,306,307,317,320,325,326,],[-178,-179,-17,-58,-59,-57,-126,-70,-77,-69,-95,-120,-74,-68,-125,-76,-67,-79,-75,-71,-60,-78,-87,-81,-56,-115,-72,-80,-73,-86,-108,-124,-61,-121,-127,-180,230,-63,-31,-32,-36,-34,-37,-33,-35,-191,-109,-55,258,-85,-96,-116,-181,-62,-192,-82,-64,304,-43,-48,308,-52,310,-53,-50,-88,320,-65,-38,-39,-89,-83,-41,-51,]),'OD':([3,47,51,92,124,127,205,224,],[52,-151,128,-128,206,-152,251,-129,]),'PRINT':([0,3,6,12,13,17,20,23,27,29,32,37,47,49,51,68,72,79,80,82,83,92,93,94,95,97,98,99,100,101,102,103,104,116,117,124,126,127,129,130,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,183,191,193,197,203,205,208,216,217,220,222,223,224,227,229,231,232,233,236,254,256,257,259,263,285,287,294,298,305,309,311,315,],[44,44,44,-6,44,-5,-2,-8,44,-7,-4,44,-151,44,44,44,-123,44,-122,44,44,-128,44,-144,-142,-145,-140,-143,-146,-141,44,44,44,-3,44,44,44,-152,44,-114,-111,-110,-113,-112,44,44,-107,-100,-106,-101,-99,-104,-105,-102,-103,-98,-97,44,-117,-118,-119,44,44,44,-18,-9,-23,44,44,44,44,44,44,44,-201,-129,44,44,44,44,44,44,44,44,44,44,-204,44,44,44,-205,44,44,44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'primitive_value':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'upper_bound':([231,257,305,],[272,296,325,]),'result_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'parameter_spec':([267,],[300,]),'operand1':([6,13,27,49,68,83,102,103,104,117,136,140,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[57,57,57,57,57,57,57,57,57,57,57,214,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'procedure_call':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'array_location':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'result':([6,27,],[58,109,]),'boolean_mode':([106,111,176,196,202,236,250,267,299,309,310,],[174,174,174,174,174,174,174,174,174,174,174,]),'synonym_definition':([26,107,],[105,192,]),'reference_mode':([106,111,176,196,267,299,310,],[178,178,178,178,178,178,178,]),'character_string_literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'integer_literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_primitive_value':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression':([6,13,27,49,68,83,102,103,104,117,136,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[78,91,78,91,91,139,162,163,168,163,210,238,247,252,91,163,271,273,275,275,275,292,91,273,313,247,91,273,275,329,247,]),'control_part':([3,],[48,]),'call_action':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[16,16,70,70,70,16,70,16,70,70,70,70,16,70,70,70,70,16,16,70,70,70,70,16,16,70,70,16,70,16,16,70,16,70,70,70,70,70,70,70,70,70,16,70,70,70,70,70,70,70,]),'elsif_expression':([209,],[255,]),'discrete_mode':([106,111,176,196,202,236,250,267,299,309,310,],[172,172,172,172,245,280,290,172,172,280,172,]),'mode_name':([106,111,176,196,267,299,310,],[185,185,185,185,185,185,185,]),'membership_operator':([85,],[150,]),'discrete_range_mode':([106,111,176,196,202,236,250,267,299,309,310,],[179,179,179,179,179,179,179,179,179,179,179,]),'conditional_expression':([6,13,27,49,68,83,102,103,104,117,136,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'arithmetic_multiplicative_operator':([86,207,],[152,152,]),'label_id':([0,3,37,51,124,156,158,205,216,217,222,259,],[19,50,19,50,50,50,19,50,50,50,19,50,]),'array_mode':([106,111,176,196,267,299,310,],[181,181,181,181,181,181,181,]),'then_clause':([90,261,],[157,297,]),'statement':([0,37,158,222,],[20,116,20,116,]),'location':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[21,21,87,87,87,21,87,21,87,87,138,87,21,87,87,87,87,21,21,87,87,87,87,21,21,87,87,21,87,21,21,87,21,87,87,87,87,87,87,87,87,87,21,87,87,87,87,87,87,87,]),'identifier':([0,3,6,8,13,26,27,28,31,37,46,49,51,68,79,82,83,93,102,103,104,106,107,111,117,124,126,129,136,140,152,156,158,176,182,183,194,196,198,202,203,205,208,216,217,220,222,226,227,229,231,232,233,236,250,254,256,257,259,267,285,287,294,299,302,305,309,310,311,315,],[22,22,75,88,75,108,75,108,108,22,118,75,22,75,75,75,75,75,75,75,75,170,108,170,75,22,75,75,75,75,75,22,22,170,237,75,108,170,108,246,75,22,75,22,22,75,22,108,75,75,75,75,75,283,246,75,75,75,22,170,75,75,75,170,108,75,283,170,75,75,]),'action_statement':([0,3,37,51,124,156,158,205,216,217,222,259,],[23,47,23,127,47,47,23,127,127,47,23,127,]),'if_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'operand3':([6,13,27,49,68,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[76,76,76,76,76,76,76,76,76,76,76,76,76,215,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'boolean_literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'builtin_name':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'then_expression':([135,295,318,],[209,319,331,]),'integer_expression':([136,285,],[212,312,]),'procedure_statement':([0,37,158,222,],[29,29,29,29,]),'newmode_list':([31,],[115,]),'for_control':([46,],[122,]),'string_concatenation_operator':([57,214,],[131,131,]),'empty_literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'parameter_list':([103,117,311,],[165,200,165,]),'declaration_statement':([0,37,158,222,],[32,32,32,32,]),'operator1':([85,],[140,]),'program':([0,],[34,]),'action_statement_list':([3,124,156,217,],[51,205,216,259,]),'operand0':([6,13,27,49,68,83,102,103,104,117,136,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'do_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'statement_list':([0,158,],[37,222,]),'character_literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'initialization':([106,189,195,],[177,239,241,]),'return_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'composite_mode':([106,111,176,196,267,299,310,],[184,184,184,184,184,184,184,]),'operand2':([6,13,27,49,68,83,102,103,104,117,129,136,140,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[86,86,86,86,86,86,86,86,86,86,207,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'string_mode':([106,111,176,196,267,299,310,],[190,190,190,190,190,190,190,]),'parameter':([103,117,227,311,],[166,166,270,166,]),'string_length':([234,],[279,]),'else_clause':([157,297,],[218,321,]),'element_mode':([310,],[327,]),'value_array_slice':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'iteration':([46,],[119,]),'start_value':([203,],[248,]),'range_enumeration':([46,],[121,]),'operand4':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[59,59,59,59,59,137,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'declaration':([28,194,],[112,240,]),'expression_list':([104,],[167,]),'value_array_element':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'result_spec':([225,],[264,]),'referenced_location':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'assigning_operator':([21,],[102,]),'literal':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'newmode_statement':([0,37,158,222,],[12,12,12,12,]),'formal_parameter_list':([226,],[269,]),'mode':([106,111,176,196,267,299,310,],[189,195,235,242,301,322,328,]),'mode_definition':([31,198,],[113,243,]),'array_element':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[15,15,15,15,160,15,160,15,15,15,15,15,15,15,]),'synonym_statement':([0,37,158,222,],[17,17,17,17,]),'operator2':([57,214,],[129,129,]),'procedure_definition':([93,],[159,]),'end_value':([248,289,],[286,316,]),'index_mode_list':([236,],[281,]),'literal_range':([232,233,236,309,311,],[276,277,282,282,276,]),'character_mode':([106,111,176,196,202,236,250,267,299,309,310,],[187,187,187,187,187,187,187,187,187,187,187,]),'loop_counter':([46,],[123,]),'step_value':([248,],[289,]),'bracketed_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'dereferenced_reference':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'lower_bound':([104,136,232,233,236,309,311,],[169,211,274,274,274,274,274,]),'integer_mode':([106,111,176,196,202,236,250,267,299,309,310,],[171,171,171,171,171,171,171,171,171,171,171,]),'builtin_call':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'exit_label_id':([8,],[89,]),'synonym_list':([26,],[107,]),'boolean_expression':([13,49,68,220,256,294,],[90,125,135,261,295,318,]),'closed_dyadic_operator':([21,],[101,]),'monadic_operator':([6,13,27,49,68,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'declaration_list':([28,],[110,]),'parenthesized_expression':([6,13,27,49,68,79,83,102,103,104,117,129,136,140,152,183,203,208,220,227,229,231,232,233,236,254,256,257,285,287,294,305,309,311,315,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'formal_procedure_head':([93,],[158,]),'parenthesis_gambiarra':([161,],[225,]),'discrete_expression':([203,287,315,],[249,314,330,]),'index_mode':([236,309,],[284,326,]),'while_control':([3,122,],[45,201,]),'exit_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'arithmetic_additive_operator':([57,214,],[132,132,]),'step_enumeration':([46,],[120,]),'formal_parameter':([226,302,],[266,324,]),'relational_operator':([85,],[151,]),'array_slice':([0,3,6,13,27,37,49,51,68,79,82,83,93,102,103,104,117,124,126,129,136,140,152,156,158,183,203,205,208,216,217,220,222,227,229,231,232,233,236,254,256,257,259,285,287,294,305,309,311,315,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'else_expression':([209,255,],[253,293,]),'identifier_list':([26,28,31,107,194,198,226,302,],[106,111,114,106,111,114,267,267,]),'assignment_action':([0,3,37,51,93,124,126,156,158,205,216,217,222,259,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list initialization','synonym_definition',2,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode initialization','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('string_length -> ICONST','string_length',1,'p_string_length','parser.py',223),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',393),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',399),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',405),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',411),
  ('expression -> operand0','expression',1,'p_expression','parser.py',418),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
