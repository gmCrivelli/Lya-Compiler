
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE MULVAL DIVVAL DIFF MOD MODVAL NOT ICONST CCONST SCONST THEN READ RETURNS TRUE IF BOOL FOR CHAR RETURN FALSE DCL UPPER SYN ARRAY LOWER TYPE BY REF OD ABS ASC DO FI PROC PRINT CHARS WHILE INT DOWN IN NUM EXIT ELSE NULL RESULT TO END LOC ELSIF LENGTHprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_listsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_value\n            | integer_literalreferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part :  for_control\n                        | while_control\n                        | for_control while_controlfor_control :  FOR iterationiteration :  step_enumeration\n                     | range_enumerationstep_enumeration :  loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_value\n                            | loop_counter ASSIGN start_value DOWN end_value\n                            | loop_counter ASSIGN start_value step_value DOWN end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value :  TO discrete_expressiondiscrete_expression :  expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call :  identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name :  ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC LPAREN RPAREN SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI\n                                 | PROC LPAREN RPAREN result_spec SEMI\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMIformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode parameter_attributeparameter_attribute :  LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode result_attribute RPARENresult_attribute :  LOC'
    
_lr_action_items = {'ICONST':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,213,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[83,83,83,-152,-153,83,-149,-154,-151,-148,-150,83,83,83,-129,83,-130,83,83,83,83,83,-118,-120,-119,-121,-117,-126,-124,83,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,83,-113,-108,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'READ':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[9,9,-188,9,-4,-2,9,-58,-60,-17,9,-6,-8,-62,-7,-61,-5,9,-187,-59,-152,-153,9,-149,-154,-151,-148,-150,-64,-136,-3,9,9,-122,-81,-133,-127,-134,-82,-132,-80,-88,9,-63,-129,-75,-84,-57,-102,-83,-115,9,-79,-130,-77,-93,-76,-94,-87,9,-85,-131,-86,-78,-19,-18,9,9,9,9,-159,9,9,-9,9,-118,-120,-119,-121,-117,-126,-124,9,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,9,-113,-108,-135,9,-20,9,9,9,-189,9,-160,9,-24,-199,9,9,9,9,9,-70,9,-92,9,-116,-123,-103,-23,-21,9,9,9,9,-137,-209,9,-65,9,9,-190,9,9,-200,9,9,-89,9,-22,9,9,9,9,-73,-95,9,-212,-67,9,9,-96,-90,-213,-214,-215,]),'DCL':([0,4,7,12,13,18,19,20,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,123,159,172,174,183,189,204,206,218,220,223,224,225,229,230,237,238,241,242,245,253,274,276,302,304,313,317,331,332,335,338,347,],[3,3,-188,-4,-2,-58,-60,-17,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,-9,-128,-135,-20,3,-189,-24,-199,-70,-92,-116,-123,-103,-23,-21,-137,-209,3,-65,-190,-200,-89,-22,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'EXIT':([0,4,7,12,13,18,19,20,23,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,105,110,112,123,159,172,174,177,183,189,192,194,196,204,206,218,220,223,224,225,229,230,232,233,237,238,241,242,245,246,253,274,276,277,302,304,313,317,331,332,335,338,347,],[5,5,-188,-4,-2,-58,-60,-17,5,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,5,5,-159,-9,-128,-135,-20,5,5,-189,5,-160,5,-24,-199,-70,-92,-116,-123,-103,-23,-21,5,5,-137,-209,5,-65,-190,5,-200,-89,-22,5,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'ABS':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[6,6,-188,6,-4,-2,6,-58,-60,-17,6,-6,-8,-62,-7,-61,-5,6,-187,-59,-152,-153,6,-149,-154,-151,-148,-150,-64,-136,-3,6,6,-122,-81,-133,-127,-134,-82,-132,-80,-88,6,-63,-129,-75,-84,-57,-102,-83,-115,6,-79,-130,-77,-93,-76,-94,-87,6,-85,-131,-86,-78,-19,-18,6,6,6,6,-159,6,6,-9,6,-118,-120,-119,-121,-117,-126,-124,6,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,6,-113,-108,-135,6,-20,6,6,6,-189,6,-160,6,-24,-199,6,6,6,6,6,-70,6,-92,6,-116,-123,-103,-23,-21,6,6,6,6,-137,-209,6,-65,6,6,-190,6,6,-200,6,6,-89,6,-22,6,6,6,6,-73,-95,6,-212,-67,6,6,-96,-90,-213,-214,-215,]),'INT':([20,58,60,102,132,203,211,212,249,283,289,298,299,337,],[-17,-15,126,126,126,126,126,-16,126,126,126,126,126,126,]),'LOC':([20,125,126,127,128,129,130,131,133,135,136,139,140,142,143,210,296,300,301,316,327,328,348,],[-17,-31,-36,-30,-28,-29,-37,-46,-38,-32,-34,-47,-41,-35,-33,-45,-40,-48,-39,340,-50,-55,352,]),'SCONST':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[75,75,75,-152,-153,75,-149,-154,-151,-148,-150,75,75,75,-129,75,-130,75,75,75,75,75,-118,-120,-119,-121,-117,-126,-124,75,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,75,-113,-108,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'GREATEREQ':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,165,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'BOOL':([20,58,60,102,132,203,211,212,249,283,289,298,299,337,],[-17,-15,130,130,130,130,130,-16,130,130,130,130,130,130,]),'REF':([20,58,60,102,132,203,212,283,299,337,],[-17,-15,132,132,132,132,-16,132,132,132,]),'EQUAL':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,171,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'TIMES':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,83,84,86,88,90,92,94,96,97,99,159,172,189,206,218,220,223,224,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-83,156,-79,-77,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,156,-123,-65,-190,-200,-57,-89,-73,-67,-90,]),'ARRAY':([20,58,60,102,132,203,212,283,299,337,],[-17,-15,134,134,134,134,-16,134,134,134,]),'LESS':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,160,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'RETURN':([0,4,7,12,13,18,19,20,23,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,105,110,112,123,159,172,174,177,183,189,192,194,196,204,206,218,220,223,224,225,229,230,232,233,237,238,241,242,245,246,253,274,276,277,302,304,313,317,331,332,335,338,347,],[11,11,-188,-4,-2,-58,-60,-17,11,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,11,11,-159,-9,-128,-135,-20,11,11,-189,11,-160,11,-24,-199,-70,-92,-116,-123,-103,-23,-21,11,11,-137,-209,11,-65,-190,11,-200,-89,-22,11,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'OD':([23,56,110,112,192,194,237,246,],[114,-136,195,-159,247,-160,-137,288,]),'NUM':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[14,14,-188,14,-4,-2,14,-58,-60,-17,14,-6,-8,-62,-7,-61,-5,14,-187,-59,-152,-153,14,-149,-154,-151,-148,-150,-64,-136,-3,14,14,-122,-81,-133,-127,-134,-82,-132,-80,-88,14,-63,-129,-75,-84,-57,-102,-83,-115,14,-79,-130,-77,-93,-76,-94,-87,14,-85,-131,-86,-78,-19,-18,14,14,14,14,-159,14,14,-9,14,-118,-120,-119,-121,-117,-126,-124,14,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,14,-113,-108,-135,14,-20,14,14,14,-189,14,-160,14,-24,-199,14,14,14,14,14,-70,14,-92,14,-116,-123,-103,-23,-21,14,14,14,14,-137,-209,14,-65,14,14,-190,14,14,-200,14,14,-89,14,-22,14,14,14,14,-73,-95,14,-212,-67,14,14,-96,-90,-213,-214,-215,]),'CHAR':([20,58,60,102,132,203,211,212,249,283,289,298,299,337,],[-17,-15,133,133,133,133,133,-16,133,133,133,133,133,133,]),'FOR':([23,],[116,]),'LPAREN':([6,9,11,14,16,20,22,26,27,30,32,37,40,41,47,48,49,50,51,52,53,54,64,66,76,78,81,85,87,106,107,113,120,126,129,130,133,135,136,140,142,143,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,181,182,209,211,214,215,217,219,221,231,235,243,244,250,258,259,270,272,275,290,291,295,296,297,298,301,306,312,318,319,321,],[-201,-207,66,-203,66,-17,107,-204,-208,-205,120,-202,-206,66,-152,-153,66,-149,-154,-151,-148,-150,66,66,66,-129,107,66,-130,66,66,66,66,-36,209,-37,-38,-32,-34,214,-35,-33,66,-118,-120,-119,-121,-117,-126,-124,66,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,66,-113,-108,66,66,239,107,66,66,66,66,66,66,66,66,66,66,66,66,297,209,66,66,66,214,209,66,-40,66,66,-39,66,337,209,66,66,]),'RPAREN':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,107,120,125,126,127,128,129,130,131,133,135,136,139,140,142,143,147,159,172,188,189,190,191,206,207,210,218,220,223,224,225,239,242,245,253,256,264,267,274,280,281,287,296,297,300,301,302,304,315,316,317,324,325,327,328,331,332,334,339,340,348,350,352,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,189,206,-31,-36,-30,-28,-29,-37,-46,-38,-32,-34,-47,-41,-35,-33,220,-128,-135,-193,-189,-191,245,-199,253,-45,-70,-92,-116,-123,-103,282,-65,-190,-200,296,301,-44,-89,-216,311,-192,-40,189,-48,-39,-73,-95,-218,-219,-67,-42,-193,-50,-55,-96,-90,-217,-220,-221,351,353,-224,]),'RBRACKET':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,126,130,133,135,136,142,143,144,145,159,172,184,185,186,189,206,218,220,223,224,225,226,227,242,245,253,257,259,260,261,262,263,266,267,268,274,285,286,296,301,302,304,308,317,324,326,331,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-36,-37,-38,-32,-34,-35,-33,-71,218,-128,-135,-66,-56,242,-189,-199,-70,-92,-116,-123,-103,274,-56,-65,-190,-200,-51,-53,299,-54,300,-49,-72,-44,302,-89,-69,317,-40,-39,-73,-95,332,-67,-42,-52,-96,-90,]),'IN':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,200,202,206,218,220,223,224,225,242,245,248,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,166,-76,-87,-85,-131,-86,-78,-128,-135,-189,-179,249,-199,-70,-92,-116,-123,-103,-65,-190,289,-200,-57,-89,-73,-67,-90,]),'PROC':([105,],[181,]),'MULCREASE':([1,7,17,18,19,20,22,31,35,42,46,55,182,189,206,218,242,245,253,302,317,],[47,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-57,-189,-199,-70,-65,-190,-200,-73,-67,]),'TO':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,159,172,185,189,206,218,220,223,224,225,242,245,253,274,292,293,294,302,304,317,320,322,331,332,343,344,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-128,-135,-56,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-89,-183,-180,319,-73,-95,-67,319,319,-96,-90,-181,319,]),'LBRACKET':([1,7,10,17,18,19,20,22,31,35,42,46,55,68,69,72,74,75,77,79,80,81,86,88,90,92,94,96,97,98,99,134,138,172,182,189,206,218,220,242,245,253,258,274,302,317,332,],[-74,-188,64,-63,-58,-60,-17,106,-62,-61,-187,-59,-64,-81,-91,-82,-80,-88,-63,-75,-84,106,-79,-77,-76,-87,-85,-74,-86,173,-78,211,213,-74,106,-189,-199,-70,-92,-65,-190,-200,106,-89,-73,-67,-90,]),'MODCREASE':([1,7,17,18,19,20,22,31,35,42,46,55,182,189,206,218,242,245,253,302,317,],[51,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-57,-189,-199,-70,-65,-190,-200,-73,-67,]),'MINUS':([7,11,16,18,19,20,31,35,41,42,46,47,48,49,50,51,52,53,54,55,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,86,88,90,92,94,96,97,99,106,107,113,120,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,189,206,209,211,214,215,217,218,219,220,221,223,224,225,231,235,242,243,244,245,250,253,258,270,272,274,275,295,297,298,302,306,317,319,321,332,],[-188,78,78,-58,-60,-17,-62,-61,78,-187,-59,-152,-153,78,-149,-154,-151,-148,-150,-64,78,78,-122,-81,-133,-127,-134,-82,-132,-80,-88,78,-63,-75,-84,-57,151,-83,-115,-79,-77,-76,-87,-85,-131,-86,-78,78,78,78,78,78,-118,-120,-119,-121,-117,-126,-124,78,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,78,-113,-108,-135,78,78,-189,-199,78,78,78,78,78,-70,78,-92,78,-116,-123,151,78,78,-65,78,78,-190,78,-200,-57,78,78,-89,78,78,78,78,-73,78,-67,78,78,-90,]),'NULL':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[92,92,92,-152,-153,92,-149,-154,-151,-148,-150,92,92,92,-129,92,-130,92,92,92,92,92,-118,-120,-119,-121,-117,-126,-124,92,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,92,-113,-108,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'THEN':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,103,104,148,159,172,189,206,218,220,223,224,225,242,245,253,274,279,302,304,305,317,330,331,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-97,177,221,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-89,177,-73,-95,221,-67,221,-96,-90,]),'STRCAT':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,153,-83,-115,-79,-77,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,153,-65,-190,-200,-57,-89,-73,-67,-90,]),'ASSIGN':([1,7,17,18,19,20,22,31,35,42,46,55,58,102,118,125,126,127,128,129,130,131,133,135,136,139,140,141,142,143,176,182,189,200,202,206,210,212,218,242,245,253,296,300,301,302,317,327,328,],[53,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-15,175,203,-31,-36,-30,-28,-29,-37,-46,-38,-32,-34,-47,-41,215,-35,-33,231,-57,-189,-179,250,-199,-45,-16,-70,-65,-190,-200,-40,-48,-39,-73,-67,-50,-55,]),'ID':([0,3,4,5,7,11,12,13,15,16,18,19,20,23,24,25,29,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,58,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,102,105,106,107,110,112,113,116,120,123,124,132,137,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,203,204,205,206,209,211,212,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,239,241,242,243,244,245,246,249,250,253,270,272,274,275,276,277,283,289,295,297,298,299,302,304,306,310,313,317,319,321,331,332,335,337,338,347,],[20,20,20,20,-188,20,-4,-2,20,20,-58,-60,-17,20,-6,-8,20,-62,-7,-61,-5,20,-187,-59,-152,-153,20,-149,-154,-151,-148,-150,-64,-136,-15,20,-3,20,20,-122,-81,-133,-127,-134,-82,-132,-80,-88,20,-63,-129,-75,-84,-57,-102,-83,-115,20,-79,-130,-77,-93,-76,-94,-87,20,-85,-131,-86,-78,-19,20,20,20,20,20,20,-159,20,20,20,-9,20,20,20,20,-118,-120,-119,-121,-117,-126,-124,20,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,20,-113,-108,-135,20,-20,20,20,20,-189,20,-160,20,20,-24,20,-199,20,20,-16,20,20,20,-70,20,-92,20,-116,-123,-103,-23,-21,20,20,20,20,-137,-209,20,20,-65,20,20,-190,20,20,20,-200,20,20,-89,20,-22,20,20,20,20,20,20,20,-73,-95,20,20,-212,-67,20,20,-96,-90,-213,20,-214,-215,]),'FI':([7,18,19,20,31,35,42,46,55,56,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,112,159,172,177,178,189,194,206,218,220,223,224,225,232,233,234,237,242,245,253,271,274,277,302,303,304,307,309,317,331,332,333,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-136,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-159,-128,-135,-157,236,-189,-160,-199,-70,-92,-116,-123,-103,-158,-161,278,-137,-65,-190,-200,304,-89,-162,-73,-99,-95,331,-163,-67,-96,-90,-164,]),'CCONST':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[97,97,97,-152,-153,97,-149,-154,-151,-148,-150,97,97,97,-129,97,-130,97,97,97,97,97,-118,-120,-119,-121,-117,-126,-124,97,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,97,-113,-108,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'DO':([0,4,7,12,13,18,19,20,23,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,105,110,112,123,159,172,174,177,183,189,192,194,196,204,206,218,220,223,224,225,229,230,232,233,237,238,241,242,245,246,253,274,276,277,302,304,313,317,331,332,335,338,347,],[23,23,-188,-4,-2,-58,-60,-17,23,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,23,23,-159,-9,-128,-135,-20,23,23,-189,23,-160,23,-24,-199,-70,-92,-116,-123,-103,-23,-21,23,23,-137,-209,23,-65,-190,23,-200,-89,-22,23,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'BY':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,274,292,293,294,302,304,317,331,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-89,-183,-180,321,-73,-95,-67,-96,-90,]),'MOD':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,83,84,86,88,90,92,94,96,97,99,159,172,189,206,218,220,223,224,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-83,155,-79,-77,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,155,-123,-65,-190,-200,-57,-89,-73,-67,-90,]),'$end':([4,7,12,13,18,19,20,24,25,31,33,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,123,159,172,174,189,204,206,218,220,223,224,225,229,230,237,238,242,245,253,274,276,302,304,317,331,332,],[-1,-188,-4,-2,-58,-60,-17,-6,-8,-62,0,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,-9,-128,-135,-20,-189,-24,-199,-70,-92,-116,-123,-103,-23,-21,-137,-209,-65,-190,-200,-89,-22,-73,-95,-67,-96,-90,]),'SYN':([0,4,7,12,13,18,19,20,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,123,159,172,174,183,189,204,206,218,220,223,224,225,229,230,237,238,241,242,245,253,274,276,302,304,313,317,331,332,335,338,347,],[15,15,-188,-4,-2,-58,-60,-17,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,-9,-128,-135,-20,15,-189,-24,-199,-70,-92,-116,-123,-103,-23,-21,-137,-209,15,-65,-190,-200,-89,-22,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'FALSE':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[80,80,80,-152,-153,80,-149,-154,-151,-148,-150,80,80,80,-129,80,-130,80,80,80,80,80,-118,-120,-119,-121,-117,-126,-124,80,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,80,-113,-108,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'DECREASE':([1,7,17,18,19,20,22,31,35,42,46,55,182,189,206,218,242,245,253,302,317,],[52,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-57,-189,-199,-70,-65,-190,-200,-73,-67,]),'ELSE':([7,18,19,20,31,35,42,46,55,56,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,112,159,172,177,178,189,194,206,218,220,222,223,224,225,232,237,242,245,253,269,273,274,302,304,309,317,329,331,332,346,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-136,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-159,-128,-135,-157,233,-189,-160,-199,-70,-92,270,-116,-123,-103,-158,-137,-65,-190,-200,-98,270,-89,-73,-95,233,-67,-100,-96,-90,-101,]),'NOT':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[87,87,87,-152,-153,87,-149,-154,-151,-148,-150,87,87,87,87,87,87,87,87,-118,-120,-119,-121,-117,-126,-124,87,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,87,-113,-108,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'TYPE':([0,4,7,12,13,18,19,20,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,123,159,172,174,183,189,204,206,218,220,223,224,225,229,230,237,238,241,242,245,253,274,276,302,304,313,317,331,332,335,338,347,],[29,29,-188,-4,-2,-58,-60,-17,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,-9,-128,-135,-20,29,-189,-24,-199,-70,-92,-116,-123,-103,-23,-21,-137,-209,29,-65,-190,-200,-89,-22,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'WHILE':([7,18,19,20,23,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,109,126,130,133,135,136,142,143,159,172,189,198,199,201,206,218,220,223,224,225,242,245,253,274,291,292,296,301,302,304,317,318,323,331,332,341,342,345,349,],[-188,-58,-60,-17,113,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,113,-36,-37,-38,-32,-34,-35,-33,-128,-135,-189,-174,-173,-172,-199,-70,-92,-116,-123,-103,-65,-190,-200,-89,-184,-183,-40,-39,-73,-95,-67,-185,-175,-96,-90,-182,-177,-176,-178,]),'LOWER':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[30,30,-188,30,-4,-2,30,-58,-60,-17,30,-6,-8,-62,-7,-61,-5,30,-187,-59,-152,-153,30,-149,-154,-151,-148,-150,-64,-136,-3,30,30,-122,-81,-133,-127,-134,-82,-132,-80,-88,30,-63,-129,-75,-84,-57,-102,-83,-115,30,-79,-130,-77,-93,-76,-94,-87,30,-85,-131,-86,-78,-19,-18,30,30,30,30,-159,30,30,-9,30,-118,-120,-119,-121,-117,-126,-124,30,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,30,-113,-108,-135,30,-20,30,30,30,-189,30,-160,30,-24,-199,30,30,30,30,30,-70,30,-92,30,-116,-123,-103,-23,-21,30,30,30,30,-137,-209,30,-65,30,30,-190,30,30,-200,30,30,-89,30,-22,30,30,30,30,-73,-95,30,-212,-67,30,30,-96,-90,-213,-214,-215,]),'PLUS':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,152,-83,-115,-79,-77,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,152,-65,-190,-200,-57,-89,-73,-67,-90,]),'LESSEQ':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,170,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'IF':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,105,106,107,110,112,113,120,123,159,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[16,16,-188,76,-4,-2,76,-58,-60,-17,16,-6,-8,-62,-7,-61,-5,76,-187,-59,-152,-153,76,-149,-154,-151,-148,-150,-64,-136,-3,76,76,-122,-81,-133,-127,-134,-82,-132,-80,-88,76,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,16,76,76,16,-159,76,76,-9,-128,-135,76,-20,76,16,16,-189,16,-160,16,-24,-199,76,76,76,76,76,-70,76,-92,76,-116,-123,-103,-23,-21,76,16,16,76,-137,-209,16,-65,76,76,-190,16,76,-200,76,76,-89,76,-22,16,76,76,76,-73,-95,76,-212,-67,76,76,-96,-90,-213,-214,-215,]),'CHARS':([20,58,60,102,132,203,212,283,299,337,],[-17,-15,138,138,138,138,-16,138,138,138,]),'INCREASE':([1,7,17,18,19,20,22,31,35,42,46,55,182,189,206,218,242,245,253,302,317,],[54,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-57,-189,-199,-70,-65,-190,-200,-73,-67,]),'PRINT':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[27,27,-188,27,-4,-2,27,-58,-60,-17,27,-6,-8,-62,-7,-61,-5,27,-187,-59,-152,-153,27,-149,-154,-151,-148,-150,-64,-136,-3,27,27,-122,-81,-133,-127,-134,-82,-132,-80,-88,27,-63,-129,-75,-84,-57,-102,-83,-115,27,-79,-130,-77,-93,-76,-94,-87,27,-85,-131,-86,-78,-19,-18,27,27,27,27,-159,27,27,-9,27,-118,-120,-119,-121,-117,-126,-124,27,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,27,-113,-108,-135,27,-20,27,27,27,-189,27,-160,27,-24,-199,27,27,27,27,27,-70,27,-92,27,-116,-123,-103,-23,-21,27,27,27,27,-137,-209,27,-65,27,27,-190,27,27,-200,27,27,-89,27,-22,27,27,27,27,-73,-95,27,-212,-67,27,27,-96,-90,-213,-214,-215,]),'DIVCREASE':([1,7,17,18,19,20,22,31,35,42,46,55,182,189,206,218,242,245,253,302,317,],[48,-188,-63,-58,-60,-17,-57,-62,-61,-187,-59,-64,-57,-189,-199,-70,-65,-190,-200,-73,-67,]),'COLON':([7,18,19,20,21,22,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,111,144,146,159,172,184,185,187,189,206,218,220,223,224,225,227,228,242,245,253,254,255,258,274,302,304,317,325,331,332,],[-188,-58,-60,-17,105,-138,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,196,-43,219,-128,-135,-68,-56,243,-189,-199,-70,-92,-116,-123,-103,-43,275,-65,-190,-200,-43,295,-57,-89,-73,-95,-67,-43,-96,-90,]),'LENGTH':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[40,40,-188,40,-4,-2,40,-58,-60,-17,40,-6,-8,-62,-7,-61,-5,40,-187,-59,-152,-153,40,-149,-154,-151,-148,-150,-64,-136,-3,40,40,-122,-81,-133,-127,-134,-82,-132,-80,-88,40,-63,-129,-75,-84,-57,-102,-83,-115,40,-79,-130,-77,-93,-76,-94,-87,40,-85,-131,-86,-78,-19,-18,40,40,40,40,-159,40,40,-9,40,-118,-120,-119,-121,-117,-126,-124,40,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,40,-113,-108,-135,40,-20,40,40,40,-189,40,-160,40,-24,-199,40,40,40,40,40,-70,40,-92,40,-116,-123,-103,-23,-21,40,40,40,40,-137,-209,40,-65,40,40,-190,40,40,-200,40,40,-89,40,-22,40,40,40,40,-73,-95,40,-212,-67,40,40,-96,-90,-213,-214,-215,]),'DIVIDE':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,83,84,86,88,90,92,94,96,97,99,159,172,189,206,218,220,223,224,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-83,158,-79,-77,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,158,-123,-65,-190,-200,-57,-89,-73,-67,-90,]),'GREATER':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,161,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'END':([7,12,13,18,19,20,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,123,159,172,174,183,189,204,206,218,220,223,224,225,229,230,237,238,241,242,245,253,274,276,302,304,313,317,331,332,335,338,347,],[-188,-4,-2,-58,-60,-17,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,-9,-128,-135,-20,240,-189,-24,-199,-70,-92,-116,-123,-103,-23,-21,-137,-209,284,-65,-190,-200,-89,-22,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'ASC':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[37,37,-188,37,-4,-2,37,-58,-60,-17,37,-6,-8,-62,-7,-61,-5,37,-187,-59,-152,-153,37,-149,-154,-151,-148,-150,-64,-136,-3,37,37,-122,-81,-133,-127,-134,-82,-132,-80,-88,37,-63,-129,-75,-84,-57,-102,-83,-115,37,-79,-130,-77,-93,-76,-94,-87,37,-85,-131,-86,-78,-19,-18,37,37,37,37,-159,37,37,-9,37,-118,-120,-119,-121,-117,-126,-124,37,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,37,-113,-108,-135,37,-20,37,37,37,-189,37,-160,37,-24,-199,37,37,37,37,37,-70,37,-92,37,-116,-123,-103,-23,-21,37,37,37,37,-137,-209,37,-65,37,37,-190,37,37,-200,37,37,-89,37,-22,37,37,37,37,-73,-95,37,-212,-67,37,37,-96,-90,-213,-214,-215,]),'OR':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,163,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'ARROW':([1,7,11,16,17,18,19,20,22,31,35,41,42,46,47,48,49,50,51,52,53,54,55,64,66,76,77,78,81,85,87,96,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,182,189,206,209,211,214,215,217,218,219,221,231,235,242,243,244,245,250,253,258,270,272,275,295,297,298,302,306,317,319,321,],[55,-188,93,93,-63,-58,-60,-17,-57,-62,-61,93,-187,-59,-152,-153,93,-149,-154,-151,-148,-150,-64,93,93,93,-63,-129,-57,93,-130,55,93,93,93,93,93,-118,-120,-119,-121,-117,-126,-124,93,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,93,-113,-108,55,93,93,-57,-189,-199,93,93,93,93,93,-70,93,93,93,93,-65,93,93,-190,93,-200,-57,93,93,93,93,93,93,-73,93,-67,93,93,]),'TRUE':([11,16,41,47,48,49,50,51,52,53,54,64,66,76,78,85,87,106,107,113,120,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[94,94,94,-152,-153,94,-149,-154,-151,-148,-150,94,94,94,-129,94,-130,94,94,94,94,94,-118,-120,-119,-121,-117,-126,-124,94,-125,-112,-110,-109,-107,-104,-111,-114,-105,-106,94,-113,-108,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'RETURNS':([282,311,],[312,312,]),'SEMI':([2,7,8,11,17,18,19,20,28,31,35,36,38,42,43,44,45,46,55,57,59,62,63,65,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,95,96,97,99,103,108,109,114,115,117,119,121,122,125,126,127,128,129,130,131,133,135,136,139,140,141,142,143,159,172,179,180,189,193,195,197,198,199,201,206,208,210,216,218,220,223,224,225,236,240,242,245,247,251,252,253,265,274,278,282,284,288,291,292,296,300,301,302,304,311,314,317,318,323,327,328,331,332,336,341,342,345,349,351,353,],[56,-188,-142,-195,-141,-58,-60,-17,-146,-62,-61,-145,-143,-187,-144,-139,-140,-59,-64,123,-10,-138,-194,-198,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-196,-131,-86,-78,-97,192,-169,-165,-170,-25,204,-197,-147,-31,-36,-30,-28,-29,-37,-46,-38,-32,-34,-47,-41,-12,-35,-33,-128,-135,237,238,-189,-171,-167,-186,-174,-173,-172,-199,-11,-45,-13,-70,-92,-116,-123,-103,-155,-210,-65,-190,-166,-27,-26,-200,-14,-89,-156,313,-211,-168,-184,-183,-40,-48,-39,-73,-95,335,338,-67,-185,-175,-50,-55,-96,-90,347,-182,-177,-176,-178,-222,-223,]),'AND':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,168,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'ELSIF':([7,18,19,20,31,35,42,46,55,56,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,112,159,172,177,178,189,194,206,218,220,222,223,224,225,232,237,242,245,253,269,273,274,302,304,309,317,329,331,332,346,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-136,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-159,-128,-135,-157,235,-189,-160,-199,-70,-92,272,-116,-123,-103,-158,-137,-65,-190,-200,-98,306,-89,-73,-95,235,-67,-100,-96,-90,-101,]),'DIFF':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,92,94,96,97,99,159,172,189,206,218,220,223,224,225,242,245,253,258,274,302,317,332,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,162,-76,-87,-85,-131,-86,-78,-128,-135,-189,-199,-70,-92,-116,-123,-103,-65,-190,-200,-57,-89,-73,-67,-90,]),'RESULT':([0,4,7,12,13,18,19,20,23,24,25,31,34,35,39,42,46,55,56,61,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,100,101,105,110,112,123,159,172,174,177,183,189,192,194,196,204,206,218,220,223,224,225,229,230,232,233,237,238,241,242,245,246,253,274,276,277,302,304,313,317,331,332,335,338,347,],[41,41,-188,-4,-2,-58,-60,-17,41,-6,-8,-62,-7,-61,-5,-187,-59,-64,-136,-3,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-19,-18,41,41,-159,-9,-128,-135,-20,41,41,-189,41,-160,41,-24,-199,-70,-92,-116,-123,-103,-23,-21,41,41,-137,-209,41,-65,-190,41,-200,-89,-22,41,-73,-95,-212,-67,-96,-90,-213,-214,-215,]),'DOWN':([7,18,19,20,31,35,42,46,55,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,159,172,185,189,200,202,206,218,220,223,224,225,242,245,253,274,292,293,294,302,304,317,322,331,332,343,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,-128,-135,-56,-189,-179,248,-199,-70,-92,-116,-123,-103,-65,-190,-200,-89,-183,-180,320,-73,-95,-67,344,-96,-90,-181,]),'UPPER':([0,4,7,11,12,13,16,18,19,20,23,24,25,31,34,35,39,41,42,46,47,48,49,50,51,52,53,54,55,56,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,99,100,101,105,106,107,110,112,113,120,123,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,183,189,192,194,196,204,206,209,211,214,215,217,218,219,220,221,223,224,225,229,230,231,232,233,235,237,238,241,242,243,244,245,246,250,253,270,272,274,275,276,277,295,297,298,302,304,306,313,317,319,321,331,332,335,338,347,],[26,26,-188,26,-4,-2,26,-58,-60,-17,26,-6,-8,-62,-7,-61,-5,26,-187,-59,-152,-153,26,-149,-154,-151,-148,-150,-64,-136,-3,26,26,-122,-81,-133,-127,-134,-82,-132,-80,-88,26,-63,-129,-75,-84,-57,-102,-83,-115,26,-79,-130,-77,-93,-76,-94,-87,26,-85,-131,-86,-78,-19,-18,26,26,26,26,-159,26,26,-9,26,-118,-120,-119,-121,-117,-126,-124,26,-125,-128,-112,-110,-109,-107,-104,-111,-114,-105,-106,26,-113,-108,-135,26,-20,26,26,26,-189,26,-160,26,-24,-199,26,26,26,26,26,-70,26,-92,26,-116,-123,-103,-23,-21,26,26,26,26,-137,-209,26,-65,26,26,-190,26,26,-200,26,26,-89,26,-22,26,26,26,26,-73,-95,26,-212,-67,26,26,-96,-90,-213,-214,-215,]),'COMMA':([7,18,19,20,31,35,42,46,55,57,58,59,60,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,94,96,97,99,102,117,118,119,125,126,127,128,129,130,131,133,135,136,139,140,141,142,143,144,145,159,172,188,189,190,191,206,207,208,210,212,216,218,220,223,224,225,242,245,251,252,253,257,259,260,261,265,266,267,274,280,281,283,287,296,300,301,302,304,315,316,317,324,325,326,327,328,331,332,334,339,340,],[-188,-58,-60,-17,-62,-61,-187,-59,-64,124,-15,-10,137,-122,-81,-133,-127,-134,-82,-132,-80,-88,-63,-75,-84,-57,-102,-83,-115,-79,-77,-93,-76,-94,-87,-85,-131,-86,-78,137,-25,137,205,-31,-36,-30,-28,-29,-37,-46,-38,-32,-34,-47,-41,-12,-35,-33,-71,217,-128,-135,-193,-189,-191,244,-199,244,-11,-45,-16,-13,-70,-92,-116,-123,-103,-65,-190,-27,-26,-200,-51,-53,298,-54,-14,-72,-44,-89,-216,310,137,-192,-40,-48,-39,-73,-95,-218,-219,-67,-42,-193,-52,-50,-55,-96,-90,-217,-220,-221,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mode_definition':([29,205,],[117,252,]),'expression':([11,16,41,49,64,66,76,106,107,113,120,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[65,103,65,122,144,147,103,185,188,103,188,227,229,254,254,254,265,266,267,269,229,103,185,188,292,303,103,267,267,325,254,103,292,185,]),'result_spec':([282,311,],[314,336,]),'composite_mode':([60,102,132,203,283,299,337,],[125,125,125,125,125,125,125,]),'integer_expression':([106,173,243,321,],[184,226,285,343,]),'then_expression':([148,305,330,],[222,329,346,]),'operator1':([89,],[169,]),'closed_dyadic_operator':([1,],[50,]),'builtin_call':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'result_attribute':([348,],[350,]),'assigning_operator':([1,],[49,]),'procedure_definition':([105,],[180,]),'declaration_list':([3,],[57,]),'operand3':([11,16,41,49,64,66,76,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[67,67,67,67,67,67,67,67,67,67,67,67,224,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_location':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'range_enumeration':([116,],[198,]),'referenced_location':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'integer_mode':([60,102,132,203,211,249,283,289,298,299,337,],[135,135,135,135,135,135,135,135,135,135,135,]),'declaration_statement':([0,4,183,241,],[12,12,12,12,]),'character_literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'index_mode':([211,298,],[257,326,]),'discrete_expression':([250,319,],[293,341,]),'lower_bound':([64,173,209,211,214,297,298,],[146,228,255,255,255,255,255,]),'relational_operator':([89,],[164,]),'loop_counter':([116,],[202,]),'call_action':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[17,17,77,77,17,77,77,77,77,77,77,77,17,77,77,17,77,77,77,77,77,77,77,17,17,17,17,77,77,77,77,77,77,77,77,17,17,77,17,77,77,17,77,77,77,77,17,77,77,77,77,77,77,]),'for_control':([23,],[109,]),'identifier':([0,3,4,5,11,15,16,23,29,41,49,60,64,66,76,85,93,101,102,105,106,107,110,113,116,120,124,132,137,149,157,169,173,175,177,183,192,196,203,205,209,211,214,215,217,219,221,231,232,233,235,239,241,243,244,246,249,250,270,272,275,277,283,289,295,297,298,299,306,310,319,321,337,],[22,58,22,62,81,58,81,22,58,81,81,140,81,81,81,81,81,58,140,182,81,81,22,81,200,81,58,140,212,81,81,81,81,81,22,22,22,182,140,58,81,258,81,81,81,81,81,81,22,22,81,58,22,81,81,22,290,81,81,81,81,22,140,290,81,81,258,140,81,58,81,81,140,]),'dereferenced_reference':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'iteration':([116,],[201,]),'boolean_mode':([60,102,132,203,211,249,283,289,298,299,337,],[143,143,143,143,143,143,143,143,143,143,143,]),'literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'parameter_attribute':([316,],[339,]),'value_array_element':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'boolean_expression':([16,76,113,235,272,306,],[104,148,197,279,305,330,]),'action_statement':([0,4,23,110,177,183,192,232,233,241,246,277,],[25,25,112,194,112,25,112,194,112,25,194,194,]),'string_slice':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'synonym_list':([15,],[101,]),'monadic_operator':([11,16,41,49,64,66,76,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'formal_parameter_list':([239,],[281,]),'do_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'value_array_slice':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'operand0':([11,16,41,49,64,66,76,106,107,113,120,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'discrete_mode':([60,102,132,203,211,249,283,289,298,299,337,],[129,129,129,129,259,291,129,318,259,129,129,]),'else_expression':([222,273,],[271,307,]),'builtin_name':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'operand1':([11,16,41,49,64,66,76,106,107,113,120,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[82,82,82,82,82,82,82,82,82,82,82,225,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'parameter':([107,120,244,297,],[190,190,287,190,]),'parameter_list':([107,120,297,],[191,207,191,]),'conditional_expression':([11,16,41,49,64,66,76,106,107,113,120,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'procedure_statement':([0,4,183,241,],[34,34,34,34,]),'if_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expression_list':([64,],[145,]),'operator2':([82,225,],[149,149,]),'arithmetic_additive_operator':([82,225,],[154,154,]),'result':([11,41,],[95,121,]),'exit_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'string_length':([213,],[262,]),'end_value':([294,320,322,344,],[323,342,345,349,]),'bracketed_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'index_mode_list':([211,],[260,]),'location':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[1,1,96,96,1,96,96,96,96,96,96,172,1,96,96,1,96,96,96,96,96,96,96,1,1,1,1,96,96,96,96,96,96,96,96,1,1,96,1,96,96,1,96,96,96,96,1,96,96,96,96,96,96,]),'character_string_literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'start_element':([106,],[186,]),'primitive_value':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'operand4':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[70,70,70,70,70,70,70,159,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'integer_literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,213,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,263,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'array_element':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'synonym_statement':([0,4,183,241,],[39,39,39,39,]),'control_part':([23,],[108,]),'action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[2,2,2,179,2,2,2,2,179,2,2,2,2,2,]),'right_element':([243,],[286,]),'newmode_list':([29,],[119,]),'declaration':([3,124,],[59,208,]),'elsif_expression':([222,],[273,]),'return_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'constant_expression':([175,231,],[230,276,]),'upper_bound':([219,275,295,],[268,308,324,]),'empty_literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'then_clause':([104,279,],[178,309,]),'parameter_spec':([283,],[315,]),'else_clause':([178,309,],[234,333,]),'parenthesized_expression':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'statement_list':([0,183,],[4,241,]),'action_statement_list':([23,177,192,233,],[110,232,246,277,]),'literal_range':([209,211,214,297,298,],[256,261,264,264,261,]),'step_value':([294,],[322,]),'label_id':([0,4,5,23,110,177,183,192,232,233,241,246,277,],[21,21,63,111,111,111,21,111,111,111,21,111,111,]),'left_element':([106,],[187,]),'newmode_statement':([0,4,183,241,],[24,24,24,24,]),'operand2':([11,16,41,49,64,66,76,106,107,113,120,149,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[84,84,84,84,84,84,84,84,84,84,84,223,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'array_slice':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'element_mode':([299,],[327,]),'reference_mode':([60,102,132,203,283,299,337,],[127,127,127,127,127,127,127,]),'boolean_literal':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'mode_name':([60,102,132,203,283,299,337,],[128,128,128,128,128,128,128,]),'start_value':([250,],[294,]),'synonym_definition':([15,101,],[100,174,]),'formal_parameter':([239,310,],[280,334,]),'string_mode':([60,102,132,203,283,299,337,],[131,131,131,131,131,131,131,]),'identifier_list':([3,15,29,101,124,205,239,310,],[60,102,118,102,60,118,283,283,]),'initialization':([141,],[216,]),'character_mode':([60,102,132,203,211,249,283,289,298,299,337,],[136,136,136,136,136,136,136,136,136,136,136,]),'program':([0,],[33,]),'statement':([0,4,183,241,],[13,61,13,61,]),'string_element':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'step_enumeration':([116,],[199,]),'arithmetic_multiplicative_operator':([84,223,],[157,157,]),'while_control':([23,109,],[115,193,]),'assignment_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'membership_operator':([89,],[167,]),'string_concatenation_operator':([82,225,],[150,150,]),'array_mode':([60,102,132,203,283,299,337,],[139,139,139,139,139,139,139,]),'mode':([60,102,132,203,283,299,337,],[141,176,210,251,316,328,348,]),'formal_procedure_head':([105,],[183,]),'discrete_range_mode':([60,102,132,203,211,249,283,289,298,299,337,],[142,142,142,142,142,142,142,142,142,142,142,]),'procedure_call':([0,4,11,16,23,41,49,64,66,76,85,93,105,106,107,110,113,120,149,157,169,173,175,177,183,192,196,209,211,214,215,217,219,221,231,232,233,235,241,243,244,246,250,270,272,275,277,295,297,298,306,319,321,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'result_action':([0,4,23,105,110,177,183,192,196,232,233,241,246,277,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'array_primitive_value':([11,16,41,49,64,66,76,85,106,107,113,120,149,157,169,173,175,209,211,214,215,217,219,221,231,235,243,244,250,270,272,275,295,297,298,306,319,321,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',20),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',25),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',26),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',38),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',42),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',54),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',55),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',62),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',66),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',67),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',74),
  ('synonym_statement -> SYN synonym_list','synonym_statement',2,'p_synonym_statement','parser.py',79),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',83),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',84),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',91),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',92),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',99),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',103),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',107),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',108),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',115),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',119),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',120),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',121),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',122),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',126),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',127),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',128),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',129),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',133),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',137),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',141),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',145),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',146),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',150),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',158),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',162),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',166),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',170),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',174),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',175),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',179),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',183),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',187),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',191),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',192),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',199),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',200),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',204),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',208),
  ('location -> identifier','location',1,'p_location','parser.py',212),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',213),
  ('location -> string_element','location',1,'p_location','parser.py',214),
  ('location -> string_slice','location',1,'p_location','parser.py',215),
  ('location -> array_element','location',1,'p_location','parser.py',216),
  ('location -> array_slice','location',1,'p_location','parser.py',217),
  ('location -> call_action','location',1,'p_location','parser.py',218),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',222),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',226),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',230),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',234),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',242),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',246),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',250),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',254),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',255),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',262),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',266),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',270),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',271),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',272),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',273),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',277),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',278),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',279),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',280),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',284),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',288),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',289),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',294),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',298),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',303),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',307),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',311),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',315),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',319),
  ('expression -> operand0','expression',1,'p_expression','parser.py',323),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',324),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',328),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',329),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',336),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',340),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',344),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',348),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',349),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',356),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',357),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',364),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',365),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',369),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',370),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',371),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',372),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',373),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',374),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',375),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',376),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',380),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',384),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',385),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',392),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',393),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',397),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',398),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',402),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',406),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',407),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',414),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',415),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',416),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',420),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',421),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',428),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',429),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',433),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',434),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',435),
  ('operand4 -> integer_literal','operand4',1,'p_operand4','parser.py',436),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',440),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',444),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',445),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',452),
  ('action -> bracketed_action','action',1,'p_action','parser.py',456),
  ('action -> assignment_action','action',1,'p_action','parser.py',457),
  ('action -> call_action','action',1,'p_action','parser.py',458),
  ('action -> exit_action','action',1,'p_action','parser.py',459),
  ('action -> return_action','action',1,'p_action','parser.py',460),
  ('action -> result_action','action',1,'p_action','parser.py',461),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',465),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',466),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',470),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',488),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',489),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',494),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',495),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',496),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',497),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',498),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',502),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',503),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',510),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',511),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',518),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',519),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',526),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',527),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',528),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',529),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',540),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',541),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',542),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',543),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',552),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',553),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',554),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',561),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',565),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',566),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',570),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',571),
  ('step_enumeration -> loop_counter ASSIGN start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',572),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',573),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',582),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',586),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',590),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',594),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',598),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',602),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',603),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',610),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',614),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',615),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',619),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',620),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',627),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',628),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',635),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',643),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',647),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',648),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',655),
  ('result -> expression','result',1,'p_result','parser.py',659),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',663),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',664),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',671),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',672),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',673),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',674),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',675),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',676),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',677),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',678),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',682),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',686),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',687),
  ('formal_procedure_head -> PROC LPAREN RPAREN SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',694),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',695),
  ('formal_procedure_head -> PROC LPAREN RPAREN result_spec SEMI','formal_procedure_head',5,'p_formal_procedure_head','parser.py',696),
  ('formal_procedure_head -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI','formal_procedure_head',6,'p_formal_procedure_head','parser.py',697),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',707),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',708),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',715),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',719),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',720),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',727),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',731),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','parser.py',732),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',739),
]
