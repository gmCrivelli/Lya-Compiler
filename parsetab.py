
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE DIFF MOD NOT ICONST CCONST SCONST FOR ARRAY NULL EXIT RETURN ELSIF INT BY READ TO ABS DO LENGTH FALSE THEN NUM OD RETURNS DOWN BOOL DCL REF ELSE TYPE LOWER IN FI TRUE LOC CHAR RESULT UPPER SYN IF WHILE CHARS PROC END ASC PRINTprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : identifier\n                           | identifier_list COMMA identifieridentifier : IDsynonym_statement : SYN synonym_list SEMIsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN constant_expression\n                              | identifier_list mode ASSIGN constant_expressionconstant_expression : expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : integer_mode\n                | boolean_mode\n                | character_mode\n                | discrete_range_modeinteger_mode : INTboolean_mode : BOOLcharacter_mode : CHARdiscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET ICONST RBRACKETarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : integer_literal\n                   | boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_valuereferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call : identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT exit_label_idexit_label_id :  identifierreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call : builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode LOC RPAREN'
    
_lr_action_items = {'DIFF':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,148,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'MOD':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,65,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-80,-125,-79,160,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,160,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'CHARS':([2,48,50,103,131,173,200,266,293,305,],[-17,-15,137,137,137,137,-16,137,137,137,]),'ID':([0,2,3,6,7,8,9,12,13,16,17,18,21,22,23,25,27,28,29,30,40,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,84,85,86,87,94,95,96,97,98,99,100,101,102,103,107,108,109,111,114,115,116,117,118,119,123,126,131,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,171,172,173,174,178,179,181,183,190,194,196,200,201,202,204,205,207,208,210,211,212,213,217,218,220,222,223,226,228,230,231,234,235,238,240,241,242,243,244,245,246,259,260,262,263,266,270,273,281,287,291,292,293,295,296,303,304,305,309,310,313,319,322,331,],[2,-17,-5,2,2,2,-179,-8,2,2,-2,-6,-4,2,-59,2,-57,2,2,-7,-58,-178,2,-15,-19,2,-3,-60,-67,-71,-120,-72,-78,2,2,-74,-76,-123,-122,-95,-80,-86,-125,-79,-108,-87,-69,2,-124,-81,-68,-70,2,-75,-115,-77,-56,-73,-126,2,-143,-141,2,-144,-145,-140,-61,-146,-142,2,2,2,-151,2,-128,2,2,2,-18,-20,2,2,2,-127,-112,2,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,2,-119,-117,-118,2,-121,2,2,2,-24,2,2,2,-9,-152,2,2,-191,-180,-16,-23,-21,2,2,2,2,2,-109,-96,-116,-85,2,2,-201,-129,2,2,2,2,2,2,2,-192,2,-181,2,-62,2,-22,2,2,2,-82,2,-204,2,2,2,2,2,2,2,-88,2,-205,2,2,2,-65,-89,-83,2,]),'RBRACKET':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,120,121,124,125,129,130,134,141,164,194,196,198,199,211,212,213,215,216,217,240,242,244,250,252,254,255,256,263,284,285,286,288,290,296,299,313,314,316,319,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-35,-36,-32,-38,-34,-37,-33,-127,-121,-191,-180,-63,244,-109,-96,-116,-55,263,-85,-192,-181,-62,289,-50,293,-52,-53,-82,-44,313,-64,-40,-39,-88,322,-65,-42,-51,-89,-83,]),'MULCREASE':([1,2,9,23,26,27,40,41,43,84,100,194,196,240,242,244,313,],[-60,-17,-179,-59,97,-57,-58,-56,-178,-56,-61,-191,-180,-192,-181,-62,-65,]),'EQUAL':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,154,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'LOWER':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[4,-5,4,-8,4,-2,-6,-4,4,4,4,-7,-3,4,4,-123,-122,4,4,4,-143,-141,4,-144,-145,-140,-146,-142,4,4,-151,-128,4,4,4,-18,4,-112,4,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,4,-119,-117,-118,4,4,4,-24,4,-9,-152,4,4,4,4,4,4,4,4,-201,-129,4,4,4,4,4,4,4,4,4,4,4,4,-204,4,4,4,4,4,-205,4,4,4,]),'ASSIGN':([1,2,9,23,26,27,40,41,43,48,50,84,90,100,120,121,122,124,125,127,128,129,130,132,133,134,135,136,138,177,185,187,194,196,200,203,240,242,244,288,289,290,313,317,318,],[-60,-17,-179,-59,99,-57,-58,-56,-178,-15,126,-56,173,-61,-35,-36,-47,-32,-38,-46,-31,-34,-37,204,-30,-33,-29,-28,-41,231,235,-169,-191,-180,-16,-45,-192,-181,-62,-40,-48,-39,-65,-54,-49,]),'INT':([2,48,50,103,131,173,200,208,234,266,281,292,293,305,],[-17,-15,121,121,121,121,-16,121,121,121,121,121,121,121,]),'EXIT':([0,3,8,12,17,18,21,29,30,51,87,108,109,114,118,167,172,174,179,181,183,190,218,222,223,226,228,238,270,273,304,],[6,-5,6,-8,-2,-6,-4,6,-7,-3,6,6,-151,-128,-18,6,-24,6,-9,-152,6,6,6,-201,-129,6,6,6,-204,6,-205,]),'LPAREN':([2,4,10,13,15,20,22,24,25,33,36,38,39,41,58,62,63,73,79,84,94,95,96,97,98,99,101,102,107,115,116,117,120,121,124,125,126,129,130,134,135,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,168,204,205,207,208,210,230,231,235,241,243,245,253,255,259,260,262,271,276,277,287,288,290,291,292,295,309,310,312,331,],[-17,-197,-193,79,-195,-194,79,-199,79,-198,-200,115,-196,116,79,-123,-122,79,79,116,-143,-141,79,-144,-145,-140,-146,-142,79,79,79,79,-35,-36,-32,-38,79,-34,-37,-33,205,207,-112,79,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,79,-119,-117,-118,79,79,220,79,79,79,79,79,79,79,79,79,79,79,291,205,79,79,79,305,205,207,79,-40,-39,79,79,79,79,79,205,79,]),'AND':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,157,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'DOWN':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,141,164,185,187,194,196,211,212,213,217,240,242,244,263,278,279,280,296,308,313,319,322,329,330,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,236,-169,-191,-180,-109,-96,-116,-85,-192,-181,-62,-82,311,-174,-170,-88,311,-65,-89,-83,-55,-171,]),'WHILE':([2,9,23,27,29,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,120,121,124,125,129,130,134,141,164,184,186,188,189,194,196,211,212,213,217,240,242,244,263,276,279,288,290,296,307,312,313,319,322,327,328,335,],[-17,-179,-59,-57,107,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-35,-36,-32,-38,-34,-37,-33,-127,-121,-164,-165,107,-166,-191,-180,-109,-96,-116,-85,-192,-181,-62,-82,-175,-174,-40,-39,-88,-167,-176,-65,-89,-83,-168,-172,-173,]),'TRUE':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[57,57,57,57,-123,-122,57,57,-143,-141,57,-144,-145,-140,-146,-142,57,57,57,57,57,-112,57,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,57,-119,-117,-118,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ASC':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[20,-5,20,-8,20,-2,-6,-4,20,20,20,-7,-3,20,20,-123,-122,20,20,20,-143,-141,20,-144,-145,-140,-146,-142,20,20,-151,-128,20,20,20,-18,20,-112,20,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,20,-119,-117,-118,20,20,20,-24,20,-9,-152,20,20,20,20,20,20,20,20,-201,-129,20,20,20,20,20,20,20,20,20,20,20,20,-204,20,20,20,20,20,-205,20,20,20,]),'IF':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[22,-5,22,-8,58,-2,-6,-4,58,58,22,-7,-3,58,58,22,-143,-141,58,-144,-145,-140,-146,-142,58,22,-151,-128,58,58,58,-18,58,58,22,-24,22,-9,-152,22,22,58,58,58,58,58,22,-201,-129,22,22,58,58,58,22,58,58,58,58,58,58,-204,22,58,58,58,58,-205,58,58,58,]),'REF':([2,48,50,103,131,173,200,266,293,305,],[-17,-15,131,131,131,131,-16,131,131,131,]),'FI':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,109,114,141,164,174,175,181,194,196,211,212,213,217,223,226,227,228,240,242,244,258,263,273,294,296,298,306,313,319,322,326,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-151,-128,-127,-121,-149,229,-152,-191,-180,-109,-96,-116,-85,-129,-150,272,-153,-192,-181,-62,296,-82,-154,319,-88,-92,-155,-65,-89,-83,-156,]),'ICONST':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,206,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[61,61,61,61,-123,-122,61,61,-143,-141,61,-144,-145,-140,-146,-142,61,61,61,61,61,-112,61,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,61,-119,-117,-118,61,61,61,61,250,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ARROW':([1,2,9,13,22,23,25,26,27,40,41,43,52,58,62,63,73,74,79,84,94,95,96,97,98,99,100,101,102,107,115,116,117,126,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,194,196,204,205,207,208,210,230,231,235,240,241,242,243,244,245,253,259,260,262,287,291,292,295,309,310,313,331,],[-60,-17,-179,59,59,-59,59,100,-57,-58,-56,-178,-60,59,-123,-122,59,100,59,-56,-143,-141,59,-144,-145,-140,-61,-146,-142,59,59,59,59,59,100,-112,59,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,59,-119,-117,-118,59,59,-191,-180,59,59,59,59,59,59,59,59,-192,59,-181,59,-62,59,-56,59,59,59,59,59,59,59,59,59,-65,59,]),'COLON':([2,9,14,23,27,40,41,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,110,141,164,194,196,197,198,211,212,213,214,215,217,240,242,244,247,249,253,263,296,313,315,319,322,],[-17,-179,87,-59,-57,-58,-130,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,183,-127,-121,-191,-180,243,-43,-109,-96,-116,262,-43,-85,-192,-181,-62,287,-43,-56,-82,-88,-65,-43,-89,-83,]),'OR':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,149,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'RETURNS':([221,265,302,],[271,-206,-207,]),'STRCAT':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,144,-80,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,144,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'IN':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,185,187,194,196,211,212,213,217,236,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,151,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,234,-169,-191,-180,-109,-96,-116,-85,281,-192,-181,-62,-56,-82,-65,-83,]),'GREATER':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,152,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'RESULT':([0,3,8,12,17,18,21,29,30,51,87,108,109,114,118,167,172,174,179,181,183,190,218,222,223,226,228,238,270,273,304,],[13,-5,13,-8,-2,-6,-4,13,-7,-3,13,13,-151,-128,-18,13,-24,13,-9,-152,13,13,13,-201,-129,13,13,13,-204,13,-205,]),'NULL':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[65,65,65,65,-123,-122,65,65,-143,-141,65,-144,-145,-140,-146,-142,65,65,65,65,65,-112,65,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,65,-119,-117,-118,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'READ':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[24,-5,24,-8,24,-2,-6,-4,24,24,24,-7,-3,24,24,-123,-122,24,24,24,-143,-141,24,-144,-145,-140,-146,-142,24,24,-151,-128,24,24,24,-18,24,-112,24,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,24,-119,-117,-118,24,24,24,-24,24,-9,-152,24,24,24,24,24,24,24,24,-201,-129,24,24,24,24,24,24,24,24,24,24,24,24,-204,24,24,24,24,24,-205,24,24,24,]),'TO':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,263,278,279,280,296,308,311,313,319,322,329,330,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-82,309,-174,-170,-88,309,331,-65,-89,-83,-55,-171,]),'NUM':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[15,-5,15,-8,15,-2,-6,-4,15,15,15,-7,-3,15,15,-123,-122,15,15,15,-143,-141,15,-144,-145,-140,-146,-142,15,15,-151,-128,15,15,15,-18,15,-112,15,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,15,-119,-117,-118,15,15,15,-24,15,-9,-152,15,15,15,15,15,15,15,15,-201,-129,15,15,15,15,15,15,15,15,15,15,15,15,-204,15,15,15,15,15,-205,15,15,15,]),'TYPE':([0,3,8,12,17,18,21,30,51,114,118,167,172,179,218,222,223,270,304,],[16,-5,16,-8,-2,-6,-4,-7,-3,-128,-18,16,-24,-9,16,-201,-129,-204,-205,]),'PLUS':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,142,-80,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,142,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'NOT':([13,22,25,58,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[62,62,62,62,62,-143,-141,62,-144,-145,-140,-146,-142,62,62,62,62,62,-112,62,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,62,-119,-117,-118,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'INCREASE':([1,2,9,23,26,27,40,41,43,84,100,194,196,240,242,244,313,],[-60,-17,-179,-59,102,-57,-58,-56,-178,-56,-61,-191,-180,-192,-181,-62,-65,]),'CHAR':([2,48,50,103,131,173,200,208,234,266,281,292,293,305,],[-17,-15,125,125,125,125,-16,125,125,125,125,125,125,125,]),'LESSEQ':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,153,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'DIVIDE':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,65,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-80,-125,-79,162,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,162,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'LESS':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,158,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'DECREASE':([1,2,9,23,26,27,40,41,43,84,100,194,196,240,242,244,313,],[-60,-17,-179,-59,94,-57,-58,-56,-178,-56,-61,-191,-180,-192,-181,-62,-65,]),'LOC':([2,120,121,122,124,125,127,128,129,130,133,134,135,136,138,203,288,289,290,301,317,318,325,],[-17,-35,-36,-47,-32,-38,-46,-31,-34,-37,-30,-33,-29,-28,-41,-45,-40,-48,-39,323,-54,-49,333,]),'END':([3,12,17,18,21,30,51,114,118,167,172,179,218,222,223,270,304,],[-5,-8,-2,-6,-4,-7,-3,-128,-18,219,-24,-9,264,-201,-129,-204,-205,]),'PROC':([87,],[168,]),'COMMA':([2,9,23,27,40,43,48,50,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,88,89,90,100,103,104,105,120,121,122,124,125,127,128,129,130,133,134,135,136,138,141,164,177,191,192,193,194,195,196,198,199,200,203,211,212,213,217,224,225,232,233,240,242,244,252,254,255,256,263,266,267,268,275,283,284,286,288,289,290,296,300,301,313,314,315,316,317,318,319,322,323,324,],[-17,-179,-59,-57,-58,-178,-15,123,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-25,171,123,-61,123,-10,178,-35,-36,-47,-32,-38,-46,-31,-34,-37,-30,-33,-29,-28,-41,-127,-121,-12,241,-184,-182,-191,241,-180,-63,245,-16,-45,-109,-96,-116,-85,-26,-27,-13,-11,-192,-181,-62,-50,292,-52,-53,-82,123,-208,303,-14,-183,-44,-64,-40,-48,-39,-88,-210,-211,-65,-42,-184,-51,-54,-49,-89,-83,-212,-209,]),'ABS':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[10,-5,10,-8,10,-2,-6,-4,10,10,10,-7,-3,10,10,-123,-122,10,10,10,-143,-141,10,-144,-145,-140,-146,-142,10,10,-151,-128,10,10,10,-18,10,-112,10,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,10,-119,-117,-118,10,10,10,-24,10,-9,-152,10,10,10,10,10,10,10,10,-201,-129,10,10,10,10,10,10,10,10,10,10,10,10,-204,10,10,10,10,10,-205,10,10,10,]),'RETURN':([0,3,8,12,17,18,21,29,30,51,87,108,109,114,118,167,172,174,179,181,183,190,218,222,223,226,228,238,270,273,304,],[25,-5,25,-8,-2,-6,-4,25,-7,-3,25,25,-151,-128,-18,25,-24,25,-9,-152,25,25,25,-201,-129,25,25,25,-204,25,-205,]),'MODCREASE':([1,2,9,23,26,27,40,41,43,84,100,194,196,240,242,244,313,],[-60,-17,-179,-59,101,-57,-58,-56,-178,-56,-61,-191,-180,-192,-181,-62,-65,]),'LBRACKET':([1,2,9,23,26,27,40,41,42,43,52,53,54,56,57,60,61,65,68,72,74,75,76,77,78,80,82,84,85,86,100,137,139,141,194,196,217,240,242,244,253,263,313,322,],[-60,-17,-179,-59,-66,-57,-58,-56,117,-178,-60,-67,-71,-72,-78,-74,-76,-80,-79,-69,-66,-81,-68,165,-70,-75,-77,-56,-73,-84,-61,206,208,-66,-191,-180,-85,-192,-181,-62,-56,-82,-65,-83,]),'THEN':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,91,92,100,140,141,164,194,196,211,212,213,217,240,242,244,263,274,296,297,313,319,320,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,174,-90,-61,210,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-82,174,-88,210,-65,-89,210,-83,]),'DCL':([0,3,8,12,17,18,21,30,51,114,118,167,172,179,218,222,223,270,304,],[28,-5,28,-8,-2,-6,-4,-7,-3,-128,-18,28,-24,-9,28,-201,-129,-204,-205,]),'DO':([0,3,8,12,17,18,21,29,30,51,87,108,109,114,118,167,172,174,179,181,183,190,218,222,223,226,228,238,270,273,304,],[29,-5,29,-8,-2,-6,-4,29,-7,-3,29,29,-151,-128,-18,29,-24,29,-9,-152,29,29,29,-201,-129,29,29,29,-204,29,-205,]),'MINUS':([2,9,13,22,23,25,27,40,43,52,53,54,55,56,57,58,60,61,64,65,67,68,70,72,74,75,76,78,79,80,81,82,84,85,86,94,95,96,97,98,99,100,101,102,107,115,116,117,126,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,194,196,204,205,207,208,210,211,212,213,217,230,231,235,240,241,242,243,244,245,253,259,260,262,263,287,291,292,295,309,310,313,322,331,],[-17,-179,63,63,-59,63,-57,-58,-178,-60,-67,-71,-120,-72,-78,63,-74,-76,145,-80,-125,-79,-108,-69,-124,-81,-68,-70,63,-75,-115,-77,-56,-73,-126,-143,-141,63,-144,-145,-140,-61,-146,-142,63,63,63,63,63,-127,-112,63,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,63,-119,-117,-118,63,-121,63,-191,-180,63,63,63,63,63,-109,145,-116,-85,63,63,63,-192,63,-181,63,-62,63,-56,63,63,63,-82,63,63,63,63,63,63,-65,-83,63,]),'BY':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,263,278,279,280,296,313,319,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-82,310,-174,-170,-88,-65,-89,-83,]),'LENGTH':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[33,-5,33,-8,33,-2,-6,-4,33,33,33,-7,-3,33,33,-123,-122,33,33,33,-143,-141,33,-144,-145,-140,-146,-142,33,33,-151,-128,33,33,33,-18,33,-112,33,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,33,-119,-117,-118,33,33,33,-24,33,-9,-152,33,33,33,33,33,33,33,33,-201,-129,33,33,33,33,33,33,33,33,33,33,33,33,-204,33,33,33,33,33,-205,33,33,33,]),'OD':([29,108,109,114,181,190,223,238,],[112,182,-151,-128,-152,239,-129,282,]),'SYN':([0,3,8,12,17,18,21,30,51,114,118,167,172,179,218,222,223,270,304,],[7,-5,7,-8,-2,-6,-4,-7,-3,-128,-18,7,-24,-9,7,-201,-129,-204,-205,]),'RPAREN':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,115,116,120,121,122,124,125,127,128,129,130,133,134,135,136,138,141,164,166,191,192,193,194,195,196,203,211,212,213,217,220,240,242,244,248,251,263,267,268,283,284,288,289,290,291,296,300,301,313,314,315,317,318,319,322,323,324,325,333,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,194,196,-35,-36,-47,-32,-38,-46,-31,-34,-37,-30,-33,-29,-28,-41,-127,-121,217,240,-184,-182,-191,242,-180,-45,-109,-96,-116,-85,265,-192,-181,-62,288,290,-82,-208,302,-183,-44,-40,-48,-39,196,-88,-210,-211,-65,-42,-184,-54,-49,-89,-83,-212,-209,334,336,]),'GREATEREQ':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,212,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,156,-125,-79,-108,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,-109,-96,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'SEMI':([1,2,5,9,11,19,23,25,27,31,32,35,37,40,43,44,45,46,47,49,52,53,54,55,56,57,60,61,64,65,66,67,68,69,70,71,72,74,75,76,78,80,81,82,83,84,85,86,88,89,92,93,100,104,105,106,112,113,119,120,121,122,124,125,127,128,129,130,133,134,135,136,138,141,164,169,170,176,177,180,182,184,186,188,189,194,196,201,202,203,211,212,213,217,219,221,224,225,229,232,233,237,239,240,242,244,246,263,264,265,269,272,275,276,279,282,288,289,290,296,302,307,312,313,317,318,319,322,327,328,334,335,336,],[-133,-17,-132,-179,-134,-137,-59,-187,-57,114,-131,-136,-135,-58,-178,-138,-186,-185,118,-19,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-190,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-189,-56,-73,-126,-25,172,-90,-188,-61,-10,179,-161,-157,190,-20,-35,-36,-47,-32,-38,-46,-31,-34,-37,-30,-33,-29,-28,-41,-127,-121,222,223,-139,-12,-177,-159,-164,-165,-162,-166,-191,-180,-23,-21,-45,-109,-96,-116,-85,-202,270,-26,-27,-147,-13,-11,-163,-158,-192,-181,-62,-22,-82,-203,-206,304,-148,-14,-175,-174,-160,-40,-48,-39,-88,-207,-167,-176,-65,-54,-49,-89,-83,-168,-172,-213,-173,-214,]),'DIVCREASE':([1,2,9,23,26,27,40,41,43,84,100,194,196,240,242,244,313,],[-60,-17,-179,-59,98,-57,-58,-56,-178,-56,-61,-191,-180,-192,-181,-62,-65,]),'ARRAY':([2,48,50,103,131,173,200,266,293,305,],[-17,-15,139,139,139,139,-16,139,139,139,]),'FALSE':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[82,82,82,82,-123,-122,82,82,-143,-141,82,-144,-145,-140,-146,-142,82,82,82,82,82,-112,82,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,82,-119,-117,-118,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'PRINT':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[36,-5,36,-8,36,-2,-6,-4,36,36,36,-7,-3,36,36,-123,-122,36,36,36,-143,-141,36,-144,-145,-140,-146,-142,36,36,-151,-128,36,36,36,-18,36,-112,36,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,36,-119,-117,-118,36,36,36,-24,36,-9,-152,36,36,36,36,36,36,36,36,-201,-129,36,36,36,36,36,36,36,36,36,36,36,36,-204,36,36,36,36,36,-205,36,36,36,]),'ELSE':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,109,114,141,164,174,175,181,194,196,209,211,212,213,217,223,226,240,242,244,257,261,263,296,306,313,319,321,322,332,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-151,-128,-127,-121,-149,228,-152,-191,-180,260,-109,-96,-116,-85,-129,-150,-192,-181,-62,260,-91,-82,-88,228,-65,-89,-93,-83,-94,]),'UPPER':([0,3,8,12,13,17,18,21,22,25,29,30,51,58,59,62,63,73,79,87,94,95,96,97,98,99,101,102,107,108,109,114,115,116,117,118,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,167,172,174,179,181,183,190,204,205,207,208,210,218,222,223,226,228,230,231,235,238,241,243,245,259,260,262,270,273,287,291,292,295,304,309,310,331,],[39,-5,39,-8,39,-2,-6,-4,39,39,39,-7,-3,39,39,-123,-122,39,39,39,-143,-141,39,-144,-145,-140,-146,-142,39,39,-151,-128,39,39,39,-18,39,-112,39,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,39,-119,-117,-118,39,39,39,-24,39,-9,-152,39,39,39,39,39,39,39,39,-201,-129,39,39,39,39,39,39,39,39,39,39,39,39,-204,39,39,39,39,39,-205,39,39,39,]),'$end':([3,8,12,17,18,21,30,34,51,114,118,172,179,222,223,],[-5,-1,-8,-2,-6,-4,-7,0,-3,-128,-18,-24,-9,-201,-129,]),'FOR':([29,],[111,]),'CCONST':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[68,68,68,68,-123,-122,68,68,-143,-141,68,-144,-145,-140,-146,-142,68,68,68,68,68,-112,68,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,68,-119,-117,-118,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TIMES':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,65,67,68,70,72,74,75,76,78,80,81,82,84,85,86,100,141,164,194,196,211,213,217,240,242,244,253,263,313,322,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-80,-125,-79,161,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-127,-121,-191,-180,161,-116,-85,-192,-181,-62,-56,-82,-65,-83,]),'SCONST':([13,22,25,58,62,63,73,79,94,95,96,97,98,99,101,102,107,115,116,117,126,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[75,75,75,75,-123,-122,75,75,-143,-141,75,-144,-145,-140,-146,-142,75,75,75,75,75,-112,75,-114,-113,-111,-110,-102,-100,-98,-107,-103,-106,-101,-97,-104,-99,-105,75,-119,-117,-118,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ELSIF':([2,9,23,27,40,43,52,53,54,55,56,57,60,61,64,65,66,67,68,70,71,72,74,75,76,78,80,81,82,84,85,86,100,109,114,141,164,174,175,181,194,196,209,211,212,213,217,223,226,240,242,244,257,261,263,296,306,313,319,321,322,332,],[-17,-179,-59,-57,-58,-178,-60,-67,-71,-120,-72,-78,-74,-76,-95,-80,-86,-125,-79,-108,-87,-69,-124,-81,-68,-70,-75,-115,-77,-56,-73,-126,-61,-151,-128,-127,-121,-149,230,-152,-191,-180,259,-109,-96,-116,-85,-129,-150,-192,-181,-62,295,-91,-82,-88,230,-65,-89,-93,-83,-94,]),'BOOL':([2,48,50,103,131,173,200,208,234,266,281,292,293,305,],[-17,-15,130,130,130,130,-16,130,130,130,130,130,130,130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'call_action':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[1,1,52,52,52,1,52,52,52,52,1,52,52,1,52,52,52,52,52,52,52,52,1,1,1,1,52,52,52,52,52,1,1,1,52,52,52,1,52,52,52,52,52,52,1,52,52,52,52,52,52,52,]),'iteration':([111,],[184,]),'mode':([50,103,131,173,266,293,305,],[132,177,203,225,301,317,325,]),'empty_literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'boolean_expression':([22,58,107,230,259,295,],[91,140,180,274,297,320,]),'statement':([0,8,167,218,],[17,51,17,51,]),'operand4':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[55,55,55,55,164,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'while_control':([29,188,],[106,237,]),'assignment_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'loop_counter':([111,],[185,]),'lower_bound':([117,165,205,207,208,291,292,],[197,214,247,247,247,247,247,]),'declaration':([28,178,],[104,233,]),'builtin_call':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'synonym_definition':([7,47,],[49,119,]),'string_concatenation_operator':([64,212,],[146,146,]),'reference_mode':([50,103,131,173,266,293,305,],[133,133,133,133,133,133,133,]),'exit_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'action_statement_list':([29,174,190,228,],[108,226,238,273,]),'newmode_list':([16,],[89,]),'operand1':([13,22,25,58,79,96,107,115,116,117,126,159,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[64,64,64,64,64,64,64,64,64,64,64,212,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'start_value':([235,],[278,]),'declaration_list':([28,],[105,]),'operand0':([13,22,25,58,79,96,107,115,116,117,126,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'referenced_location':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'integer_literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'composite_mode':([50,103,131,173,266,293,305,],[128,128,128,128,128,128,128,]),'newmode_statement':([0,8,167,218,],[18,18,18,18,]),'if_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'operand2':([13,22,25,58,79,96,107,115,116,117,126,143,159,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[70,70,70,70,70,70,70,70,70,70,70,211,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'discrete_expression':([235,309,331,],[280,328,335,]),'array_slice':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'discrete_range_mode':([50,103,131,173,208,234,266,281,292,293,305,],[120,120,120,120,120,120,120,120,120,120,120,]),'value_array_slice':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'parameter_spec':([266,],[300,]),'exit_label_id':([6,],[46,]),'integer_expression':([165,310,],[216,330,]),'integer_mode':([50,103,131,173,208,234,266,281,292,293,305,],[124,124,124,124,124,124,124,124,124,124,124,]),'array_mode':([50,103,131,173,266,293,305,],[122,122,122,122,122,122,122,]),'location':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[26,26,74,74,74,26,74,141,74,74,26,74,74,26,74,74,74,74,74,74,74,74,26,26,26,26,74,74,74,74,74,26,26,26,74,74,74,26,74,74,74,74,74,74,26,74,74,74,74,74,74,74,]),'formal_parameter':([220,303,],[267,324,]),'relational_operator':([66,],[155,]),'dereferenced_reference':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'result_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'procedure_definition':([87,],[169,]),'else_clause':([175,306,],[227,326,]),'bracketed_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parenthesized_expression':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'program':([0,],[34,]),'boolean_mode':([50,103,131,173,208,234,266,281,292,293,305,],[134,134,134,134,134,134,134,134,134,134,134,]),'expression_list':([117,],[199,]),'mode_definition':([16,171,],[88,224,]),'procedure_call':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'mode_name':([50,103,131,173,266,293,305,],[136,136,136,136,136,136,136,]),'array_element':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'then_clause':([91,274,],[175,306,]),'do_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'parameter_list':([115,116,291,],[191,195,195,]),'index_mode':([208,292,],[252,316,]),'literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'synonym_statement':([0,8,167,218,],[3,3,3,3,]),'boolean_literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'element_mode':([293,],[318,]),'array_location':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'synonym_list':([7,],[47,]),'character_mode':([50,103,131,173,208,234,266,281,292,293,305,],[129,129,129,129,129,129,129,129,129,129,129,]),'statement_list':([0,167,],[8,218,]),'assigning_operator':([26,],[96,]),'formal_procedure_head':([87,],[167,]),'arithmetic_additive_operator':([64,212,],[147,147,]),'elsif_expression':([209,],[257,]),'result_spec':([221,],[269,]),'else_expression':([209,257,],[258,294,]),'identifier_list':([7,16,28,47,171,178,220,303,],[50,90,103,50,90,103,266,266,]),'label_id':([0,8,29,108,167,174,190,218,226,228,238,273,],[14,14,110,110,14,110,110,14,110,110,110,110,]),'expression':([13,22,25,58,79,96,107,115,116,117,126,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[69,92,69,92,166,176,92,192,192,198,201,215,201,249,249,249,261,92,275,279,192,284,286,92,298,284,284,315,249,92,279,329,279,]),'result':([13,25,],[83,93,]),'for_control':([111,],[188,]),'declaration_statement':([0,8,167,218,],[21,21,21,21,]),'upper_bound':([243,262,287,],[285,299,314,]),'parameter':([115,116,241,291,],[193,193,283,193,]),'conditional_expression':([13,22,25,58,79,96,107,115,116,117,126,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'operator1':([66,],[159,]),'monadic_operator':([13,22,25,58,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'literal_range':([205,207,208,291,292,],[248,251,256,251,256,]),'initialization':([177,],[232,]),'membership_operator':([66,],[150,]),'string_mode':([50,103,131,173,266,293,305,],[127,127,127,127,127,127,127,]),'then_expression':([140,297,320,],[209,321,332,]),'operator2':([64,212,],[143,143,]),'action_statement':([0,8,29,108,167,174,190,218,226,228,238,273,],[12,12,109,181,12,109,109,12,181,109,181,181,]),'operand3':([13,22,25,58,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[81,81,81,81,81,81,81,81,81,81,81,81,81,213,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'value_array_element':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'procedure_statement':([0,8,167,218,],[30,30,30,30,]),'action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[31,31,31,170,31,31,31,170,31,31,31,31,31,31,]),'character_literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'index_mode_list':([208,],[254,]),'range_enumeration':([111,],[189,]),'constant_expression':([126,204,],[202,246,]),'parenthesis_gambiarra':([168,],[221,]),'character_string_literal':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'step_value':([278,],[308,]),'control_part':([29,],[113,]),'arithmetic_multiplicative_operator':([70,211,],[163,163,]),'discrete_mode':([50,103,131,173,208,234,266,281,292,293,305,],[135,135,135,135,255,276,135,312,255,135,135,]),'return_action':([0,8,29,87,108,167,174,183,190,218,226,228,238,273,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'formal_parameter_list':([220,],[268,]),'end_value':([278,308,],[307,327,]),'step_enumeration':([111,],[186,]),'closed_dyadic_operator':([26,],[95,]),'identifier':([0,6,7,8,13,16,22,25,28,29,47,50,58,59,73,79,87,96,103,107,108,111,115,116,117,123,126,131,143,159,163,165,167,171,173,174,178,183,190,204,205,207,208,210,218,220,226,228,230,231,234,235,238,241,243,245,259,260,262,266,273,281,287,291,292,293,295,303,305,309,310,331,],[41,45,48,41,84,48,84,84,48,41,48,138,84,84,84,84,84,84,138,84,41,187,84,84,84,200,84,138,84,84,84,84,41,48,138,41,48,84,41,84,84,84,253,84,41,48,41,41,84,84,277,84,41,84,84,84,84,84,84,138,41,277,84,84,253,138,84,48,138,84,84,84,]),'array_primitive_value':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'primitive_value':([13,22,25,58,73,79,96,107,115,116,117,126,143,159,163,165,204,205,207,208,210,230,231,235,241,243,245,259,260,262,287,291,292,295,309,310,331,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'builtin_name':([0,8,13,22,25,29,58,59,73,79,87,96,107,108,115,116,117,126,143,159,163,165,167,174,183,190,204,205,207,208,210,218,226,228,230,231,235,238,241,243,245,259,260,262,273,287,291,292,295,309,310,331,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',43),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',48),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',53),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',54),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',61),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',62),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',69),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',84),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',98),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',99),
  ('synonym_definition -> identifier_list ASSIGN constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list mode ASSIGN constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',114),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',119),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',125),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',126),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',155),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',160),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',165),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',170),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',171),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',178),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',188),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',193),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',199),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',205),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',211),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',212),
  ('string_mode -> CHARS LBRACKET ICONST RBRACKET','string_mode',4,'p_string_mode','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',229),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',235),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',236),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',243),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',244),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',249),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',255),
  ('location -> identifier','location',1,'p_location','parser.py',261),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',262),
  ('location -> array_element','location',1,'p_location','parser.py',263),
  ('location -> array_slice','location',1,'p_location','parser.py',264),
  ('location -> call_action','location',1,'p_location','parser.py',265),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',275),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',315),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',321),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',322),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',329),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',335),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',341),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',342),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',343),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',344),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',350),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',351),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',352),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',353),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',354),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',359),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',365),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',366),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',373),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',379),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',386),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',392),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',398),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',404),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',410),
  ('expression -> operand0','expression',1,'p_expression','parser.py',417),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',418),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',424),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',425),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',434),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',440),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',446),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',452),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',453),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',462),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',463),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',470),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',471),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',476),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',477),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',478),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',479),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',483),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',488),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',493),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',494),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',502),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',508),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',509),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',515),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',519),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',520),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',527),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',528),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',529),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',534),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',535),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',543),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',544),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',549),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',550),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',551),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',556),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',561),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',562),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',571),
  ('action -> bracketed_action','action',1,'p_action','parser.py',577),
  ('action -> assignment_action','action',1,'p_action','parser.py',578),
  ('action -> call_action','action',1,'p_action','parser.py',579),
  ('action -> exit_action','action',1,'p_action','parser.py',580),
  ('action -> return_action','action',1,'p_action','parser.py',581),
  ('action -> result_action','action',1,'p_action','parser.py',582),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',587),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',588),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',593),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',612),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',613),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',618),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',619),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',620),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',621),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',622),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',627),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',628),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',637),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',638),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',647),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',648),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',655),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',656),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',657),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',658),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',673),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',674),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',675),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',676),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',692),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',701),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',706),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',707),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',712),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',713),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',720),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',725),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',730),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',735),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',736),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',744),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',749),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',750),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',757),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',761),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',762),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',767),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',768),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',775),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',776),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',783),
  ('exit_action -> EXIT exit_label_id','exit_action',2,'p_exit_action','parser.py',791),
  ('exit_label_id -> identifier','exit_label_id',1,'p_exit_label_id','parser.py',795),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',799),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',800),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',807),
  ('result -> expression','result',1,'p_result','parser.py',811),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',816),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',817),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',824),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',825),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',826),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',827),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',828),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',829),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',830),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',831),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',835),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',839),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',840),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',847),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',848),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',856),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',857),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',864),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',865),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',872),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',876),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',877),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',889),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',890),
]
