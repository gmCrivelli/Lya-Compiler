
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programID PLUS MINUS TIMES DIVIDE ASSIGN COMMA COLON SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET LESS LESSEQ GREATER GREATEREQ EQUAL AND OR STRCAT INCREASE DECREASE MULCREASE DIVCREASE MODCREASE MULVAL DIVVAL DIFF MOD MODVAL NOT ICONST CCONST SCONST RESULT OD CHARS RETURNS UPPER LOC LOWER THEN REF ARRAY ABS READ LENGTH BOOL RETURN DOWN IF FOR NULL TRUE TYPE TO END NUM WHILE PROC FI FALSE DO BY ELSIF DCL CHAR ASC EXIT PRINT INT IN ELSE SYNprogram : statement_liststatement_list : statement\n                          | statement_list statementstatement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statementdeclaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declarationdeclaration : identifier_list mode\n                       | identifier_list mode initializationinitialization : ASSIGN expressionidentifier_list : ID\n                           | identifier_list COMMA IDidentifier : IDsynonym_statement : SYN synonym_listsynonym_list : synonym_definition\n                        | synonym_list synonym_definitionsynonym_definition : identifier_list ASSIGN expression\n                              | identifier_list mode ASSIGN expressionnewmode_statement : TYPE newmode_list SEMInewmode_list : mode_definition\n                        | newmode_list COMMA mode_definitionmode_definition : identifier_list ASSIGN modemode : mode_name\n                | discrete_mode\n                | reference_mode\n                | composite_modediscrete_mode : INT\n                | BOOL\n                | CHAR\n                | discrete_range_modediscrete_range_mode : identifier LPAREN literal_range RPAREN\n                               | discrete_mode LPAREN literal_range RPAREN mode_name : identifierliteral_range : lower_bound COLON upper_boundlower_bound : expressionupper_bound : expressionreference_mode : REF modecomposite_mode : string_mode\n                          | array_modestring_mode : CHARS LBRACKET string_length RBRACKETstring_length : integer_literalarray_mode : ARRAY LBRACKET index_mode_list RBRACKET element_modeindex_mode_list : index_mode\n                           | index_mode_list COMMA index_modeindex_mode : discrete_mode\n                      | literal_rangeelement_mode : modeinteger_expression : expressionlocation : identifier\n                    | dereferenced_reference\n                    | string_element\n                    | string_slice\n                    | array_element\n                    | array_slice\n                    | call_action dereferenced_reference : location ARROWstring_element : identifier LBRACKET start_element RBRACKETstart_element : integer_expressionstring_slice : identifier LBRACKET left_element COLON right_element RBRACKETleft_element : integer_expressionright_element : integer_expressionarray_element : array_location LBRACKET expression_list RBRACKETexpression_list : expression\n                           | expression_list COMMA expressionarray_slice : array_location LBRACKET lower_bound COLON upper_bound RBRACKETarray_location : locationprimitive_value : literal\n                           | value_array_element\n                           | value_array_slice\n                           | parenthesized_expression literal : boolean_literal\n                   | character_literal\n                   | empty_literal\n                   | character_string_literal integer_literal : ICONSTboolean_literal : FALSE\n                           | TRUEcharacter_literal : CCONST empty_literal : NULLcharacter_string_literal : SCONSTvalue_array_element : array_primitive_value LBRACKET integer_expression RBRACKETvalue_array_slice : array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKETarray_primitive_value : primitive_valueparenthesized_expression : LPAREN expression RPARENexpression : operand0\n                      | conditional_expressionconditional_expression : IF boolean_expression then_expression else_expression FI\n                                  | IF boolean_expression then_expression elsif_expression else_expression FI boolean_expression : expressionthen_expression : THEN expressionelse_expression : ELSE expressionelsif_expression : ELSIF boolean_expression then_expression\n                            | elsif_expression ELSIF boolean_expression then_expression operand0 :  operand1\n            | operand0 operator1 operand1operator1 :  relational_operator\n            | membership_operatorrelational_operator :  AND\n            | OR\n            | EQUAL\n            | DIFF\n            | GREATER\n            | GREATEREQ\n            | LESS\n            | LESSEQmembership_operator :  INoperand1 :  operand2\n            | operand1 operator2 operand2operator2 :  arithmetic_additive_operator\n                     | string_concatenation_operatorarithmetic_additive_operator :  PLUS\n            | MINUSstring_concatenation_operator :  STRCAToperand2 :  operand3\n            | operand2 arithmetic_multiplicative_operator operand3arithmetic_multiplicative_operator :  TIMES\n            | DIVIDE\n            | MODoperand3 : operand4\n            | monadic_operator operand4monadic_operator :  MINUS\n            | NOToperand4 :  location\n            | referenced_location\n            | primitive_value\n            | integer_literalreferenced_location :  ARROW locationaction_statement :  action SEMI\n            | label_id COLON action SEMIlabel_id :  identifieraction :  bracketed_action\n            | assignment_action\n            | call_action\n            | exit_action\n            | return_action\n            | result_actionbracketed_action :  if_action\n            | do_actionassignment_action :  location assigning_operator expressionassigning_operator : ASSIGN\n                              | closed_dyadic_operatorclosed_dyadic_operator : INCREASE\n                                  | DECREASE\n                                  | MULCREASE\n                                  | DIVCREASE\n                                  | MODCREASEif_action :  IF boolean_expression then_clause FI\n                     | IF boolean_expression then_clause else_clause FIthen_clause :  THEN\n                       |  THEN action_statement_listaction_statement_list : action_statement\n                                 | action_statement_list action_statementelse_clause :  ELSE\n                        | ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause\n                        | ELSIF boolean_expression then_clause else_clause do_action :  DO OD\n                     |  DO control_part SEMI OD\n                     |  DO action_statement_list OD\n                     |  DO control_part SEMI action_statement_list ODcontrol_part : while_control\n                        | FOR for_control\n                        | FOR for_control while_controlfor_control : iterationiteration : step_enumeration\n                     | range_enumerationstep_enumeration : loop_counter ASSIGN start_value end_value\n                            | loop_counter ASSIGN start_value step_value end_valueloop_counter :  identifierstart_value :  discrete_expressionstep_value :  BY integer_expressionend_value : TO discrete_expression\n                     | DOWN TO discrete_expressiondiscrete_expression : expressionrange_enumeration : loop_counter IN discrete_mode\n                             | loop_counter DOWN IN discrete_modewhile_control :  WHILE boolean_expressioncall_action :  procedure_call\n                        | builtin_callprocedure_call :  identifier LPAREN RPAREN\n                          | identifier LPAREN parameter_list RPARENparameter_list :  parameter\n                          |  parameter_list COMMA parameterparameter :  expressionexit_action :  EXIT label_idreturn_action :  RETURN\n                         |  RETURN resultresult_action :  RESULT resultresult :  expressionbuiltin_call :  builtin_name LPAREN RPAREN\n                        | builtin_name LPAREN parameter_list RPARENbuiltin_name : ABS\n                        | ASC\n                        | NUM\n                        | UPPER\n                        | LOWER\n                        | LENGTH\n                        | READ\n                        | PRINTprocedure_statement :  label_id COLON procedure_definition SEMIprocedure_definition :  formal_procedure_head END\n                                |  formal_procedure_head statement_list ENDformal_procedure_head : PROC parenthesis_gambiarra SEMI\n                                 | PROC parenthesis_gambiarra result_spec SEMIparenthesis_gambiarra : LPAREN RPAREN\n                                 | LPAREN formal_parameter_list RPARENformal_parameter_list :  formal_parameter\n                                 |  formal_parameter_list COMMA formal_parameterformal_parameter :  identifier_list parameter_specparameter_spec :  mode\n                          |  mode parameter_attributeparameter_attribute :  LOCresult_spec  :  RETURNS LPAREN mode RPAREN\n                        |  RETURNS LPAREN mode result_attribute RPARENresult_attribute :  LOC'
    
_lr_action_items = {'DECREASE':([4,8,9,10,17,23,26,27,28,34,38,99,135,195,198,225,239,241,243,313,321,],[-58,-54,-59,-182,94,-55,-53,-183,-57,-56,-17,-60,-53,-184,-194,-66,-61,-185,-195,-69,-63,]),'FALSE':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[85,85,85,85,-125,85,85,85,-126,85,-147,-148,-146,-149,-145,-150,85,-144,85,85,85,85,-110,-104,-105,-103,-106,85,-109,-100,-101,-108,-102,-107,-121,85,-122,-120,-116,-117,-115,-113,85,-114,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'PRINT':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[5,5,-58,-54,-182,5,5,-7,-55,-5,-183,-57,-4,-2,-56,-17,5,-6,5,-8,-132,5,5,-155,5,-3,-125,-130,-74,-76,-79,5,-90,5,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,5,5,-126,5,-147,-148,-146,-149,-145,-60,-150,5,-144,-18,-19,5,5,5,-156,5,5,5,-131,5,-124,-110,-104,-105,-103,-106,5,-109,-100,-101,-108,-102,-107,-121,5,-122,-120,-116,-117,-115,-113,5,-114,-9,-20,5,-184,-194,-23,5,5,5,-133,-204,5,-99,-119,-112,-88,5,-66,5,5,5,5,5,5,5,-21,-61,5,-185,5,-195,5,5,5,-207,-85,5,5,5,-22,5,5,5,-208,5,-91,-69,5,5,5,-63,5,-86,-92,]),'WHILE':([2,4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,121,123,124,125,137,139,173,182,183,184,195,198,219,220,221,222,225,239,241,243,252,256,266,295,300,312,313,316,317,321,323,324,331,334,341,],[52,-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,52,-168,-169,-170,-131,-124,-31,-34,-33,-32,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-179,-178,-85,-180,-171,-91,-69,-35,-36,-63,-172,-176,-86,-92,-177,]),'CHARS':([104,105,109,175,201,232,260,305,319,],[-15,170,170,170,170,-16,170,170,170,]),'CHAR':([104,105,109,175,201,205,232,236,253,260,305,319,320,],[-15,183,183,183,183,183,-16,183,183,183,183,183,183,]),'LOC':([38,171,172,173,174,176,178,180,182,183,184,185,231,302,314,316,317,330,337,338,],[-17,-37,-30,-31,-43,-42,-28,-27,-34,-33,-32,-29,-41,327,-44,-35,-36,344,-51,-46,]),'ARRAY':([104,105,109,175,201,232,260,305,319,],[-15,181,181,181,181,-16,181,181,181,]),'FOR':([2,],[48,]),'OD':([2,47,50,55,128,131,209,210,],[49,-132,127,-155,-156,208,257,-133,]),'ICONST':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,229,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[62,62,62,62,-125,62,62,62,-126,62,-147,-148,-146,-149,-145,-150,62,-144,62,62,62,62,-110,-104,-105,-103,-106,62,-109,-100,-101,-108,-102,-107,-121,62,-122,-120,-116,-117,-115,-113,62,-114,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'LBRACKET':([4,8,9,10,16,17,23,26,27,28,34,38,60,61,65,67,68,70,71,72,77,78,79,80,82,83,84,85,86,89,99,135,137,170,181,195,198,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-59,-182,93,-70,-55,110,-183,-57,-56,-17,-74,-76,138,-59,-78,-81,-70,-84,-75,-77,-72,110,-87,-73,-83,-80,-71,-82,-60,110,-70,229,236,-184,-194,-88,-66,-61,-185,-195,-85,110,-69,-63,-86,]),'ARROW':([4,8,9,10,14,17,23,26,27,28,34,38,39,42,52,58,66,67,71,80,90,91,92,93,94,95,96,97,98,99,100,101,102,110,111,112,135,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,195,198,207,223,225,226,227,230,233,235,236,237,239,240,241,242,243,247,267,269,271,284,297,299,309,313,315,318,320,321,325,],[-58,-54,-59,-182,63,99,-55,-53,-183,-57,-56,-17,63,63,63,-125,63,-59,99,-53,63,63,-126,63,-147,-148,-146,-149,-145,-60,-150,63,-144,63,63,63,-53,99,63,-110,-104,-105,-103,-106,63,-109,-100,-101,-108,-102,-107,-121,63,-122,-120,-116,-117,-115,-113,63,-114,63,-184,-194,63,63,-66,63,63,63,63,63,63,63,-61,63,-185,63,-195,63,63,63,63,-53,63,63,63,-69,63,63,63,-63,63,]),'LESS':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,149,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'RETURN':([0,2,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,50,55,56,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,128,129,131,136,137,139,168,186,195,198,199,202,209,210,211,214,219,220,221,222,225,238,239,241,243,246,250,262,266,288,294,306,312,313,321,331,334,],[14,14,-58,-54,-182,14,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,14,-155,14,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,-156,14,14,14,-131,-124,-9,-20,-184,-194,-23,14,14,-133,-204,14,-99,-119,-112,-88,-66,-21,-61,-185,-195,14,14,-207,-85,-22,14,-208,-91,-69,-63,-86,-92,]),'COMMA':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,103,104,105,106,109,113,114,115,137,139,164,165,171,172,173,174,176,178,179,180,182,183,184,185,193,194,195,196,197,198,219,220,221,222,225,228,231,232,234,239,241,243,244,245,259,260,261,266,273,274,282,283,285,286,287,291,301,302,312,313,314,316,317,321,327,328,329,331,334,335,336,337,338,339,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,169,-15,177,-10,177,-24,200,177,-131,-124,226,-67,-37,-30,-31,-43,-42,-28,-12,-27,-34,-33,-32,-29,242,-188,-184,-186,242,-194,-99,-119,-112,-88,-66,-11,-41,-16,-13,-61,-185,-195,-25,-26,-211,177,304,-85,-68,-40,-14,-47,-49,320,-50,-187,-213,-214,-91,-69,-44,-35,-36,-63,-216,-215,-212,-86,-92,-38,-188,-51,-46,-48,]),'TRUE':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[70,70,70,70,-125,70,70,70,-126,70,-147,-148,-146,-149,-145,-150,70,-144,70,70,70,70,-110,-104,-105,-103,-106,70,-109,-100,-101,-108,-102,-107,-121,70,-122,-120,-116,-117,-115,-113,70,-114,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'INT':([104,105,109,175,201,205,232,236,253,260,305,319,320,],[-15,173,173,173,173,173,-16,173,173,173,173,173,173,]),'RETURNS':([213,258,303,],[263,-209,-210,]),'DIFF':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,142,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'REF':([104,105,109,175,201,232,260,305,319,],[-15,175,175,175,175,-16,175,175,175,]),'ASC':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[46,46,-58,-54,-182,46,46,-7,-55,-5,-183,-57,-4,-2,-56,-17,46,-6,46,-8,-132,46,46,-155,46,-3,-125,-130,-74,-76,-79,46,-90,46,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,46,46,-126,46,-147,-148,-146,-149,-145,-60,-150,46,-144,-18,-19,46,46,46,-156,46,46,46,-131,46,-124,-110,-104,-105,-103,-106,46,-109,-100,-101,-108,-102,-107,-121,46,-122,-120,-116,-117,-115,-113,46,-114,-9,-20,46,-184,-194,-23,46,46,46,-133,-204,46,-99,-119,-112,-88,46,-66,46,46,46,46,46,46,46,-21,-61,46,-185,46,-195,46,46,46,-207,-85,46,46,46,-22,46,46,46,-208,46,-91,-69,46,46,46,-63,46,-86,-92,]),'DO':([0,2,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,50,55,56,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,128,129,131,136,137,139,168,186,195,198,199,202,209,210,211,214,219,220,221,222,225,238,239,241,243,246,250,262,266,288,294,306,312,313,321,331,334,],[2,2,-58,-54,-182,2,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,2,-155,2,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,-156,2,2,2,-131,-124,-9,-20,-184,-194,-23,2,2,-133,-204,2,-99,-119,-112,-88,-66,-21,-61,-185,-195,2,2,-207,-85,-22,2,-208,-91,-69,-63,-86,-92,]),'STRCAT':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,157,-82,-60,-131,-124,-184,-194,157,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'MULCREASE':([4,8,9,10,17,23,26,27,28,34,38,99,135,195,198,225,239,241,243,313,321,],[-58,-54,-59,-182,95,-55,-53,-183,-57,-56,-17,-60,-53,-184,-194,-66,-61,-185,-195,-69,-63,]),'GREATER':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,144,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'SEMI':([1,3,4,6,8,9,10,14,15,23,27,28,33,34,35,38,43,44,49,53,54,59,60,61,62,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,99,103,106,113,114,116,117,118,120,121,123,124,125,127,130,132,133,137,139,167,171,172,173,174,176,178,179,180,182,183,184,185,195,198,204,208,213,215,219,220,221,222,225,228,231,234,239,241,243,244,245,248,252,256,257,258,264,265,266,282,293,295,300,303,312,313,314,316,317,321,323,324,331,334,337,338,341,343,346,],[47,-142,-58,-135,-54,-137,-182,-190,-140,-55,-183,-57,-136,-56,-141,-17,-138,-139,-161,-165,131,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-191,-111,-75,-77,-72,-53,-193,-129,-73,-83,-80,-71,-128,-98,-82,-60,168,-10,-24,199,-189,-134,-192,-93,-166,-168,-169,-170,-163,-181,210,211,-131,-124,-143,-37,-30,-31,-43,-42,-28,-12,-27,-34,-33,-32,-29,-184,-194,-167,-162,262,-205,-99,-119,-112,-88,-66,-11,-41,-13,-61,-185,-195,-25,-26,-151,-179,-178,-164,-209,306,-206,-85,-14,-152,-180,-171,-210,-91,-69,-44,-35,-36,-63,-172,-176,-86,-92,-51,-46,-177,-217,-218,]),'LESSEQ':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,146,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'LENGTH':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[18,18,-58,-54,-182,18,18,-7,-55,-5,-183,-57,-4,-2,-56,-17,18,-6,18,-8,-132,18,18,-155,18,-3,-125,-130,-74,-76,-79,18,-90,18,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,18,18,-126,18,-147,-148,-146,-149,-145,-60,-150,18,-144,-18,-19,18,18,18,-156,18,18,18,-131,18,-124,-110,-104,-105,-103,-106,18,-109,-100,-101,-108,-102,-107,-121,18,-122,-120,-116,-117,-115,-113,18,-114,-9,-20,18,-184,-194,-23,18,18,18,-133,-204,18,-99,-119,-112,-88,18,-66,18,18,18,18,18,18,18,-21,-61,18,-185,18,-195,18,18,18,-207,-85,18,18,18,-22,18,18,18,-208,18,-91,-69,18,18,18,-63,18,-86,-92,]),'TO':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,192,195,198,219,220,221,222,225,239,241,243,254,255,256,266,296,298,312,313,321,326,331,334,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-52,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,297,-174,-178,-85,297,325,-91,-69,-63,-175,-86,-92,]),'PROC':([56,],[134,]),'TIMES':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,89,99,137,139,195,198,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,155,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-82,-60,-131,-124,-184,-194,-119,155,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'NUM':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[20,20,-58,-54,-182,20,20,-7,-55,-5,-183,-57,-4,-2,-56,-17,20,-6,20,-8,-132,20,20,-155,20,-3,-125,-130,-74,-76,-79,20,-90,20,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,20,20,-126,20,-147,-148,-146,-149,-145,-60,-150,20,-144,-18,-19,20,20,20,-156,20,20,20,-131,20,-124,-110,-104,-105,-103,-106,20,-109,-100,-101,-108,-102,-107,-121,20,-122,-120,-116,-117,-115,-113,20,-114,-9,-20,20,-184,-194,-23,20,20,20,-133,-204,20,-99,-119,-112,-88,20,-66,20,20,20,20,20,20,20,-21,-61,20,-185,20,-195,20,20,20,-207,-85,20,20,20,-22,20,20,20,-208,20,-91,-69,20,20,20,-63,20,-86,-92,]),'SCONST':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[72,72,72,72,-125,72,72,72,-126,72,-147,-148,-146,-149,-145,-150,72,-144,72,72,72,72,-110,-104,-105,-103,-106,72,-109,-100,-101,-108,-102,-107,-121,72,-122,-120,-116,-117,-115,-113,72,-114,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'END':([4,8,10,19,23,25,27,28,30,32,34,38,40,45,47,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,136,137,139,168,186,195,198,199,210,211,214,219,220,221,222,225,238,239,241,243,262,266,288,306,312,313,321,331,334,],[-58,-54,-182,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,215,-131,-124,-9,-20,-184,-194,-23,-133,-204,265,-99,-119,-112,-88,-66,-21,-61,-185,-195,-207,-85,-22,-208,-91,-69,-63,-86,-92,]),'GREATEREQ':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,151,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'MINUS':([4,8,10,14,23,27,28,34,38,39,42,52,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,110,111,112,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,195,198,207,219,220,221,222,223,225,226,227,230,233,235,236,237,239,240,241,242,243,247,266,267,269,271,284,297,299,309,313,315,318,320,321,325,331,],[-58,-54,-182,58,-55,-183,-57,-56,-17,58,58,58,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,156,-82,58,58,58,-147,-148,-146,-149,-145,-60,-150,58,-144,58,58,58,-131,58,-124,-110,-104,-105,-103,-106,58,-109,-100,-101,-108,-102,-107,-121,58,-122,-120,-116,-117,-115,-113,58,-114,58,-184,-194,58,156,-119,-112,-88,58,-66,58,58,58,58,58,58,58,-61,58,-185,58,-195,58,-85,58,58,58,-53,58,58,58,-69,58,58,58,-63,58,-86,]),'IN':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,122,126,137,139,195,198,206,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,140,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-173,205,-131,-124,-184,-194,253,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'EQUAL':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,141,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'SYN':([0,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,136,137,139,168,186,195,198,199,210,211,214,219,220,221,222,225,238,239,241,243,262,266,288,306,312,313,321,331,334,],[22,-58,-54,-182,22,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,22,-131,-124,-9,-20,-184,-194,-23,-133,-204,22,-99,-119,-112,-88,-66,-21,-61,-185,-195,-207,-85,-22,-208,-91,-69,-63,-86,-92,]),'UPPER':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[12,12,-58,-54,-182,12,12,-7,-55,-5,-183,-57,-4,-2,-56,-17,12,-6,12,-8,-132,12,12,-155,12,-3,-125,-130,-74,-76,-79,12,-90,12,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,12,12,-126,12,-147,-148,-146,-149,-145,-60,-150,12,-144,-18,-19,12,12,12,-156,12,12,12,-131,12,-124,-110,-104,-105,-103,-106,12,-109,-100,-101,-108,-102,-107,-121,12,-122,-120,-116,-117,-115,-113,12,-114,-9,-20,12,-184,-194,-23,12,12,12,-133,-204,12,-99,-119,-112,-88,12,-66,12,12,12,12,12,12,12,-21,-61,12,-185,12,-195,12,12,12,-207,-85,12,12,12,-22,12,12,12,-208,12,-91,-69,12,12,12,-63,12,-86,-92,]),'BOOL':([104,105,109,175,201,205,232,236,253,260,305,319,320,],[-15,184,184,184,184,184,-16,184,184,184,184,184,184,]),'LOWER':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[24,24,-58,-54,-182,24,24,-7,-55,-5,-183,-57,-4,-2,-56,-17,24,-6,24,-8,-132,24,24,-155,24,-3,-125,-130,-74,-76,-79,24,-90,24,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,24,24,-126,24,-147,-148,-146,-149,-145,-60,-150,24,-144,-18,-19,24,24,24,-156,24,24,24,-131,24,-124,-110,-104,-105,-103,-106,24,-109,-100,-101,-108,-102,-107,-121,24,-122,-120,-116,-117,-115,-113,24,-114,-9,-20,24,-184,-194,-23,24,24,24,-133,-204,24,-99,-119,-112,-88,24,-66,24,24,24,24,24,24,24,-21,-61,24,-185,24,-195,24,24,24,-207,-85,24,24,24,-22,24,24,24,-208,24,-91,-69,24,24,24,-63,24,-86,-92,]),'MOD':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,89,99,137,139,195,198,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,154,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-82,-60,-131,-124,-184,-194,-119,154,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'DOWN':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,122,126,137,139,192,195,198,219,220,221,222,225,239,241,243,254,255,256,266,296,312,313,321,326,331,334,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-173,206,-131,-124,-52,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,298,-174,-178,-85,298,-91,-69,-63,-175,-86,-92,]),'BY':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,254,255,256,266,312,313,321,331,334,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,299,-174,-178,-85,-91,-69,-63,-86,-92,]),'ELSIF':([4,8,10,23,27,28,34,38,47,55,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,128,137,139,195,198,202,203,210,219,220,221,222,224,225,239,241,243,246,266,268,270,312,313,321,322,331,332,334,345,],[-58,-54,-182,-55,-183,-57,-56,-17,-132,-155,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-156,-131,-124,-184,-194,-153,247,-133,-99,-119,-112,-88,269,-66,-61,-185,-195,-154,-85,-94,309,-91,-69,-63,247,-86,-96,-92,-97,]),'TYPE':([0,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,136,137,139,168,186,195,198,199,210,211,214,219,220,221,222,225,238,239,241,243,262,266,288,306,312,313,321,331,334,],[36,-58,-54,-182,36,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,36,-131,-124,-9,-20,-184,-194,-23,-133,-204,36,-99,-119,-112,-88,-66,-21,-61,-185,-195,-207,-85,-22,-208,-91,-69,-63,-86,-92,]),'READ':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[31,31,-58,-54,-182,31,31,-7,-55,-5,-183,-57,-4,-2,-56,-17,31,-6,31,-8,-132,31,31,-155,31,-3,-125,-130,-74,-76,-79,31,-90,31,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,31,31,-126,31,-147,-148,-146,-149,-145,-60,-150,31,-144,-18,-19,31,31,31,-156,31,31,31,-131,31,-124,-110,-104,-105,-103,-106,31,-109,-100,-101,-108,-102,-107,-121,31,-122,-120,-116,-117,-115,-113,31,-114,-9,-20,31,-184,-194,-23,31,31,31,-133,-204,31,-99,-119,-112,-88,31,-66,31,31,31,31,31,31,31,-21,-61,31,-185,31,-195,31,31,31,-207,-85,31,31,31,-22,31,31,31,-208,31,-91,-69,31,31,31,-63,31,-86,-92,]),'CCONST':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[89,89,89,89,-125,89,89,89,-126,89,-147,-148,-146,-149,-145,-150,89,-144,89,89,89,89,-110,-104,-105,-103,-106,89,-109,-100,-101,-108,-102,-107,-121,89,-122,-120,-116,-117,-115,-113,89,-114,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'NULL':([14,39,42,52,58,66,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[84,84,84,84,-125,84,84,84,-126,84,-147,-148,-146,-149,-145,-150,84,-144,84,84,84,84,-110,-104,-105,-103,-106,84,-109,-100,-101,-108,-102,-107,-121,84,-122,-120,-116,-117,-115,-113,84,-114,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'ASSIGN':([4,8,9,10,17,23,26,27,28,34,38,99,104,109,115,122,126,135,171,172,173,174,176,178,179,180,182,183,184,185,187,195,198,225,231,232,239,241,243,313,314,316,317,321,337,338,],[-58,-54,-59,-182,102,-55,-53,-183,-57,-56,-17,-60,-15,188,201,-173,207,-53,-37,-30,-31,-43,-42,-28,235,-27,-34,-33,-32,-29,237,-184,-194,-66,-41,-16,-61,-185,-195,-69,-44,-35,-36,-63,-51,-46,]),'THEN':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,119,120,137,139,163,195,198,219,220,221,222,225,239,241,243,266,292,308,312,313,321,331,333,334,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,202,-93,-131,-124,223,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,202,223,-91,-69,-63,-86,223,-92,]),'ELSE':([4,8,10,23,27,28,34,38,47,55,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,128,137,139,195,198,202,203,210,219,220,221,222,224,225,239,241,243,246,266,268,270,312,313,321,322,331,332,334,345,],[-58,-54,-182,-55,-183,-57,-56,-17,-132,-155,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-156,-131,-124,-184,-194,-153,250,-133,-99,-119,-112,-88,271,-66,-61,-185,-195,-154,-85,-94,271,-91,-69,-63,250,-86,-96,-92,-97,]),'RPAREN':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,111,112,137,139,162,171,172,173,174,176,178,180,182,183,184,185,193,194,195,196,197,198,212,219,220,221,222,225,231,239,241,243,259,261,266,274,280,281,291,301,302,312,313,314,316,317,318,321,327,328,329,330,331,334,335,336,337,338,342,344,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,195,198,-131,-124,222,-37,-30,-31,-43,-42,-28,-27,-34,-33,-32,-29,241,-188,-184,-186,243,-194,258,-99,-119,-112,-88,-66,-41,-61,-185,-195,-211,303,-85,-40,316,317,-187,-213,-214,-91,-69,-44,-35,-36,195,-63,-216,-215,-212,343,-86,-92,-38,-188,-51,-46,346,-219,]),'PLUS':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,158,-82,-60,-131,-124,-184,-194,158,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'FI':([4,8,10,23,27,28,34,38,47,55,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,128,137,139,195,198,202,203,210,219,220,221,222,225,239,241,243,246,249,250,266,272,294,310,311,312,313,321,322,331,334,340,],[-58,-54,-182,-55,-183,-57,-56,-17,-132,-155,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-156,-131,-124,-184,-194,-153,248,-133,-99,-119,-112,-88,-66,-61,-185,-195,-154,293,-157,-85,312,-158,334,-95,-91,-69,-63,-159,-86,-92,-160,]),'EXIT':([0,2,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,50,55,56,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,128,129,131,136,137,139,168,186,195,198,199,202,209,210,211,214,219,220,221,222,225,238,239,241,243,246,250,262,266,288,294,306,312,313,321,331,334,],[37,37,-58,-54,-182,37,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,37,-155,37,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,-156,37,37,37,-131,-124,-9,-20,-184,-194,-23,37,37,-133,-204,37,-99,-119,-112,-88,-66,-21,-61,-185,-195,37,37,-207,-85,-22,37,-208,-91,-69,-63,-86,-92,]),'RESULT':([0,2,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,50,55,56,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,128,129,131,136,137,139,168,186,195,198,199,202,209,210,211,214,219,220,221,222,225,238,239,241,243,246,250,262,266,288,294,306,312,313,321,331,334,],[39,39,-58,-54,-182,39,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,39,-155,39,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,-156,39,39,39,-131,-124,-9,-20,-184,-194,-23,39,39,-133,-204,39,-99,-119,-112,-88,-66,-21,-61,-185,-195,39,39,-207,-85,-22,39,-208,-91,-69,-63,-86,-92,]),'ID':([0,2,4,8,10,13,14,19,21,22,23,25,27,28,30,32,34,36,37,38,39,40,42,45,47,48,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,107,108,109,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,169,175,177,186,188,195,198,199,200,201,202,205,207,209,210,211,212,214,219,220,221,222,223,225,226,227,230,232,233,235,236,237,238,239,240,241,242,243,246,247,250,253,260,262,266,267,269,271,288,294,297,299,304,305,306,309,312,313,315,318,319,320,321,325,331,334,],[38,38,-58,-54,-182,38,38,-7,104,104,-55,-5,-183,-57,-4,-2,-56,104,38,-17,38,-6,38,-8,-132,38,38,38,-155,38,-3,-125,-130,-74,-76,-79,38,-90,38,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,38,38,-126,38,-147,-148,-146,-149,-145,-60,-150,38,-144,-15,38,104,-19,38,38,38,38,-156,38,38,38,-131,38,-124,-110,-104,-105,-103,-106,38,-109,-100,-101,-108,-102,-107,-121,38,-122,-120,-116,-117,-115,-113,38,-114,-9,104,38,232,-20,38,-184,-194,-23,104,38,38,38,38,38,-133,-204,104,38,-99,-119,-112,-88,38,-66,38,38,38,-16,38,38,38,38,-21,-61,38,-185,38,-195,38,38,38,38,38,-207,-85,38,38,38,-22,38,38,38,104,38,-208,38,-91,-69,38,38,38,38,-63,38,-86,-92,]),'MODCREASE':([4,8,9,10,17,23,26,27,28,34,38,99,135,195,198,225,239,241,243,313,321,],[-58,-54,-59,-182,100,-55,-53,-183,-57,-56,-17,-60,-53,-184,-194,-66,-61,-185,-195,-69,-63,]),'LPAREN':([5,12,14,18,20,24,26,29,31,38,39,41,42,46,52,58,66,80,90,91,92,93,94,95,96,97,98,100,101,102,110,111,112,134,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,171,173,178,182,183,184,188,207,223,226,227,230,233,235,236,237,240,242,247,251,252,263,267,269,271,284,285,295,297,299,309,315,316,317,318,320,325,],[-203,-199,90,-201,-198,-200,111,112,-202,-17,90,-196,90,-197,90,-125,90,111,90,90,-126,90,-147,-148,-146,-149,-145,-150,90,-144,90,90,90,212,111,90,-110,-104,-105,-103,-106,90,-109,-100,-101,-108,-102,-107,-121,90,-122,-120,-116,-117,-115,-113,90,-114,230,-31,233,-34,-33,-32,90,90,90,90,90,90,90,90,90,90,90,90,90,230,233,305,90,90,90,318,233,233,90,90,90,90,-35,-36,90,90,90,]),'DIVIDE':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,89,99,137,139,195,198,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,-81,-127,-84,-118,-123,152,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-82,-60,-131,-124,-184,-194,-119,152,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'RBRACKET':([4,8,10,23,27,28,34,38,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,164,165,173,182,183,184,189,190,192,195,198,216,217,219,220,221,222,225,239,241,243,266,273,274,275,276,277,283,285,286,287,289,290,307,312,313,316,317,321,331,334,335,339,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,225,-67,-31,-34,-33,-32,239,-62,-52,-184,-194,266,-52,-99,-119,-112,-88,-66,-61,-185,-195,-85,-68,-40,313,314,-45,-47,-49,319,-50,-65,321,331,-91,-69,-35,-36,-63,-86,-92,-38,-48,]),'DIVCREASE':([4,8,9,10,17,23,26,27,28,34,38,99,135,195,198,225,239,241,243,313,321,],[-58,-54,-59,-182,97,-55,-53,-183,-57,-56,-17,-60,-53,-184,-194,-66,-61,-185,-195,-69,-63,]),'ABS':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[41,41,-58,-54,-182,41,41,-7,-55,-5,-183,-57,-4,-2,-56,-17,41,-6,41,-8,-132,41,41,-155,41,-3,-125,-130,-74,-76,-79,41,-90,41,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,41,41,-126,41,-147,-148,-146,-149,-145,-60,-150,41,-144,-18,-19,41,41,41,-156,41,41,41,-131,41,-124,-110,-104,-105,-103,-106,41,-109,-100,-101,-108,-102,-107,-121,41,-122,-120,-116,-117,-115,-113,41,-114,-9,-20,41,-184,-194,-23,41,41,41,-133,-204,41,-99,-119,-112,-88,41,-66,41,41,41,41,41,41,41,-21,-61,41,-185,41,-195,41,41,41,-207,-85,41,41,41,-22,41,41,41,-208,41,-91,-69,41,41,41,-63,41,-86,-92,]),'IF':([0,2,4,8,10,13,14,19,23,25,27,28,30,32,34,38,39,40,42,45,47,50,52,55,56,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,107,108,110,111,112,128,129,131,136,137,138,139,168,186,188,195,198,199,202,207,209,210,211,214,219,220,221,222,223,225,226,227,230,233,235,236,237,238,239,240,241,242,243,246,247,250,262,266,267,269,271,288,294,297,299,306,309,312,313,315,318,320,321,325,331,334,],[42,42,-58,-54,-182,42,91,-7,-55,-5,-183,-57,-4,-2,-56,-17,91,-6,91,-8,-132,42,91,-155,42,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,91,91,91,-147,-148,-146,-149,-145,-60,-150,91,-144,-18,-19,91,91,91,-156,42,42,42,-131,91,-124,-9,-20,91,-184,-194,-23,42,91,42,-133,-204,42,-99,-119,-112,-88,91,-66,91,91,91,91,91,91,91,-21,-61,91,-185,91,-195,42,91,42,-207,-85,91,91,91,-22,42,91,91,-208,91,-91,-69,91,91,91,-63,91,-86,-92,]),'INCREASE':([4,8,9,10,17,23,26,27,28,34,38,99,135,195,198,225,239,241,243,313,321,],[-58,-54,-59,-182,96,-55,-53,-183,-57,-56,-17,-60,-53,-184,-194,-66,-61,-185,-195,-69,-63,]),'OR':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,143,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'DCL':([0,4,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,136,137,139,168,186,195,198,199,210,211,214,219,220,221,222,225,238,239,241,243,262,266,288,306,312,313,321,331,334,],[21,-58,-54,-182,21,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,21,-131,-124,-9,-20,-184,-194,-23,-133,-204,21,-99,-119,-112,-88,-66,-21,-61,-185,-195,-207,-85,-22,-208,-91,-69,-63,-86,-92,]),'$end':([4,7,8,10,13,19,23,25,27,28,30,32,34,38,40,45,47,57,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,107,108,137,139,168,186,195,198,199,210,211,219,220,221,222,225,238,239,241,243,266,288,312,313,321,331,334,],[-58,0,-54,-182,-1,-7,-55,-5,-183,-57,-4,-2,-56,-17,-6,-8,-132,-3,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-18,-19,-131,-124,-9,-20,-184,-194,-23,-133,-204,-99,-119,-112,-88,-66,-21,-61,-185,-195,-85,-22,-91,-69,-63,-86,-92,]),'COLON':([4,8,10,11,23,26,27,28,34,38,51,59,60,61,62,64,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,165,166,190,191,192,195,198,217,218,219,220,221,222,225,239,241,243,266,278,279,284,312,313,321,331,334,336,],[-58,-54,-182,56,-55,-134,-183,-57,-56,-17,129,-130,-74,-76,-79,-90,-59,-78,-89,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-39,227,-64,240,-52,-184,-194,-39,267,-99,-119,-112,-88,-66,-61,-185,-195,-85,-39,315,-53,-91,-69,-63,-86,-92,-39,]),'AND':([4,8,10,23,27,28,34,38,59,60,61,62,67,68,69,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,88,89,99,137,139,195,198,219,220,221,222,225,239,241,243,266,284,313,321,331,],[-58,-54,-182,-55,-183,-57,-56,-17,-130,-74,-76,-79,-59,-78,150,-81,-127,-84,-118,-123,-111,-75,-77,-72,-53,-129,-73,-83,-80,-71,-128,-98,-82,-60,-131,-124,-184,-194,-99,-119,-112,-88,-66,-61,-185,-195,-85,-53,-69,-63,-86,]),'NOT':([14,39,42,52,90,91,93,94,95,96,97,98,100,101,102,110,111,112,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[92,92,92,92,92,92,92,-147,-148,-146,-149,-145,-150,92,-144,92,92,92,92,-110,-104,-105,-103,-106,92,-109,-100,-101,-108,-102,-107,-121,92,-122,-120,-116,-117,-115,-113,92,-114,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start_element':([110,],[189,]),'formal_parameter':([212,304,],[259,329,]),'do_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'start_value':([207,],[254,]),'operand2':([14,39,42,52,90,91,93,101,110,111,112,138,145,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[76,76,76,76,76,76,76,76,76,76,76,76,76,221,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'discrete_expression':([207,297,325,],[255,324,341,]),'arithmetic_multiplicative_operator':([76,221,],[153,153,]),'boolean_expression':([42,52,91,247,269,309,],[119,130,163,292,308,333,]),'left_element':([110,],[191,]),'end_value':([254,296,],[300,323,]),'bracketed_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'result_spec':([213,],[264,]),'newmode_list':([36,],[114,]),'action_statement_list':([2,131,202,250,],[50,209,246,294,]),'literal_range':([230,233,236,318,320,],[280,281,287,280,287,]),'call_action':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[9,9,9,67,67,67,9,67,9,67,67,67,67,67,67,67,67,67,9,9,9,67,67,67,67,67,9,67,9,9,67,67,67,67,67,67,67,67,67,67,9,67,9,67,67,67,9,67,67,67,67,67,67,67,]),'procedure_call':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'label_id':([0,2,13,37,50,131,136,202,209,214,246,250,294,],[11,51,11,116,51,51,11,51,51,11,51,51,51,]),'statement_list':([0,136,],[13,214,]),'else_expression':([224,270,],[272,310,]),'declaration':([21,169,],[106,228,]),'operator1':([69,],[145,]),'location':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[17,17,17,71,71,71,17,71,17,137,71,71,71,71,71,71,71,71,17,17,17,71,71,71,71,71,17,71,17,17,71,71,71,71,71,71,71,71,71,71,17,71,17,71,71,71,17,71,71,71,71,71,71,71,]),'procedure_statement':([0,13,136,214,],[19,19,19,19,]),'parameter_attribute':([302,],[328,]),'formal_parameter_list':([212,],[261,]),'result':([14,39,],[75,118,]),'integer_expression':([110,138,240,299,],[190,216,289,326,]),'parameter_spec':([260,],[301,]),'index_mode':([236,320,],[283,339,]),'empty_literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'identifier_list':([21,22,36,107,169,200,212,304,],[105,109,115,109,105,115,260,260,]),'synonym_statement':([0,13,136,214,],[25,25,25,25,]),'expression':([14,39,42,52,90,91,93,101,110,111,112,138,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[81,81,120,120,162,120,165,167,192,194,194,217,238,256,268,273,274,278,278,282,278,288,192,194,120,274,120,311,256,192,120,274,336,278,256,]),'primitive_value':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'value_array_slice':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'if_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'membership_operator':([69,],[148,]),'builtin_name':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'closed_dyadic_operator':([17,],[98,]),'statement':([0,13,136,214,],[32,57,32,57,]),'string_mode':([105,109,175,201,260,305,319,],[176,176,176,176,176,176,176,]),'literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'discrete_mode':([105,109,175,201,205,236,253,260,305,319,320,],[178,178,178,178,252,285,295,178,178,178,285,]),'string_slice':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'mode_definition':([36,200,],[113,244,]),'referenced_location':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'synonym_definition':([22,107,],[108,186,]),'else_clause':([203,322,],[249,340,]),'operand3':([14,39,42,52,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[73,73,73,73,73,73,73,73,73,73,73,73,73,220,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'then_expression':([163,308,333,],[224,332,345,]),'relational_operator':([69,],[147,]),'newmode_statement':([0,13,136,214,],[40,40,40,40,]),'operand1':([14,39,42,52,90,91,93,101,110,111,112,138,145,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[88,88,88,88,88,88,88,88,88,88,88,88,219,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'return_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'action_statement':([0,2,13,50,131,136,202,209,214,246,250,294,],[45,55,45,128,55,45,55,128,45,128,55,128,]),'parameter':([111,112,242,318,],[196,196,291,196,]),'parenthesis_gambiarra':([134,],[213,]),'action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[1,1,1,1,132,132,1,1,1,1,1,1,1,1,]),'integer_literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,229,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,277,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'procedure_definition':([56,],[133,]),'character_literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'parenthesized_expression':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'step_value':([254,],[296,]),'reference_mode':([105,109,175,201,260,305,319,],[185,185,185,185,185,185,185,]),'array_slice':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assigning_operator':([17,],[101,]),'composite_mode':([105,109,175,201,260,305,319,],[172,172,172,172,172,172,172,]),'iteration':([48,],[123,]),'discrete_range_mode':([105,109,175,201,205,236,253,260,305,319,320,],[182,182,182,182,182,182,182,182,182,182,182,]),'array_mode':([105,109,175,201,260,305,319,],[174,174,174,174,174,174,174,]),'elsif_expression':([224,],[270,]),'array_primitive_value':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'program':([0,],[7,]),'monadic_operator':([14,39,42,52,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'conditional_expression':([14,39,42,52,90,91,93,101,110,111,112,138,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'character_string_literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'parameter_list':([111,112,318,],[193,197,193,]),'operand0':([14,39,42,52,90,91,93,101,110,111,112,138,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'string_concatenation_operator':([88,219,],[161,161,]),'dereferenced_reference':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'result_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'element_mode':([319,],[338,]),'control_part':([2,],[54,]),'loop_counter':([48,],[126,]),'string_length':([229,],[276,]),'operand4':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[74,74,74,74,139,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'while_control':([2,121,],[53,204,]),'array_location':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'string_element':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boolean_literal':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'expression_list':([93,],[164,]),'value_array_element':([14,39,42,52,66,90,91,93,101,110,111,112,138,145,153,160,188,207,223,226,227,230,233,235,236,237,240,242,247,267,269,271,297,299,309,315,318,320,325,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'identifier':([0,2,13,14,37,39,42,48,50,52,56,63,66,90,91,93,101,105,109,110,111,112,129,131,136,138,145,153,160,175,188,201,202,205,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,253,260,267,269,271,294,297,299,305,309,315,318,319,320,325,],[26,26,26,80,117,80,80,122,26,80,135,80,80,80,80,80,80,171,171,80,80,80,135,26,26,80,80,80,80,171,80,171,26,251,80,26,26,80,80,80,80,80,80,284,80,80,80,26,80,26,251,171,80,80,80,26,80,80,171,80,80,80,171,284,80,]),'builtin_call':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'formal_procedure_head':([56,],[136,]),'array_element':([0,2,13,14,39,42,50,52,56,63,66,90,91,93,101,110,111,112,129,131,136,138,145,153,160,188,202,207,209,214,223,226,227,230,233,235,236,237,240,242,246,247,250,267,269,271,294,297,299,309,315,318,320,325,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'right_element':([240,],[290,]),'declaration_statement':([0,13,136,214,],[30,30,30,30,]),'for_control':([48,],[121,]),'then_clause':([119,292,],[203,322,]),'assignment_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'upper_bound':([227,267,315,],[275,307,335,]),'result_attribute':([330,],[342,]),'mode':([105,109,175,201,260,305,319,],[179,187,231,245,302,330,337,]),'lower_bound':([93,138,230,233,236,318,320,],[166,218,279,279,279,279,279,]),'mode_name':([105,109,175,201,260,305,319,],[180,180,180,180,180,180,180,]),'index_mode_list':([236,],[286,]),'synonym_list':([22,],[107,]),'initialization':([179,],[234,]),'step_enumeration':([48,],[124,]),'declaration_list':([21,],[103,]),'arithmetic_additive_operator':([88,219,],[159,159,]),'exit_action':([0,2,13,50,56,129,131,136,202,209,214,246,250,294,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'operator2':([88,219,],[160,160,]),'range_enumeration':([48,],[125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',22),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',28),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',29),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',40),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',45),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',50),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',51),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',58),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',59),
  ('initialization -> ASSIGN expression','initialization',2,'p_initialization','parser.py',66),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','parser.py',72),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','parser.py',73),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list','synonym_statement',2,'p_synonym_statement','parser.py',87),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',95),
  ('synonym_list -> synonym_list synonym_definition','synonym_list',2,'p_synonym_list','parser.py',96),
  ('synonym_definition -> identifier_list ASSIGN expression','synonym_definition',3,'p_synonym_definition','parser.py',103),
  ('synonym_definition -> identifier_list mode ASSIGN expression','synonym_definition',4,'p_synonym_definition','parser.py',104),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',116),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',122),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',123),
  ('mode_definition -> identifier_list ASSIGN mode','mode_definition',3,'p_mode_definition','parser.py',130),
  ('mode -> mode_name','mode',1,'p_mode','parser.py',136),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',137),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',138),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',139),
  ('discrete_mode -> INT','discrete_mode',1,'p_discrete_mode','parser.py',144),
  ('discrete_mode -> BOOL','discrete_mode',1,'p_discrete_mode','parser.py',145),
  ('discrete_mode -> CHAR','discrete_mode',1,'p_discrete_mode','parser.py',146),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',147),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',167),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',168),
  ('mode_name -> identifier','mode_name',1,'p_mode_name','parser.py',172),
  ('literal_range -> lower_bound COLON upper_bound','literal_range',3,'p_literal_range','parser.py',182),
  ('lower_bound -> expression','lower_bound',1,'p_lower_bound','parser.py',187),
  ('upper_bound -> expression','upper_bound',1,'p_upper_bound','parser.py',193),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',199),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',205),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',206),
  ('string_mode -> CHARS LBRACKET string_length RBRACKET','string_mode',4,'p_string_mode','parser.py',211),
  ('string_length -> integer_literal','string_length',1,'p_string_length','parser.py',217),
  ('array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode','array_mode',5,'p_array_mode','parser.py',223),
  ('index_mode_list -> index_mode','index_mode_list',1,'p_index_mode_list','parser.py',229),
  ('index_mode_list -> index_mode_list COMMA index_mode','index_mode_list',3,'p_index_mode_list','parser.py',230),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('element_mode -> mode','element_mode',1,'p_element_mode','parser.py',243),
  ('integer_expression -> expression','integer_expression',1,'p_integer_expression','parser.py',249),
  ('location -> identifier','location',1,'p_location','parser.py',255),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',256),
  ('location -> string_element','location',1,'p_location','parser.py',257),
  ('location -> string_slice','location',1,'p_location','parser.py',258),
  ('location -> array_element','location',1,'p_location','parser.py',259),
  ('location -> array_slice','location',1,'p_location','parser.py',260),
  ('location -> call_action','location',1,'p_location','parser.py',261),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',266),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',272),
  ('start_element -> integer_expression','start_element',1,'p_start_element','parser.py',278),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',284),
  ('left_element -> integer_expression','left_element',1,'p_left_element','parser.py',294),
  ('right_element -> integer_expression','right_element',1,'p_right_element','parser.py',300),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',306),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',312),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',313),
  ('array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET','array_slice',6,'p_array_slice','parser.py',320),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',326),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',332),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',333),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',334),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',341),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',342),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',343),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',344),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',349),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',369),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',376),
  ('value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET','value_array_element',4,'p_value_array_element','parser.py',382),
  ('value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',388),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',394),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',400),
  ('expression -> operand0','expression',1,'p_expression','parser.py',406),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',407),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',413),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',422),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',428),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',434),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',440),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',441),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',450),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',451),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',458),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',459),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',464),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',465),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',466),
  ('relational_operator -> DIFF','relational_operator',1,'p_relational_operator','parser.py',467),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',468),
  ('relational_operator -> GREATEREQ','relational_operator',1,'p_relational_operator','parser.py',469),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',470),
  ('relational_operator -> LESSEQ','relational_operator',1,'p_relational_operator','parser.py',471),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',476),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',481),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',482),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',490),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',491),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',496),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',497),
  ('string_concatenation_operator -> STRCAT','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',503),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',507),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',508),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',515),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',516),
  ('arithmetic_multiplicative_operator -> MOD','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',517),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',522),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',523),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',531),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',532),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',537),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',538),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',539),
  ('operand4 -> integer_literal','operand4',1,'p_operand4','parser.py',540),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',545),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',550),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',551),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',560),
  ('action -> bracketed_action','action',1,'p_action','parser.py',565),
  ('action -> assignment_action','action',1,'p_action','parser.py',566),
  ('action -> call_action','action',1,'p_action','parser.py',567),
  ('action -> exit_action','action',1,'p_action','parser.py',568),
  ('action -> return_action','action',1,'p_action','parser.py',569),
  ('action -> result_action','action',1,'p_action','parser.py',570),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',575),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',576),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',581),
  ('assigning_operator -> ASSIGN','assigning_operator',1,'p_assigning_operator','parser.py',600),
  ('assigning_operator -> closed_dyadic_operator','assigning_operator',1,'p_assigning_operator','parser.py',601),
  ('closed_dyadic_operator -> INCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',606),
  ('closed_dyadic_operator -> DECREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',607),
  ('closed_dyadic_operator -> MULCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',608),
  ('closed_dyadic_operator -> DIVCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',609),
  ('closed_dyadic_operator -> MODCREASE','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',610),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',615),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',616),
  ('then_clause -> THEN','then_clause',1,'p_then_clause','parser.py',625),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',626),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',635),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',636),
  ('else_clause -> ELSE','else_clause',1,'p_else_clause','parser.py',643),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',644),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',645),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',646),
  ('do_action -> DO OD','do_action',2,'p_do_action','parser.py',661),
  ('do_action -> DO control_part SEMI OD','do_action',4,'p_do_action','parser.py',662),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',663),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',664),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',678),
  ('control_part -> FOR for_control','control_part',2,'p_control_part','parser.py',679),
  ('control_part -> FOR for_control while_control','control_part',3,'p_control_part','parser.py',680),
  ('for_control -> iteration','for_control',1,'p_for_control','parser.py',689),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',694),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',695),
  ('step_enumeration -> loop_counter ASSIGN start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',700),
  ('step_enumeration -> loop_counter ASSIGN start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',701),
  ('loop_counter -> identifier','loop_counter',1,'p_loop_counter','parser.py',708),
  ('start_value -> discrete_expression','start_value',1,'p_start_value','parser.py',713),
  ('step_value -> BY integer_expression','step_value',2,'p_step_value','parser.py',718),
  ('end_value -> TO discrete_expression','end_value',2,'p_end_value','parser.py',723),
  ('end_value -> DOWN TO discrete_expression','end_value',3,'p_end_value','parser.py',724),
  ('discrete_expression -> expression','discrete_expression',1,'p_discrete_expression','parser.py',732),
  ('range_enumeration -> loop_counter IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',737),
  ('range_enumeration -> loop_counter DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',738),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',745),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',749),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',750),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',755),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',756),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',763),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',764),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',771),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',779),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',783),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',784),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',791),
  ('result -> expression','result',1,'p_result','parser.py',795),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',800),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',801),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',808),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',809),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',810),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',811),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',812),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',813),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',814),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',815),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',819),
  ('procedure_definition -> formal_procedure_head END','procedure_definition',2,'p_procedure_definition','parser.py',823),
  ('procedure_definition -> formal_procedure_head statement_list END','procedure_definition',3,'p_procedure_definition','parser.py',824),
  ('formal_procedure_head -> PROC parenthesis_gambiarra SEMI','formal_procedure_head',3,'p_formal_procedure_head','parser.py',831),
  ('formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI','formal_procedure_head',4,'p_formal_procedure_head','parser.py',832),
  ('parenthesis_gambiarra -> LPAREN RPAREN','parenthesis_gambiarra',2,'p_parenthesis_gambiarra','parser.py',839),
  ('parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN','parenthesis_gambiarra',3,'p_parenthesis_gambiarra','parser.py',840),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',847),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',848),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',855),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',859),
  ('parameter_spec -> mode parameter_attribute','parameter_spec',2,'p_parameter_spec','parser.py',860),
  ('parameter_attribute -> LOC','parameter_attribute',1,'p_parameter_attribute','parser.py',867),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',872),
  ('result_spec -> RETURNS LPAREN mode result_attribute RPAREN','result_spec',5,'p_result_spec','parser.py',873),
  ('result_attribute -> LOC','result_attribute',1,'p_result_attribute','parser.py',880),
]
