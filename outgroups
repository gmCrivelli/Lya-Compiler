Procedure declaration: p1
Integer Mode: int
Integer Literal: 3
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []]}
{'x': ['var', 'int']}
Identifier: ID "p1" type "proc void"
Integer Literal: 1
Integer Literal: 3
Integer Mode: int
Mode name
Identifier: ID "vector" type "type $int"
No counter found, creating new
Integer Literal: 1
Integer Literal: 3
Identifier: ID "i" type "var int"
ERROR (line 13): Attempted subscript in non-array element
Identifier: ID "i" type "var int"
Identifier: ID "i" type "var int"
ERROR (line 13): Mismatched assignment types None and int
Assigning operator: =
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []], 'vector': ['type', '$int'], 'x1': ['var', '$int']}
{'i': ['var', 'int']}
Identifier: ID "x1" type "var $int"
ERROR (line 15): Variable i was not defined
Identifier: ID "x1" type "var $int"
ERROR (line 15): Variable j was not defined
Assigning operator: +=
Integer Mode: int
Procedure declaration: p2
Integer Mode: int
Integer Literal: 3
Identifier: ID "x" type "var int"
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []], 'vector': ['type', '$int'], 'p2': ['proc', 'int', []], 'x1': ['var', '$int']}
{'x': ['var', 'int']}
Integer Mode: int
Identifier: ID "p1" type "proc void"
ERROR (line 22): Mismatched type initialization, expected int, found void
Builtin Name: print
Identifier: ID "y1" type "var int"
Identifier: ID "p2" type "proc int"
Integer Literal: 1
Integer Literal: 3
Integer Mode: int
ERROR (line 26): Identifier vector already declared as type $int
Mode name
Identifier: ID "vector" type "type $int"
No counter found, creating new
Integer Literal: 1
Integer Literal: 3
Integer Mode: int
Identifier: ID "v" type "var $int"
Identifier: ID "i" type "var int"
Identifier: ID "i" type "var int"
Assigning operator: =
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []], 'vector': ['type', '$int'], 'v': ['var', '$int'], 'p2': ['proc', 'int', []], 'y1': ['var', 'int'], 'x1': ['var', '$int']}
{'i': ['var', 'int']}
String Mode
Integer Literal: 8
Character String Literal: "setembro"
Boolean Mode: bool
If Action
Boolean expression
Identifier: ID "b" type "var bool"
Builtin Name: print
Identifier: ID "s" type "var string"
Integer Literal: 0
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []], 'vector': ['type', '$int'], 'v': ['var', '$int'], 's': ['var', 'string'], 'b': ['var', 'bool'], 'p2': ['proc', 'int', []], 'y1': ['var', 'int'], 'x1': ['var', '$int']}
{}
Builtin Name: print
Character String Literal: "agosto"
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'p1': ['proc', 'void', []], 'vector': ['type', '$int'], 'v': ['var', '$int'], 's': ['var', 'string'], 'b': ['var', 'bool'], 'p2': ['proc', 'int', []], 'y1': ['var', 'int'], 'x1': ['var', '$int']}
{}
Integer Mode: int
Integer Mode: int
Mode name
Identifier: ID "ptr" type "type &int"
Identifier: ID "x" type "var int"
Integer Mode: int
Integer Mode: int
Integer Mode: int
Procedure declaration: q
Integer Mode: int
Identifier: ID "w" type "var !int"
Integer Literal: 5
ERROR (line 47): Mismatched assignment types !int and int
Assigning operator: =
Identifier: ID "z" type "var &int"
Identifier: ID "y" type "var int"
Assigning operator: =
Identifier: ID "z" type "var &int"
ERROR (line 45): Expected !int return, found int
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'vector': ['type', '$int'], 'ptr': ['type', '&int'], 'x': ['var', 'int'], 'b': ['var', 'bool'], 'p': ['var', '&int'], 'y1': ['var', 'int'], 'q': ['proc', '!int', ['!int']], 'p1': ['proc', 'void', []], 'v': ['var', '$int'], 'p2': ['proc', 'int', []], 's': ['var', 'string'], 'y': ['var', 'int'], 'x1': ['var', '$int']}
{'w': ['var', '!int'], 'z': ['var', '&int']}
Identifier: ID "x" type "var int"
Integer Literal: 10
Assigning operator: =
Identifier: ID "y" type "var int"
Integer Literal: 20
Assigning operator: =
Builtin Name: print
Identifier: ID "p" type "var &int"
Identifier: ID "p" type "var &int"
Identifier: ID "q" type "proc !int"
ERROR (line 54): Incorrect parameter count at Procedure q; Expected 1, found 0
ERROR (line 54): Mismatched assignment types &int and &!int
Assigning operator: =
Builtin Name: print
Identifier: ID "p" type "var &int"
Identifier: ID "q" type "proc !int"
Identifier: ID "x" type "var int"
ERROR (line 56): Incorrect parameter type at position i=0; Expected !int, found int
Identifier: ID "x" type "var int"
ERROR (line 56): Assignment to unsupported dcl_type proc
Boolean Mode: bool
Integer Mode: int
Identifier: ID "xx" type "var int"
Conditional expression
Boolean expression
Identifier: ID "bb" type "var bool"
Then expression
Identifier: ID "yy" type "var int"
Else expression
Identifier: ID "zz" type "var int"
Assigning operator: =
Identifier: ID "ww" type "var int"
Conditional expression
Boolean expression
Identifier: ID "bb" type "var bool"
Then expression
Identifier: ID "xx" type "var int"
Elsif expression
Boolean expression
Identifier: ID "c" type "var bool"
Then expression
Identifier: ID "yy" type "var int"
Else expression
Identifier: ID "zz" type "var int"
Assigning operator: =
Builtin Name: print
Conditional expression
Boolean expression
Identifier: ID "d" type "var bool"
Then expression
Identifier: ID "xx" type "var int"
Elsif expression
Boolean expression
Identifier: ID "b" type "var bool"
Then expression
Identifier: ID "zz" type "var int"
Elsif expression
Boolean expression
Identifier: ID "c" type "var bool"
Then expression
Identifier: ID "yy" type "var int"
Else expression
Identifier: ID "ww" type "var int"
Printing environment scope stack:
{'int': <semantic.ExprType object at 0x7f5bb2faf080>, 'bool': <semantic.ExprType object at 0x7f5bb2f96470>, 'char': <semantic.ExprType object at 0x7f5bb2f964e0>, 'string': <semantic.ExprType object at 0x7f5bb2f96518>}
{'ww': ['var', 'int'], 'vector': ['type', '$int'], 'ptr': ['type', '&int'], 'x': ['var', 'int'], 'd': ['var', 'bool'], 'b': ['var', 'bool'], 'p': ['var', '&int'], 'y1': ['var', 'int'], 'q': ['proc', '!int', ['!int']], 'c': ['var', 'bool'], 'bb': ['var', 'bool'], 'p1': ['proc', 'void', []], 'zz': ['var', 'int'], 'v': ['var', '$int'], 'xx': ['var', 'int'], 'yy': ['var', 'int'], 'p2': ['proc', 'int', []], 's': ['var', 'string'], 'y': ['var', 'int'], 'x1': ['var', '$int']}
