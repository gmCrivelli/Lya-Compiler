Integer Mode: int
Builtin Name: read
Identifier: ID "m" type "var int"
Identifier: ID "n" type "var int"
Identifier: ID "s" type "var int"
Integer Literal: 0
Assigning to s with operator =
Boolean expression
Identifier: ID "m" type "var int"
Identifier: ID "n" type "var int"
Relational or Membership operator: <=
Identifier: ID "s" type "var int"
Identifier: ID "m" type "var int"
Identifier: ID "n" type "var int"
Binary operator: *
Assigning to s with operator +=
Builtin Name: print
Identifier: ID "m" type "var int"
Identifier: ID "s" type "var int"
Identifier: ID "m" type "var int"
Integer Literal: 1
Assigning to m with operator +=
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f943c606048>, 'char': <semantic.ExprType object at 0x7f943c684fd0>, 'int': <semantic.ExprType object at 0x7f943c67e438>, 'bool': <semantic.ExprType object at 0x7f943c684f60>}
{'s': ['var', 'int', False], 'm': ['var', 'int', False], 'n': ['var', 'int', False]}
{}
Printing environment scope stack:
{'string': <semantic.ExprType object at 0x7f943c606048>, 'char': <semantic.ExprType object at 0x7f943c684fd0>, 'int': <semantic.ExprType object at 0x7f943c67e438>, 'bool': <semantic.ExprType object at 0x7f943c684f60>}
{'s': ['var', 'int', False], 'm': ['var', 'int', False], 'n': ['var', 'int', False]}
