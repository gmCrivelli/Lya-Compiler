Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMI
Rule 10    declaration_list -> declaration
Rule 11    declaration_list -> declaration_list COMMA declaration
Rule 12    declaration -> identifier_list mode
Rule 13    declaration -> identifier_list mode initialization
Rule 14    initialization -> ASSIGN expression
Rule 15    identifier_list -> identifier
Rule 16    identifier_list -> identifier_list COMMA identifier
Rule 17    identifier -> ID
Rule 18    synonym_statement -> SYN synonym_list SEMI
Rule 19    synonym_list -> synonym_definition
Rule 20    synonym_list -> synonym_list synonym_definition
Rule 21    synonym_definition -> identifier_list initialization
Rule 22    synonym_definition -> identifier_list mode initialization
Rule 23    newmode_statement -> TYPE newmode_list SEMI
Rule 24    newmode_list -> mode_definition
Rule 25    newmode_list -> newmode_list COMMA mode_definition
Rule 26    mode_definition -> identifier_list ASSIGN mode
Rule 27    mode -> mode_name
Rule 28    mode -> discrete_mode
Rule 29    mode -> reference_mode
Rule 30    mode -> composite_mode
Rule 31    discrete_mode -> integer_mode
Rule 32    discrete_mode -> boolean_mode
Rule 33    discrete_mode -> character_mode
Rule 34    discrete_mode -> discrete_range_mode
Rule 35    integer_mode -> INT
Rule 36    boolean_mode -> BOOL
Rule 37    character_mode -> CHAR
Rule 38    discrete_range_mode -> identifier LPAREN literal_range RPAREN
Rule 39    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 40    mode_name -> identifier
Rule 41    literal_range -> lower_bound COLON upper_bound
Rule 42    lower_bound -> expression
Rule 43    upper_bound -> expression
Rule 44    reference_mode -> REF mode
Rule 45    composite_mode -> string_mode
Rule 46    composite_mode -> array_mode
Rule 47    string_mode -> CHARS LBRACKET string_length RBRACKET
Rule 48    string_length -> integer_literal
Rule 49    array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode
Rule 50    index_mode_list -> index_mode
Rule 51    index_mode_list -> index_mode_list COMMA index_mode
Rule 52    index_mode -> discrete_mode
Rule 53    index_mode -> literal_range
Rule 54    element_mode -> mode
Rule 55    integer_expression -> expression
Rule 56    location -> identifier
Rule 57    location -> dereferenced_reference
Rule 58    location -> array_element
Rule 59    location -> array_slice
Rule 60    location -> call_action
Rule 61    dereferenced_reference -> location ARROW
Rule 62    array_element -> array_location LBRACKET expression_list RBRACKET
Rule 63    expression_list -> expression
Rule 64    expression_list -> expression_list COMMA expression
Rule 65    array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET
Rule 66    array_location -> location
Rule 67    primitive_value -> literal
Rule 68    primitive_value -> value_array_element
Rule 69    primitive_value -> value_array_slice
Rule 70    primitive_value -> parenthesized_expression
Rule 71    literal -> integer_literal
Rule 72    literal -> boolean_literal
Rule 73    literal -> character_literal
Rule 74    literal -> empty_literal
Rule 75    literal -> character_string_literal
Rule 76    integer_literal -> ICONST
Rule 77    boolean_literal -> FALSE
Rule 78    boolean_literal -> TRUE
Rule 79    character_literal -> CCONST
Rule 80    empty_literal -> NULL
Rule 81    character_string_literal -> SCONST
Rule 82    value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET
Rule 83    value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
Rule 84    array_primitive_value -> primitive_value
Rule 85    parenthesized_expression -> LPAREN expression RPAREN
Rule 86    expression -> operand0
Rule 87    expression -> conditional_expression
Rule 88    conditional_expression -> IF boolean_expression then_expression else_expression FI
Rule 89    conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI
Rule 90    boolean_expression -> expression
Rule 91    then_expression -> THEN expression
Rule 92    else_expression -> ELSE expression
Rule 93    elsif_expression -> ELSIF boolean_expression then_expression
Rule 94    elsif_expression -> elsif_expression ELSIF boolean_expression then_expression
Rule 95    operand0 -> operand1
Rule 96    operand0 -> operand0 operator1 operand1
Rule 97    operator1 -> relational_operator
Rule 98    operator1 -> membership_operator
Rule 99    relational_operator -> AND
Rule 100   relational_operator -> OR
Rule 101   relational_operator -> EQUAL
Rule 102   relational_operator -> DIFF
Rule 103   relational_operator -> GREATER
Rule 104   relational_operator -> GREATEREQ
Rule 105   relational_operator -> LESS
Rule 106   relational_operator -> LESSEQ
Rule 107   membership_operator -> IN
Rule 108   operand1 -> operand2
Rule 109   operand1 -> operand1 operator2 operand2
Rule 110   operator2 -> arithmetic_additive_operator
Rule 111   operator2 -> string_concatenation_operator
Rule 112   arithmetic_additive_operator -> PLUS
Rule 113   arithmetic_additive_operator -> MINUS
Rule 114   string_concatenation_operator -> STRCAT
Rule 115   operand2 -> operand3
Rule 116   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 117   arithmetic_multiplicative_operator -> TIMES
Rule 118   arithmetic_multiplicative_operator -> DIVIDE
Rule 119   arithmetic_multiplicative_operator -> MOD
Rule 120   operand3 -> operand4
Rule 121   operand3 -> monadic_operator operand4
Rule 122   monadic_operator -> MINUS
Rule 123   monadic_operator -> NOT
Rule 124   operand4 -> location
Rule 125   operand4 -> referenced_location
Rule 126   operand4 -> primitive_value
Rule 127   referenced_location -> ARROW location
Rule 128   action_statement -> action SEMI
Rule 129   action_statement -> label_id COLON action SEMI
Rule 130   label_id -> identifier
Rule 131   action -> bracketed_action
Rule 132   action -> assignment_action
Rule 133   action -> call_action
Rule 134   action -> exit_action
Rule 135   action -> return_action
Rule 136   action -> result_action
Rule 137   bracketed_action -> if_action
Rule 138   bracketed_action -> do_action
Rule 139   assignment_action -> location assigning_operator expression
Rule 140   assigning_operator -> ASSIGN
Rule 141   assigning_operator -> closed_dyadic_operator
Rule 142   closed_dyadic_operator -> INCREASE
Rule 143   closed_dyadic_operator -> DECREASE
Rule 144   closed_dyadic_operator -> MULCREASE
Rule 145   closed_dyadic_operator -> DIVCREASE
Rule 146   closed_dyadic_operator -> MODCREASE
Rule 147   if_action -> IF boolean_expression then_clause FI
Rule 148   if_action -> IF boolean_expression then_clause else_clause FI
Rule 149   then_clause -> THEN
Rule 150   then_clause -> THEN action_statement_list
Rule 151   action_statement_list -> action_statement
Rule 152   action_statement_list -> action_statement_list action_statement
Rule 153   else_clause -> ELSE
Rule 154   else_clause -> ELSE action_statement_list
Rule 155   else_clause -> ELSIF boolean_expression then_clause
Rule 156   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 157   do_action -> DO OD
Rule 158   do_action -> DO control_part SEMI OD
Rule 159   do_action -> DO action_statement_list OD
Rule 160   do_action -> DO control_part SEMI action_statement_list OD
Rule 161   control_part -> while_control
Rule 162   control_part -> FOR for_control
Rule 163   control_part -> FOR for_control while_control
Rule 164   for_control -> iteration
Rule 165   iteration -> step_enumeration
Rule 166   iteration -> range_enumeration
Rule 167   step_enumeration -> loop_counter ASSIGN start_value end_value
Rule 168   step_enumeration -> loop_counter ASSIGN start_value step_value end_value
Rule 169   loop_counter -> identifier
Rule 170   start_value -> discrete_expression
Rule 171   step_value -> BY integer_expression
Rule 172   end_value -> TO discrete_expression
Rule 173   end_value -> DOWN TO discrete_expression
Rule 174   discrete_expression -> expression
Rule 175   range_enumeration -> loop_counter IN discrete_mode
Rule 176   range_enumeration -> loop_counter DOWN IN discrete_mode
Rule 177   while_control -> WHILE boolean_expression
Rule 178   call_action -> procedure_call
Rule 179   call_action -> builtin_call
Rule 180   procedure_call -> identifier LPAREN RPAREN
Rule 181   procedure_call -> identifier LPAREN parameter_list RPAREN
Rule 182   parameter_list -> parameter
Rule 183   parameter_list -> parameter_list COMMA parameter
Rule 184   parameter -> expression
Rule 185   exit_action -> EXIT label_id
Rule 186   return_action -> RETURN
Rule 187   return_action -> RETURN result
Rule 188   result_action -> RESULT result
Rule 189   result -> expression
Rule 190   builtin_call -> builtin_name LPAREN RPAREN
Rule 191   builtin_call -> builtin_name LPAREN parameter_list RPAREN
Rule 192   builtin_name -> ABS
Rule 193   builtin_name -> ASC
Rule 194   builtin_name -> NUM
Rule 195   builtin_name -> UPPER
Rule 196   builtin_name -> LOWER
Rule 197   builtin_name -> LENGTH
Rule 198   builtin_name -> READ
Rule 199   builtin_name -> PRINT
Rule 200   procedure_statement -> label_id COLON procedure_definition SEMI
Rule 201   procedure_definition -> formal_procedure_head END
Rule 202   procedure_definition -> formal_procedure_head statement_list END
Rule 203   formal_procedure_head -> PROC parenthesis_gambiarra SEMI
Rule 204   formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI
Rule 205   parenthesis_gambiarra -> LPAREN RPAREN
Rule 206   parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN
Rule 207   formal_parameter_list -> formal_parameter
Rule 208   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 209   formal_parameter -> identifier_list parameter_spec
Rule 210   parameter_spec -> mode
Rule 211   parameter_spec -> mode LOC
Rule 212   result_spec -> RETURNS LPAREN mode RPAREN
Rule 213   result_spec -> RETURNS LPAREN mode LOC RPAREN

Terminals, with rules where they appear

ABS                  : 192
AND                  : 99
ARRAY                : 49
ARROW                : 61 127
ASC                  : 193
ASSIGN               : 14 26 140 167 168
BOOL                 : 36
BY                   : 171
CCONST               : 79
CHAR                 : 37
CHARS                : 47
COLON                : 41 65 83 129 200
COMMA                : 11 16 25 51 64 183 208
DCL                  : 9
DECREASE             : 143
DIFF                 : 102
DIVCREASE            : 145
DIVIDE               : 118
DO                   : 157 158 159 160
DOWN                 : 173 176
ELSE                 : 92 153 154
ELSIF                : 93 94 155 156
END                  : 201 202
EQUAL                : 101
EXIT                 : 185
FALSE                : 77
FI                   : 88 89 147 148
FOR                  : 162 163
GREATER              : 103
GREATEREQ            : 104
ICONST               : 76
ID                   : 17
IF                   : 88 89 147 148
IN                   : 107 175 176
INCREASE             : 142
INT                  : 35
LBRACKET             : 47 49 62 65 82 83
LENGTH               : 197
LESS                 : 105
LESSEQ               : 106
LOC                  : 211 213
LOWER                : 196
LPAREN               : 38 39 85 180 181 190 191 205 206 212 213
MINUS                : 113 122
MOD                  : 119
MODCREASE            : 146
MULCREASE            : 144
NOT                  : 123
NULL                 : 80
NUM                  : 194
OD                   : 157 158 159 160
OR                   : 100
PLUS                 : 112
PRINT                : 199
PROC                 : 203 204
RBRACKET             : 47 49 62 65 82 83
READ                 : 198
REF                  : 44
RESULT               : 188
RETURN               : 186 187
RETURNS              : 212 213
RPAREN               : 38 39 85 180 181 190 191 205 206 212 213
SCONST               : 81
SEMI                 : 9 18 23 128 129 158 160 200 203 204
STRCAT               : 114
SYN                  : 18
THEN                 : 91 149 150
TIMES                : 117
TO                   : 172 173
TRUE                 : 78
TYPE                 : 23
UPPER                : 195
WHILE                : 177
error                : 

Nonterminals, with rules where they appear

action               : 128 129
action_statement     : 8 151 152
action_statement_list : 150 152 154 159 160
arithmetic_additive_operator : 110
arithmetic_multiplicative_operator : 116
array_element        : 58
array_location       : 62 65
array_mode           : 46
array_primitive_value : 82 83
array_slice          : 59
assigning_operator   : 139
assignment_action    : 132
boolean_expression   : 88 89 93 94 147 148 155 156 177
boolean_literal      : 72
boolean_mode         : 32
bracketed_action     : 131
builtin_call         : 179
builtin_name         : 190 191
call_action          : 60 133
character_literal    : 73
character_mode       : 33
character_string_literal : 75
closed_dyadic_operator : 141
composite_mode       : 30
conditional_expression : 87
control_part         : 158 160
declaration          : 10 11
declaration_list     : 9 11
declaration_statement : 4
dereferenced_reference : 57
discrete_expression  : 170 172 173
discrete_mode        : 28 39 52 175 176
discrete_range_mode  : 34
do_action            : 138
element_mode         : 49
else_clause          : 148 156
else_expression      : 88 89
elsif_expression     : 89 94
empty_literal        : 74
end_value            : 167 168
exit_action          : 134
expression           : 14 42 43 55 63 64 85 90 91 92 139 174 184 189
expression_list      : 62 64
for_control          : 162 163
formal_parameter     : 207 208
formal_parameter_list : 206 208
formal_procedure_head : 201 202
identifier           : 15 16 38 40 56 130 169 180 181
identifier_list      : 12 13 16 21 22 26 209
if_action            : 137
index_mode           : 50 51
index_mode_list      : 49 51
initialization       : 13 21 22
integer_expression   : 82 171
integer_literal      : 48 71
integer_mode         : 31
iteration            : 164
label_id             : 129 185 200
literal              : 67
literal_range        : 38 39 53
location             : 61 66 124 127 139
loop_counter         : 167 168 175 176
lower_bound          : 41 65 83
membership_operator  : 98
mode                 : 12 13 22 26 44 54 210 211 212 213
mode_definition      : 24 25
mode_name            : 27
monadic_operator     : 121
newmode_list         : 23 25
newmode_statement    : 6
operand0             : 86 96
operand1             : 95 96 109
operand2             : 108 109 116
operand3             : 115 116
operand4             : 120 121
operator1            : 96
operator2            : 109
parameter            : 182 183
parameter_list       : 181 183 191
parameter_spec       : 209
parenthesis_gambiarra : 203 204
parenthesized_expression : 70
primitive_value      : 84 126
procedure_call       : 178
procedure_definition : 200
procedure_statement  : 7
program              : 0
range_enumeration    : 166
reference_mode       : 29
referenced_location  : 125
relational_operator  : 97
result               : 187 188
result_action        : 136
result_spec          : 204
return_action        : 135
start_value          : 167 168
statement            : 2 3
statement_list       : 1 3 202
step_enumeration     : 165
step_value           : 168
string_concatenation_operator : 111
string_length        : 47
string_mode          : 45
synonym_definition   : 19 20
synonym_list         : 18 20
synonym_statement    : 5
then_clause          : 147 148 155 156
then_expression      : 88 89 93 94
upper_bound          : 41 65 83
value_array_element  : 68
value_array_slice    : 69
while_control        : 161 163

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (23) newmode_statement -> . TYPE newmode_list SEMI
    (200) procedure_statement -> . label_id COLON procedure_definition SEMI
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (130) label_id -> . identifier
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (17) identifier -> . ID
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    DCL             shift and go to state 19
    SYN             shift and go to state 8
    TYPE            shift and go to state 18
    ID              shift and go to state 24
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    synonym_statement              shift and go to state 2
    program                        shift and go to state 29
    dereferenced_reference         shift and go to state 22
    procedure_statement            shift and go to state 30
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    procedure_call                 shift and go to state 4
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    array_element                  shift and go to state 20
    declaration_statement          shift and go to state 34
    statement_list                 shift and go to state 14
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 36
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    statement                      shift and go to state 12
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    newmode_statement              shift and go to state 25
    label_id                       shift and go to state 40

state 1

    (131) action -> bracketed_action .

    SEMI            reduce using rule 131 (action -> bracketed_action .)


state 2

    (5) statement -> synonym_statement .

    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    RETURN          reduce using rule 5 (statement -> synonym_statement .)
    RESULT          reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    DO              reduce using rule 5 (statement -> synonym_statement .)
    ABS             reduce using rule 5 (statement -> synonym_statement .)
    ASC             reduce using rule 5 (statement -> synonym_statement .)
    NUM             reduce using rule 5 (statement -> synonym_statement .)
    UPPER           reduce using rule 5 (statement -> synonym_statement .)
    LOWER           reduce using rule 5 (statement -> synonym_statement .)
    LENGTH          reduce using rule 5 (statement -> synonym_statement .)
    READ            reduce using rule 5 (statement -> synonym_statement .)
    PRINT           reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)
    END             reduce using rule 5 (statement -> synonym_statement .)


state 3

    (198) builtin_name -> READ .

    LPAREN          reduce using rule 198 (builtin_name -> READ .)


state 4

    (178) call_action -> procedure_call .

    SEMI            reduce using rule 178 (call_action -> procedure_call .)
    ARROW           reduce using rule 178 (call_action -> procedure_call .)
    ASSIGN          reduce using rule 178 (call_action -> procedure_call .)
    INCREASE        reduce using rule 178 (call_action -> procedure_call .)
    DECREASE        reduce using rule 178 (call_action -> procedure_call .)
    MULCREASE       reduce using rule 178 (call_action -> procedure_call .)
    DIVCREASE       reduce using rule 178 (call_action -> procedure_call .)
    MODCREASE       reduce using rule 178 (call_action -> procedure_call .)
    LBRACKET        reduce using rule 178 (call_action -> procedure_call .)
    TIMES           reduce using rule 178 (call_action -> procedure_call .)
    DIVIDE          reduce using rule 178 (call_action -> procedure_call .)
    MOD             reduce using rule 178 (call_action -> procedure_call .)
    PLUS            reduce using rule 178 (call_action -> procedure_call .)
    MINUS           reduce using rule 178 (call_action -> procedure_call .)
    STRCAT          reduce using rule 178 (call_action -> procedure_call .)
    AND             reduce using rule 178 (call_action -> procedure_call .)
    OR              reduce using rule 178 (call_action -> procedure_call .)
    EQUAL           reduce using rule 178 (call_action -> procedure_call .)
    DIFF            reduce using rule 178 (call_action -> procedure_call .)
    GREATER         reduce using rule 178 (call_action -> procedure_call .)
    GREATEREQ       reduce using rule 178 (call_action -> procedure_call .)
    LESS            reduce using rule 178 (call_action -> procedure_call .)
    LESSEQ          reduce using rule 178 (call_action -> procedure_call .)
    IN              reduce using rule 178 (call_action -> procedure_call .)
    COLON           reduce using rule 178 (call_action -> procedure_call .)
    FI              reduce using rule 178 (call_action -> procedure_call .)
    RBRACKET        reduce using rule 178 (call_action -> procedure_call .)
    ID              reduce using rule 178 (call_action -> procedure_call .)
    COMMA           reduce using rule 178 (call_action -> procedure_call .)
    ELSE            reduce using rule 178 (call_action -> procedure_call .)
    ELSIF           reduce using rule 178 (call_action -> procedure_call .)
    THEN            reduce using rule 178 (call_action -> procedure_call .)
    RPAREN          reduce using rule 178 (call_action -> procedure_call .)
    TO              reduce using rule 178 (call_action -> procedure_call .)
    DOWN            reduce using rule 178 (call_action -> procedure_call .)
    BY              reduce using rule 178 (call_action -> procedure_call .)
    WHILE           reduce using rule 178 (call_action -> procedure_call .)


state 5

    (188) result_action -> RESULT . result
    (189) result -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    empty_literal                  shift and go to state 70
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 55
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    result                         shift and go to state 74
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 6

    (133) action -> call_action .
    (60) location -> call_action .

    SEMI            reduce using rule 133 (action -> call_action .)
    ARROW           reduce using rule 60 (location -> call_action .)
    ASSIGN          reduce using rule 60 (location -> call_action .)
    INCREASE        reduce using rule 60 (location -> call_action .)
    DECREASE        reduce using rule 60 (location -> call_action .)
    MULCREASE       reduce using rule 60 (location -> call_action .)
    DIVCREASE       reduce using rule 60 (location -> call_action .)
    MODCREASE       reduce using rule 60 (location -> call_action .)
    LBRACKET        reduce using rule 60 (location -> call_action .)


state 7

    (196) builtin_name -> LOWER .

    LPAREN          reduce using rule 196 (builtin_name -> LOWER .)


state 8

    (18) synonym_statement -> SYN . synonym_list SEMI
    (19) synonym_list -> . synonym_definition
    (20) synonym_list -> . synonym_list synonym_definition
    (21) synonym_definition -> . identifier_list initialization
    (22) synonym_definition -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    synonym_definition             shift and go to state 80
    identifier_list                shift and go to state 81
    identifier                     shift and go to state 82
    synonym_list                   shift and go to state 83

state 9

    (199) builtin_name -> PRINT .

    LPAREN          reduce using rule 199 (builtin_name -> PRINT .)


state 10

    (137) bracketed_action -> if_action .

    SEMI            reduce using rule 137 (bracketed_action -> if_action .)


state 11

    (179) call_action -> builtin_call .

    SEMI            reduce using rule 179 (call_action -> builtin_call .)
    ARROW           reduce using rule 179 (call_action -> builtin_call .)
    ASSIGN          reduce using rule 179 (call_action -> builtin_call .)
    INCREASE        reduce using rule 179 (call_action -> builtin_call .)
    DECREASE        reduce using rule 179 (call_action -> builtin_call .)
    MULCREASE       reduce using rule 179 (call_action -> builtin_call .)
    DIVCREASE       reduce using rule 179 (call_action -> builtin_call .)
    MODCREASE       reduce using rule 179 (call_action -> builtin_call .)
    LBRACKET        reduce using rule 179 (call_action -> builtin_call .)
    TIMES           reduce using rule 179 (call_action -> builtin_call .)
    DIVIDE          reduce using rule 179 (call_action -> builtin_call .)
    MOD             reduce using rule 179 (call_action -> builtin_call .)
    PLUS            reduce using rule 179 (call_action -> builtin_call .)
    MINUS           reduce using rule 179 (call_action -> builtin_call .)
    STRCAT          reduce using rule 179 (call_action -> builtin_call .)
    AND             reduce using rule 179 (call_action -> builtin_call .)
    OR              reduce using rule 179 (call_action -> builtin_call .)
    EQUAL           reduce using rule 179 (call_action -> builtin_call .)
    DIFF            reduce using rule 179 (call_action -> builtin_call .)
    GREATER         reduce using rule 179 (call_action -> builtin_call .)
    GREATEREQ       reduce using rule 179 (call_action -> builtin_call .)
    LESS            reduce using rule 179 (call_action -> builtin_call .)
    LESSEQ          reduce using rule 179 (call_action -> builtin_call .)
    IN              reduce using rule 179 (call_action -> builtin_call .)
    COLON           reduce using rule 179 (call_action -> builtin_call .)
    FI              reduce using rule 179 (call_action -> builtin_call .)
    RBRACKET        reduce using rule 179 (call_action -> builtin_call .)
    ID              reduce using rule 179 (call_action -> builtin_call .)
    COMMA           reduce using rule 179 (call_action -> builtin_call .)
    ELSE            reduce using rule 179 (call_action -> builtin_call .)
    ELSIF           reduce using rule 179 (call_action -> builtin_call .)
    THEN            reduce using rule 179 (call_action -> builtin_call .)
    RPAREN          reduce using rule 179 (call_action -> builtin_call .)
    TO              reduce using rule 179 (call_action -> builtin_call .)
    DOWN            reduce using rule 179 (call_action -> builtin_call .)
    BY              reduce using rule 179 (call_action -> builtin_call .)
    WHILE           reduce using rule 179 (call_action -> builtin_call .)


state 12

    (2) statement_list -> statement .

    DCL             reduce using rule 2 (statement_list -> statement .)
    SYN             reduce using rule 2 (statement_list -> statement .)
    TYPE            reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    EXIT            reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    RESULT          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    DO              reduce using rule 2 (statement_list -> statement .)
    ABS             reduce using rule 2 (statement_list -> statement .)
    ASC             reduce using rule 2 (statement_list -> statement .)
    NUM             reduce using rule 2 (statement_list -> statement .)
    UPPER           reduce using rule 2 (statement_list -> statement .)
    LOWER           reduce using rule 2 (statement_list -> statement .)
    LENGTH          reduce using rule 2 (statement_list -> statement .)
    READ            reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)


state 13

    (185) exit_action -> EXIT . label_id
    (130) label_id -> . identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    label_id                       shift and go to state 85
    identifier                     shift and go to state 84

state 14

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (23) newmode_statement -> . TYPE newmode_list SEMI
    (200) procedure_statement -> . label_id COLON procedure_definition SEMI
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (130) label_id -> . identifier
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (17) identifier -> . ID
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 19
    SYN             shift and go to state 8
    TYPE            shift and go to state 18
    ID              shift and go to state 24
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    synonym_statement              shift and go to state 2
    dereferenced_reference         shift and go to state 22
    procedure_statement            shift and go to state 30
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    procedure_call                 shift and go to state 4
    if_action                      shift and go to state 10
    builtin_call                   shift and go to state 11
    array_element                  shift and go to state 20
    declaration_statement          shift and go to state 34
    action                         shift and go to state 15
    action_statement               shift and go to state 36
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    bracketed_action               shift and go to state 1
    array_location                 shift and go to state 28
    do_action                      shift and go to state 41
    statement                      shift and go to state 86
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    newmode_statement              shift and go to state 25
    label_id                       shift and go to state 40

state 15

    (128) action_statement -> action . SEMI

    SEMI            shift and go to state 87


state 16

    (186) return_action -> RETURN .
    (187) return_action -> RETURN . result
    (189) result -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    SEMI            reduce using rule 186 (return_action -> RETURN .)
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    empty_literal                  shift and go to state 70
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 55
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    result                         shift and go to state 88
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 17

    (59) location -> array_slice .

    ARROW           reduce using rule 59 (location -> array_slice .)
    TIMES           reduce using rule 59 (location -> array_slice .)
    DIVIDE          reduce using rule 59 (location -> array_slice .)
    MOD             reduce using rule 59 (location -> array_slice .)
    PLUS            reduce using rule 59 (location -> array_slice .)
    MINUS           reduce using rule 59 (location -> array_slice .)
    STRCAT          reduce using rule 59 (location -> array_slice .)
    AND             reduce using rule 59 (location -> array_slice .)
    OR              reduce using rule 59 (location -> array_slice .)
    EQUAL           reduce using rule 59 (location -> array_slice .)
    DIFF            reduce using rule 59 (location -> array_slice .)
    GREATER         reduce using rule 59 (location -> array_slice .)
    GREATEREQ       reduce using rule 59 (location -> array_slice .)
    LESS            reduce using rule 59 (location -> array_slice .)
    LESSEQ          reduce using rule 59 (location -> array_slice .)
    IN              reduce using rule 59 (location -> array_slice .)
    THEN            reduce using rule 59 (location -> array_slice .)
    LBRACKET        reduce using rule 59 (location -> array_slice .)
    RPAREN          reduce using rule 59 (location -> array_slice .)
    COMMA           reduce using rule 59 (location -> array_slice .)
    COLON           reduce using rule 59 (location -> array_slice .)
    RBRACKET        reduce using rule 59 (location -> array_slice .)
    WHILE           reduce using rule 59 (location -> array_slice .)
    SEMI            reduce using rule 59 (location -> array_slice .)
    ASSIGN          reduce using rule 59 (location -> array_slice .)
    INCREASE        reduce using rule 59 (location -> array_slice .)
    DECREASE        reduce using rule 59 (location -> array_slice .)
    MULCREASE       reduce using rule 59 (location -> array_slice .)
    DIVCREASE       reduce using rule 59 (location -> array_slice .)
    MODCREASE       reduce using rule 59 (location -> array_slice .)
    ID              reduce using rule 59 (location -> array_slice .)
    ELSE            reduce using rule 59 (location -> array_slice .)
    ELSIF           reduce using rule 59 (location -> array_slice .)
    TO              reduce using rule 59 (location -> array_slice .)
    DOWN            reduce using rule 59 (location -> array_slice .)
    BY              reduce using rule 59 (location -> array_slice .)
    FI              reduce using rule 59 (location -> array_slice .)


state 18

    (23) newmode_statement -> TYPE . newmode_list SEMI
    (24) newmode_list -> . mode_definition
    (25) newmode_list -> . newmode_list COMMA mode_definition
    (26) mode_definition -> . identifier_list ASSIGN mode
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    mode_definition                shift and go to state 91
    newmode_list                   shift and go to state 89
    identifier_list                shift and go to state 90
    identifier                     shift and go to state 82

state 19

    (9) declaration_statement -> DCL . declaration_list SEMI
    (10) declaration_list -> . declaration
    (11) declaration_list -> . declaration_list COMMA declaration
    (12) declaration -> . identifier_list mode
    (13) declaration -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    declaration_list               shift and go to state 92
    identifier_list                shift and go to state 93
    identifier                     shift and go to state 82
    declaration                    shift and go to state 94

state 20

    (58) location -> array_element .

    ARROW           reduce using rule 58 (location -> array_element .)
    TIMES           reduce using rule 58 (location -> array_element .)
    DIVIDE          reduce using rule 58 (location -> array_element .)
    MOD             reduce using rule 58 (location -> array_element .)
    PLUS            reduce using rule 58 (location -> array_element .)
    MINUS           reduce using rule 58 (location -> array_element .)
    STRCAT          reduce using rule 58 (location -> array_element .)
    AND             reduce using rule 58 (location -> array_element .)
    OR              reduce using rule 58 (location -> array_element .)
    EQUAL           reduce using rule 58 (location -> array_element .)
    DIFF            reduce using rule 58 (location -> array_element .)
    GREATER         reduce using rule 58 (location -> array_element .)
    GREATEREQ       reduce using rule 58 (location -> array_element .)
    LESS            reduce using rule 58 (location -> array_element .)
    LESSEQ          reduce using rule 58 (location -> array_element .)
    IN              reduce using rule 58 (location -> array_element .)
    THEN            reduce using rule 58 (location -> array_element .)
    LBRACKET        reduce using rule 58 (location -> array_element .)
    RPAREN          reduce using rule 58 (location -> array_element .)
    COMMA           reduce using rule 58 (location -> array_element .)
    COLON           reduce using rule 58 (location -> array_element .)
    RBRACKET        reduce using rule 58 (location -> array_element .)
    WHILE           reduce using rule 58 (location -> array_element .)
    SEMI            reduce using rule 58 (location -> array_element .)
    ASSIGN          reduce using rule 58 (location -> array_element .)
    INCREASE        reduce using rule 58 (location -> array_element .)
    DECREASE        reduce using rule 58 (location -> array_element .)
    MULCREASE       reduce using rule 58 (location -> array_element .)
    DIVCREASE       reduce using rule 58 (location -> array_element .)
    MODCREASE       reduce using rule 58 (location -> array_element .)
    ID              reduce using rule 58 (location -> array_element .)
    ELSE            reduce using rule 58 (location -> array_element .)
    ELSIF           reduce using rule 58 (location -> array_element .)
    TO              reduce using rule 58 (location -> array_element .)
    DOWN            reduce using rule 58 (location -> array_element .)
    BY              reduce using rule 58 (location -> array_element .)
    FI              reduce using rule 58 (location -> array_element .)


state 21

    (197) builtin_name -> LENGTH .

    LPAREN          reduce using rule 197 (builtin_name -> LENGTH .)


state 22

    (57) location -> dereferenced_reference .

    ARROW           reduce using rule 57 (location -> dereferenced_reference .)
    TIMES           reduce using rule 57 (location -> dereferenced_reference .)
    DIVIDE          reduce using rule 57 (location -> dereferenced_reference .)
    MOD             reduce using rule 57 (location -> dereferenced_reference .)
    PLUS            reduce using rule 57 (location -> dereferenced_reference .)
    MINUS           reduce using rule 57 (location -> dereferenced_reference .)
    STRCAT          reduce using rule 57 (location -> dereferenced_reference .)
    AND             reduce using rule 57 (location -> dereferenced_reference .)
    OR              reduce using rule 57 (location -> dereferenced_reference .)
    EQUAL           reduce using rule 57 (location -> dereferenced_reference .)
    DIFF            reduce using rule 57 (location -> dereferenced_reference .)
    GREATER         reduce using rule 57 (location -> dereferenced_reference .)
    GREATEREQ       reduce using rule 57 (location -> dereferenced_reference .)
    LESS            reduce using rule 57 (location -> dereferenced_reference .)
    LESSEQ          reduce using rule 57 (location -> dereferenced_reference .)
    IN              reduce using rule 57 (location -> dereferenced_reference .)
    THEN            reduce using rule 57 (location -> dereferenced_reference .)
    LBRACKET        reduce using rule 57 (location -> dereferenced_reference .)
    RPAREN          reduce using rule 57 (location -> dereferenced_reference .)
    COMMA           reduce using rule 57 (location -> dereferenced_reference .)
    COLON           reduce using rule 57 (location -> dereferenced_reference .)
    RBRACKET        reduce using rule 57 (location -> dereferenced_reference .)
    WHILE           reduce using rule 57 (location -> dereferenced_reference .)
    SEMI            reduce using rule 57 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 57 (location -> dereferenced_reference .)
    INCREASE        reduce using rule 57 (location -> dereferenced_reference .)
    DECREASE        reduce using rule 57 (location -> dereferenced_reference .)
    MULCREASE       reduce using rule 57 (location -> dereferenced_reference .)
    DIVCREASE       reduce using rule 57 (location -> dereferenced_reference .)
    MODCREASE       reduce using rule 57 (location -> dereferenced_reference .)
    ID              reduce using rule 57 (location -> dereferenced_reference .)
    ELSE            reduce using rule 57 (location -> dereferenced_reference .)
    ELSIF           reduce using rule 57 (location -> dereferenced_reference .)
    TO              reduce using rule 57 (location -> dereferenced_reference .)
    DOWN            reduce using rule 57 (location -> dereferenced_reference .)
    BY              reduce using rule 57 (location -> dereferenced_reference .)
    FI              reduce using rule 57 (location -> dereferenced_reference .)


state 23

    (139) assignment_action -> location . assigning_operator expression
    (61) dereferenced_reference -> location . ARROW
    (66) array_location -> location .
    (140) assigning_operator -> . ASSIGN
    (141) assigning_operator -> . closed_dyadic_operator
    (142) closed_dyadic_operator -> . INCREASE
    (143) closed_dyadic_operator -> . DECREASE
    (144) closed_dyadic_operator -> . MULCREASE
    (145) closed_dyadic_operator -> . DIVCREASE
    (146) closed_dyadic_operator -> . MODCREASE

    ARROW           shift and go to state 103
    LBRACKET        reduce using rule 66 (array_location -> location .)
    ASSIGN          shift and go to state 95
    INCREASE        shift and go to state 99
    DECREASE        shift and go to state 101
    MULCREASE       shift and go to state 100
    DIVCREASE       shift and go to state 102
    MODCREASE       shift and go to state 98

    closed_dyadic_operator         shift and go to state 96
    assigning_operator             shift and go to state 97

state 24

    (17) identifier -> ID .

    LPAREN          reduce using rule 17 (identifier -> ID .)
    ARROW           reduce using rule 17 (identifier -> ID .)
    TIMES           reduce using rule 17 (identifier -> ID .)
    DIVIDE          reduce using rule 17 (identifier -> ID .)
    MOD             reduce using rule 17 (identifier -> ID .)
    PLUS            reduce using rule 17 (identifier -> ID .)
    MINUS           reduce using rule 17 (identifier -> ID .)
    STRCAT          reduce using rule 17 (identifier -> ID .)
    AND             reduce using rule 17 (identifier -> ID .)
    OR              reduce using rule 17 (identifier -> ID .)
    EQUAL           reduce using rule 17 (identifier -> ID .)
    DIFF            reduce using rule 17 (identifier -> ID .)
    GREATER         reduce using rule 17 (identifier -> ID .)
    GREATEREQ       reduce using rule 17 (identifier -> ID .)
    LESS            reduce using rule 17 (identifier -> ID .)
    LESSEQ          reduce using rule 17 (identifier -> ID .)
    IN              reduce using rule 17 (identifier -> ID .)
    SEMI            reduce using rule 17 (identifier -> ID .)
    LBRACKET        reduce using rule 17 (identifier -> ID .)
    COLON           reduce using rule 17 (identifier -> ID .)
    ASSIGN          reduce using rule 17 (identifier -> ID .)
    INCREASE        reduce using rule 17 (identifier -> ID .)
    DECREASE        reduce using rule 17 (identifier -> ID .)
    MULCREASE       reduce using rule 17 (identifier -> ID .)
    DIVCREASE       reduce using rule 17 (identifier -> ID .)
    MODCREASE       reduce using rule 17 (identifier -> ID .)
    WHILE           reduce using rule 17 (identifier -> ID .)
    COMMA           reduce using rule 17 (identifier -> ID .)
    LOC             reduce using rule 17 (identifier -> ID .)
    RPAREN          reduce using rule 17 (identifier -> ID .)
    REF             reduce using rule 17 (identifier -> ID .)
    ID              reduce using rule 17 (identifier -> ID .)
    INT             reduce using rule 17 (identifier -> ID .)
    BOOL            reduce using rule 17 (identifier -> ID .)
    CHAR            reduce using rule 17 (identifier -> ID .)
    CHARS           reduce using rule 17 (identifier -> ID .)
    ARRAY           reduce using rule 17 (identifier -> ID .)
    THEN            reduce using rule 17 (identifier -> ID .)
    TO              reduce using rule 17 (identifier -> ID .)
    DOWN            reduce using rule 17 (identifier -> ID .)
    RBRACKET        reduce using rule 17 (identifier -> ID .)
    ELSE            reduce using rule 17 (identifier -> ID .)
    ELSIF           reduce using rule 17 (identifier -> ID .)
    BY              reduce using rule 17 (identifier -> ID .)
    FI              reduce using rule 17 (identifier -> ID .)


state 25

    (6) statement -> newmode_statement .

    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    RETURN          reduce using rule 6 (statement -> newmode_statement .)
    RESULT          reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    DO              reduce using rule 6 (statement -> newmode_statement .)
    ABS             reduce using rule 6 (statement -> newmode_statement .)
    ASC             reduce using rule 6 (statement -> newmode_statement .)
    NUM             reduce using rule 6 (statement -> newmode_statement .)
    UPPER           reduce using rule 6 (statement -> newmode_statement .)
    LOWER           reduce using rule 6 (statement -> newmode_statement .)
    LENGTH          reduce using rule 6 (statement -> newmode_statement .)
    READ            reduce using rule 6 (statement -> newmode_statement .)
    PRINT           reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)
    END             reduce using rule 6 (statement -> newmode_statement .)


state 26

    (157) do_action -> DO . OD
    (158) do_action -> DO . control_part SEMI OD
    (159) do_action -> DO . action_statement_list OD
    (160) do_action -> DO . control_part SEMI action_statement_list OD
    (161) control_part -> . while_control
    (162) control_part -> . FOR for_control
    (163) control_part -> . FOR for_control while_control
    (151) action_statement_list -> . action_statement
    (152) action_statement_list -> . action_statement_list action_statement
    (177) while_control -> . WHILE boolean_expression
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    OD              shift and go to state 105
    FOR             shift and go to state 106
    WHILE           shift and go to state 111
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    action_statement_list          shift and go to state 104
    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    control_part                   shift and go to state 109
    action                         shift and go to state 15
    action_statement               shift and go to state 110
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    while_control                  shift and go to state 107
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 27

    (192) builtin_name -> ABS .

    LPAREN          reduce using rule 192 (builtin_name -> ABS .)


state 28

    (62) array_element -> array_location . LBRACKET expression_list RBRACKET
    (65) array_slice -> array_location . LBRACKET lower_bound COLON upper_bound RBRACKET

    LBRACKET        shift and go to state 112


state 29

    (0) S' -> program .



state 30

    (7) statement -> procedure_statement .

    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    RETURN          reduce using rule 7 (statement -> procedure_statement .)
    RESULT          reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    DO              reduce using rule 7 (statement -> procedure_statement .)
    ABS             reduce using rule 7 (statement -> procedure_statement .)
    ASC             reduce using rule 7 (statement -> procedure_statement .)
    NUM             reduce using rule 7 (statement -> procedure_statement .)
    UPPER           reduce using rule 7 (statement -> procedure_statement .)
    LOWER           reduce using rule 7 (statement -> procedure_statement .)
    LENGTH          reduce using rule 7 (statement -> procedure_statement .)
    READ            reduce using rule 7 (statement -> procedure_statement .)
    PRINT           reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)
    END             reduce using rule 7 (statement -> procedure_statement .)


state 31

    (136) action -> result_action .

    SEMI            reduce using rule 136 (action -> result_action .)


state 32

    (135) action -> return_action .

    SEMI            reduce using rule 135 (action -> return_action .)


state 33

    (193) builtin_name -> ASC .

    LPAREN          reduce using rule 193 (builtin_name -> ASC .)


state 34

    (4) statement -> declaration_statement .

    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    RETURN          reduce using rule 4 (statement -> declaration_statement .)
    RESULT          reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    DO              reduce using rule 4 (statement -> declaration_statement .)
    ABS             reduce using rule 4 (statement -> declaration_statement .)
    ASC             reduce using rule 4 (statement -> declaration_statement .)
    NUM             reduce using rule 4 (statement -> declaration_statement .)
    UPPER           reduce using rule 4 (statement -> declaration_statement .)
    LOWER           reduce using rule 4 (statement -> declaration_statement .)
    LENGTH          reduce using rule 4 (statement -> declaration_statement .)
    READ            reduce using rule 4 (statement -> declaration_statement .)
    PRINT           reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)
    END             reduce using rule 4 (statement -> declaration_statement .)


state 35

    (147) if_action -> IF . boolean_expression then_clause FI
    (148) if_action -> IF . boolean_expression then_clause else_clause FI
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    procedure_call                 shift and go to state 4
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 79
    integer_literal                shift and go to state 73
    boolean_expression             shift and go to state 113
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    boolean_literal                shift and go to state 75
    referenced_location            shift and go to state 78
    builtin_call                   shift and go to state 11

state 36

    (8) statement -> action_statement .

    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    RETURN          reduce using rule 8 (statement -> action_statement .)
    RESULT          reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    DO              reduce using rule 8 (statement -> action_statement .)
    ABS             reduce using rule 8 (statement -> action_statement .)
    ASC             reduce using rule 8 (statement -> action_statement .)
    NUM             reduce using rule 8 (statement -> action_statement .)
    UPPER           reduce using rule 8 (statement -> action_statement .)
    LOWER           reduce using rule 8 (statement -> action_statement .)
    LENGTH          reduce using rule 8 (statement -> action_statement .)
    READ            reduce using rule 8 (statement -> action_statement .)
    PRINT           reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)
    END             reduce using rule 8 (statement -> action_statement .)


state 37

    (134) action -> exit_action .

    SEMI            reduce using rule 134 (action -> exit_action .)


state 38

    (132) action -> assignment_action .

    SEMI            reduce using rule 132 (action -> assignment_action .)


state 39

    (194) builtin_name -> NUM .

    LPAREN          reduce using rule 194 (builtin_name -> NUM .)


state 40

    (200) procedure_statement -> label_id . COLON procedure_definition SEMI
    (129) action_statement -> label_id . COLON action SEMI

    COLON           shift and go to state 115


state 41

    (138) bracketed_action -> do_action .

    SEMI            reduce using rule 138 (bracketed_action -> do_action .)


state 42

    (130) label_id -> identifier .
    (56) location -> identifier .
    (180) procedure_call -> identifier . LPAREN RPAREN
    (181) procedure_call -> identifier . LPAREN parameter_list RPAREN

    COLON           reduce using rule 130 (label_id -> identifier .)
    ARROW           reduce using rule 56 (location -> identifier .)
    ASSIGN          reduce using rule 56 (location -> identifier .)
    INCREASE        reduce using rule 56 (location -> identifier .)
    DECREASE        reduce using rule 56 (location -> identifier .)
    MULCREASE       reduce using rule 56 (location -> identifier .)
    DIVCREASE       reduce using rule 56 (location -> identifier .)
    MODCREASE       reduce using rule 56 (location -> identifier .)
    LBRACKET        reduce using rule 56 (location -> identifier .)
    LPAREN          shift and go to state 116


state 43

    (195) builtin_name -> UPPER .

    LPAREN          reduce using rule 195 (builtin_name -> UPPER .)


state 44

    (190) builtin_call -> builtin_name . LPAREN RPAREN
    (191) builtin_call -> builtin_name . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 117


state 45

    (81) character_string_literal -> SCONST .

    TIMES           reduce using rule 81 (character_string_literal -> SCONST .)
    DIVIDE          reduce using rule 81 (character_string_literal -> SCONST .)
    MOD             reduce using rule 81 (character_string_literal -> SCONST .)
    PLUS            reduce using rule 81 (character_string_literal -> SCONST .)
    MINUS           reduce using rule 81 (character_string_literal -> SCONST .)
    STRCAT          reduce using rule 81 (character_string_literal -> SCONST .)
    AND             reduce using rule 81 (character_string_literal -> SCONST .)
    OR              reduce using rule 81 (character_string_literal -> SCONST .)
    EQUAL           reduce using rule 81 (character_string_literal -> SCONST .)
    DIFF            reduce using rule 81 (character_string_literal -> SCONST .)
    GREATER         reduce using rule 81 (character_string_literal -> SCONST .)
    GREATEREQ       reduce using rule 81 (character_string_literal -> SCONST .)
    LESS            reduce using rule 81 (character_string_literal -> SCONST .)
    LESSEQ          reduce using rule 81 (character_string_literal -> SCONST .)
    IN              reduce using rule 81 (character_string_literal -> SCONST .)
    RBRACKET        reduce using rule 81 (character_string_literal -> SCONST .)
    LBRACKET        reduce using rule 81 (character_string_literal -> SCONST .)
    COMMA           reduce using rule 81 (character_string_literal -> SCONST .)
    COLON           reduce using rule 81 (character_string_literal -> SCONST .)
    RPAREN          reduce using rule 81 (character_string_literal -> SCONST .)
    THEN            reduce using rule 81 (character_string_literal -> SCONST .)
    SEMI            reduce using rule 81 (character_string_literal -> SCONST .)
    ID              reduce using rule 81 (character_string_literal -> SCONST .)
    ELSE            reduce using rule 81 (character_string_literal -> SCONST .)
    ELSIF           reduce using rule 81 (character_string_literal -> SCONST .)
    TO              reduce using rule 81 (character_string_literal -> SCONST .)
    DOWN            reduce using rule 81 (character_string_literal -> SCONST .)
    BY              reduce using rule 81 (character_string_literal -> SCONST .)
    FI              reduce using rule 81 (character_string_literal -> SCONST .)
    WHILE           reduce using rule 81 (character_string_literal -> SCONST .)


state 46

    (68) primitive_value -> value_array_element .

    TIMES           reduce using rule 68 (primitive_value -> value_array_element .)
    DIVIDE          reduce using rule 68 (primitive_value -> value_array_element .)
    MOD             reduce using rule 68 (primitive_value -> value_array_element .)
    PLUS            reduce using rule 68 (primitive_value -> value_array_element .)
    MINUS           reduce using rule 68 (primitive_value -> value_array_element .)
    STRCAT          reduce using rule 68 (primitive_value -> value_array_element .)
    AND             reduce using rule 68 (primitive_value -> value_array_element .)
    OR              reduce using rule 68 (primitive_value -> value_array_element .)
    EQUAL           reduce using rule 68 (primitive_value -> value_array_element .)
    DIFF            reduce using rule 68 (primitive_value -> value_array_element .)
    GREATER         reduce using rule 68 (primitive_value -> value_array_element .)
    GREATEREQ       reduce using rule 68 (primitive_value -> value_array_element .)
    LESS            reduce using rule 68 (primitive_value -> value_array_element .)
    LESSEQ          reduce using rule 68 (primitive_value -> value_array_element .)
    IN              reduce using rule 68 (primitive_value -> value_array_element .)
    RPAREN          reduce using rule 68 (primitive_value -> value_array_element .)
    COMMA           reduce using rule 68 (primitive_value -> value_array_element .)
    LBRACKET        reduce using rule 68 (primitive_value -> value_array_element .)
    SEMI            reduce using rule 68 (primitive_value -> value_array_element .)
    THEN            reduce using rule 68 (primitive_value -> value_array_element .)
    RBRACKET        reduce using rule 68 (primitive_value -> value_array_element .)
    COLON           reduce using rule 68 (primitive_value -> value_array_element .)
    ID              reduce using rule 68 (primitive_value -> value_array_element .)
    ELSE            reduce using rule 68 (primitive_value -> value_array_element .)
    ELSIF           reduce using rule 68 (primitive_value -> value_array_element .)
    TO              reduce using rule 68 (primitive_value -> value_array_element .)
    DOWN            reduce using rule 68 (primitive_value -> value_array_element .)
    BY              reduce using rule 68 (primitive_value -> value_array_element .)
    FI              reduce using rule 68 (primitive_value -> value_array_element .)
    WHILE           reduce using rule 68 (primitive_value -> value_array_element .)


state 47

    (122) monadic_operator -> MINUS .

    ARROW           reduce using rule 122 (monadic_operator -> MINUS .)
    ID              reduce using rule 122 (monadic_operator -> MINUS .)
    LPAREN          reduce using rule 122 (monadic_operator -> MINUS .)
    ICONST          reduce using rule 122 (monadic_operator -> MINUS .)
    FALSE           reduce using rule 122 (monadic_operator -> MINUS .)
    TRUE            reduce using rule 122 (monadic_operator -> MINUS .)
    CCONST          reduce using rule 122 (monadic_operator -> MINUS .)
    NULL            reduce using rule 122 (monadic_operator -> MINUS .)
    SCONST          reduce using rule 122 (monadic_operator -> MINUS .)
    ABS             reduce using rule 122 (monadic_operator -> MINUS .)
    ASC             reduce using rule 122 (monadic_operator -> MINUS .)
    NUM             reduce using rule 122 (monadic_operator -> MINUS .)
    UPPER           reduce using rule 122 (monadic_operator -> MINUS .)
    LOWER           reduce using rule 122 (monadic_operator -> MINUS .)
    LENGTH          reduce using rule 122 (monadic_operator -> MINUS .)
    READ            reduce using rule 122 (monadic_operator -> MINUS .)
    PRINT           reduce using rule 122 (monadic_operator -> MINUS .)


state 48

    (70) primitive_value -> parenthesized_expression .

    TIMES           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    DIVIDE          reduce using rule 70 (primitive_value -> parenthesized_expression .)
    MOD             reduce using rule 70 (primitive_value -> parenthesized_expression .)
    PLUS            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    MINUS           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    STRCAT          reduce using rule 70 (primitive_value -> parenthesized_expression .)
    AND             reduce using rule 70 (primitive_value -> parenthesized_expression .)
    OR              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    EQUAL           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    DIFF            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    GREATER         reduce using rule 70 (primitive_value -> parenthesized_expression .)
    GREATEREQ       reduce using rule 70 (primitive_value -> parenthesized_expression .)
    LESS            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    LESSEQ          reduce using rule 70 (primitive_value -> parenthesized_expression .)
    IN              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    RPAREN          reduce using rule 70 (primitive_value -> parenthesized_expression .)
    COMMA           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    LBRACKET        reduce using rule 70 (primitive_value -> parenthesized_expression .)
    SEMI            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    THEN            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    RBRACKET        reduce using rule 70 (primitive_value -> parenthesized_expression .)
    COLON           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    ID              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    ELSE            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    ELSIF           reduce using rule 70 (primitive_value -> parenthesized_expression .)
    TO              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    DOWN            reduce using rule 70 (primitive_value -> parenthesized_expression .)
    BY              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    FI              reduce using rule 70 (primitive_value -> parenthesized_expression .)
    WHILE           reduce using rule 70 (primitive_value -> parenthesized_expression .)


state 49

    (75) literal -> character_string_literal .

    TIMES           reduce using rule 75 (literal -> character_string_literal .)
    DIVIDE          reduce using rule 75 (literal -> character_string_literal .)
    MOD             reduce using rule 75 (literal -> character_string_literal .)
    PLUS            reduce using rule 75 (literal -> character_string_literal .)
    MINUS           reduce using rule 75 (literal -> character_string_literal .)
    STRCAT          reduce using rule 75 (literal -> character_string_literal .)
    AND             reduce using rule 75 (literal -> character_string_literal .)
    OR              reduce using rule 75 (literal -> character_string_literal .)
    EQUAL           reduce using rule 75 (literal -> character_string_literal .)
    DIFF            reduce using rule 75 (literal -> character_string_literal .)
    GREATER         reduce using rule 75 (literal -> character_string_literal .)
    GREATEREQ       reduce using rule 75 (literal -> character_string_literal .)
    LESS            reduce using rule 75 (literal -> character_string_literal .)
    LESSEQ          reduce using rule 75 (literal -> character_string_literal .)
    IN              reduce using rule 75 (literal -> character_string_literal .)
    RBRACKET        reduce using rule 75 (literal -> character_string_literal .)
    COLON           reduce using rule 75 (literal -> character_string_literal .)
    LBRACKET        reduce using rule 75 (literal -> character_string_literal .)
    THEN            reduce using rule 75 (literal -> character_string_literal .)
    SEMI            reduce using rule 75 (literal -> character_string_literal .)
    RPAREN          reduce using rule 75 (literal -> character_string_literal .)
    COMMA           reduce using rule 75 (literal -> character_string_literal .)
    ID              reduce using rule 75 (literal -> character_string_literal .)
    ELSE            reduce using rule 75 (literal -> character_string_literal .)
    ELSIF           reduce using rule 75 (literal -> character_string_literal .)
    TO              reduce using rule 75 (literal -> character_string_literal .)
    DOWN            reduce using rule 75 (literal -> character_string_literal .)
    BY              reduce using rule 75 (literal -> character_string_literal .)
    FI              reduce using rule 75 (literal -> character_string_literal .)
    WHILE           reduce using rule 75 (literal -> character_string_literal .)


state 50

    (60) location -> call_action .

    ARROW           reduce using rule 60 (location -> call_action .)
    TIMES           reduce using rule 60 (location -> call_action .)
    DIVIDE          reduce using rule 60 (location -> call_action .)
    MOD             reduce using rule 60 (location -> call_action .)
    PLUS            reduce using rule 60 (location -> call_action .)
    MINUS           reduce using rule 60 (location -> call_action .)
    STRCAT          reduce using rule 60 (location -> call_action .)
    AND             reduce using rule 60 (location -> call_action .)
    OR              reduce using rule 60 (location -> call_action .)
    EQUAL           reduce using rule 60 (location -> call_action .)
    DIFF            reduce using rule 60 (location -> call_action .)
    GREATER         reduce using rule 60 (location -> call_action .)
    GREATEREQ       reduce using rule 60 (location -> call_action .)
    LESS            reduce using rule 60 (location -> call_action .)
    LESSEQ          reduce using rule 60 (location -> call_action .)
    IN              reduce using rule 60 (location -> call_action .)
    THEN            reduce using rule 60 (location -> call_action .)
    LBRACKET        reduce using rule 60 (location -> call_action .)
    RPAREN          reduce using rule 60 (location -> call_action .)
    COMMA           reduce using rule 60 (location -> call_action .)
    COLON           reduce using rule 60 (location -> call_action .)
    RBRACKET        reduce using rule 60 (location -> call_action .)
    WHILE           reduce using rule 60 (location -> call_action .)
    SEMI            reduce using rule 60 (location -> call_action .)
    ID              reduce using rule 60 (location -> call_action .)
    ELSE            reduce using rule 60 (location -> call_action .)
    ELSIF           reduce using rule 60 (location -> call_action .)
    TO              reduce using rule 60 (location -> call_action .)
    DOWN            reduce using rule 60 (location -> call_action .)
    BY              reduce using rule 60 (location -> call_action .)
    FI              reduce using rule 60 (location -> call_action .)


state 51

    (127) referenced_location -> ARROW . location
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    ID              shift and go to state 24
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    builtin_name                   shift and go to state 44
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79
    call_action                    shift and go to state 50
    array_slice                    shift and go to state 17
    array_element                  shift and go to state 20
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 118
    array_location                 shift and go to state 28
    builtin_call                   shift and go to state 11

state 52

    (69) primitive_value -> value_array_slice .

    TIMES           reduce using rule 69 (primitive_value -> value_array_slice .)
    DIVIDE          reduce using rule 69 (primitive_value -> value_array_slice .)
    MOD             reduce using rule 69 (primitive_value -> value_array_slice .)
    PLUS            reduce using rule 69 (primitive_value -> value_array_slice .)
    MINUS           reduce using rule 69 (primitive_value -> value_array_slice .)
    STRCAT          reduce using rule 69 (primitive_value -> value_array_slice .)
    AND             reduce using rule 69 (primitive_value -> value_array_slice .)
    OR              reduce using rule 69 (primitive_value -> value_array_slice .)
    EQUAL           reduce using rule 69 (primitive_value -> value_array_slice .)
    DIFF            reduce using rule 69 (primitive_value -> value_array_slice .)
    GREATER         reduce using rule 69 (primitive_value -> value_array_slice .)
    GREATEREQ       reduce using rule 69 (primitive_value -> value_array_slice .)
    LESS            reduce using rule 69 (primitive_value -> value_array_slice .)
    LESSEQ          reduce using rule 69 (primitive_value -> value_array_slice .)
    IN              reduce using rule 69 (primitive_value -> value_array_slice .)
    RPAREN          reduce using rule 69 (primitive_value -> value_array_slice .)
    COMMA           reduce using rule 69 (primitive_value -> value_array_slice .)
    LBRACKET        reduce using rule 69 (primitive_value -> value_array_slice .)
    SEMI            reduce using rule 69 (primitive_value -> value_array_slice .)
    THEN            reduce using rule 69 (primitive_value -> value_array_slice .)
    RBRACKET        reduce using rule 69 (primitive_value -> value_array_slice .)
    COLON           reduce using rule 69 (primitive_value -> value_array_slice .)
    ID              reduce using rule 69 (primitive_value -> value_array_slice .)
    ELSE            reduce using rule 69 (primitive_value -> value_array_slice .)
    ELSIF           reduce using rule 69 (primitive_value -> value_array_slice .)
    TO              reduce using rule 69 (primitive_value -> value_array_slice .)
    DOWN            reduce using rule 69 (primitive_value -> value_array_slice .)
    BY              reduce using rule 69 (primitive_value -> value_array_slice .)
    FI              reduce using rule 69 (primitive_value -> value_array_slice .)
    WHILE           reduce using rule 69 (primitive_value -> value_array_slice .)


state 53

    (76) integer_literal -> ICONST .

    TIMES           reduce using rule 76 (integer_literal -> ICONST .)
    DIVIDE          reduce using rule 76 (integer_literal -> ICONST .)
    MOD             reduce using rule 76 (integer_literal -> ICONST .)
    PLUS            reduce using rule 76 (integer_literal -> ICONST .)
    MINUS           reduce using rule 76 (integer_literal -> ICONST .)
    STRCAT          reduce using rule 76 (integer_literal -> ICONST .)
    AND             reduce using rule 76 (integer_literal -> ICONST .)
    OR              reduce using rule 76 (integer_literal -> ICONST .)
    EQUAL           reduce using rule 76 (integer_literal -> ICONST .)
    DIFF            reduce using rule 76 (integer_literal -> ICONST .)
    GREATER         reduce using rule 76 (integer_literal -> ICONST .)
    GREATEREQ       reduce using rule 76 (integer_literal -> ICONST .)
    LESS            reduce using rule 76 (integer_literal -> ICONST .)
    LESSEQ          reduce using rule 76 (integer_literal -> ICONST .)
    IN              reduce using rule 76 (integer_literal -> ICONST .)
    SEMI            reduce using rule 76 (integer_literal -> ICONST .)
    LBRACKET        reduce using rule 76 (integer_literal -> ICONST .)
    RPAREN          reduce using rule 76 (integer_literal -> ICONST .)
    COMMA           reduce using rule 76 (integer_literal -> ICONST .)
    COLON           reduce using rule 76 (integer_literal -> ICONST .)
    RBRACKET        reduce using rule 76 (integer_literal -> ICONST .)
    FI              reduce using rule 76 (integer_literal -> ICONST .)
    ID              reduce using rule 76 (integer_literal -> ICONST .)
    WHILE           reduce using rule 76 (integer_literal -> ICONST .)
    THEN            reduce using rule 76 (integer_literal -> ICONST .)
    ELSE            reduce using rule 76 (integer_literal -> ICONST .)
    ELSIF           reduce using rule 76 (integer_literal -> ICONST .)
    TO              reduce using rule 76 (integer_literal -> ICONST .)
    DOWN            reduce using rule 76 (integer_literal -> ICONST .)
    BY              reduce using rule 76 (integer_literal -> ICONST .)


state 54

    (123) monadic_operator -> NOT .

    ARROW           reduce using rule 123 (monadic_operator -> NOT .)
    ID              reduce using rule 123 (monadic_operator -> NOT .)
    LPAREN          reduce using rule 123 (monadic_operator -> NOT .)
    ICONST          reduce using rule 123 (monadic_operator -> NOT .)
    FALSE           reduce using rule 123 (monadic_operator -> NOT .)
    TRUE            reduce using rule 123 (monadic_operator -> NOT .)
    CCONST          reduce using rule 123 (monadic_operator -> NOT .)
    NULL            reduce using rule 123 (monadic_operator -> NOT .)
    SCONST          reduce using rule 123 (monadic_operator -> NOT .)
    ABS             reduce using rule 123 (monadic_operator -> NOT .)
    ASC             reduce using rule 123 (monadic_operator -> NOT .)
    NUM             reduce using rule 123 (monadic_operator -> NOT .)
    UPPER           reduce using rule 123 (monadic_operator -> NOT .)
    LOWER           reduce using rule 123 (monadic_operator -> NOT .)
    LENGTH          reduce using rule 123 (monadic_operator -> NOT .)
    READ            reduce using rule 123 (monadic_operator -> NOT .)
    PRINT           reduce using rule 123 (monadic_operator -> NOT .)


state 55

    (189) result -> expression .

    SEMI            reduce using rule 189 (result -> expression .)


state 56

    (108) operand1 -> operand2 .
    (116) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (117) arithmetic_multiplicative_operator -> . TIMES
    (118) arithmetic_multiplicative_operator -> . DIVIDE
    (119) arithmetic_multiplicative_operator -> . MOD

    PLUS            reduce using rule 108 (operand1 -> operand2 .)
    MINUS           reduce using rule 108 (operand1 -> operand2 .)
    STRCAT          reduce using rule 108 (operand1 -> operand2 .)
    AND             reduce using rule 108 (operand1 -> operand2 .)
    OR              reduce using rule 108 (operand1 -> operand2 .)
    EQUAL           reduce using rule 108 (operand1 -> operand2 .)
    DIFF            reduce using rule 108 (operand1 -> operand2 .)
    GREATER         reduce using rule 108 (operand1 -> operand2 .)
    GREATEREQ       reduce using rule 108 (operand1 -> operand2 .)
    LESS            reduce using rule 108 (operand1 -> operand2 .)
    LESSEQ          reduce using rule 108 (operand1 -> operand2 .)
    IN              reduce using rule 108 (operand1 -> operand2 .)
    COLON           reduce using rule 108 (operand1 -> operand2 .)
    RPAREN          reduce using rule 108 (operand1 -> operand2 .)
    COMMA           reduce using rule 108 (operand1 -> operand2 .)
    SEMI            reduce using rule 108 (operand1 -> operand2 .)
    WHILE           reduce using rule 108 (operand1 -> operand2 .)
    THEN            reduce using rule 108 (operand1 -> operand2 .)
    TO              reduce using rule 108 (operand1 -> operand2 .)
    DOWN            reduce using rule 108 (operand1 -> operand2 .)
    ELSE            reduce using rule 108 (operand1 -> operand2 .)
    ELSIF           reduce using rule 108 (operand1 -> operand2 .)
    BY              reduce using rule 108 (operand1 -> operand2 .)
    RBRACKET        reduce using rule 108 (operand1 -> operand2 .)
    ID              reduce using rule 108 (operand1 -> operand2 .)
    FI              reduce using rule 108 (operand1 -> operand2 .)
    TIMES           shift and go to state 122
    DIVIDE          shift and go to state 121
    MOD             shift and go to state 120

    arithmetic_multiplicative_operator shift and go to state 119

state 57

    (126) operand4 -> primitive_value .
    (84) array_primitive_value -> primitive_value .

    TIMES           reduce using rule 126 (operand4 -> primitive_value .)
    DIVIDE          reduce using rule 126 (operand4 -> primitive_value .)
    MOD             reduce using rule 126 (operand4 -> primitive_value .)
    PLUS            reduce using rule 126 (operand4 -> primitive_value .)
    MINUS           reduce using rule 126 (operand4 -> primitive_value .)
    STRCAT          reduce using rule 126 (operand4 -> primitive_value .)
    AND             reduce using rule 126 (operand4 -> primitive_value .)
    OR              reduce using rule 126 (operand4 -> primitive_value .)
    EQUAL           reduce using rule 126 (operand4 -> primitive_value .)
    DIFF            reduce using rule 126 (operand4 -> primitive_value .)
    GREATER         reduce using rule 126 (operand4 -> primitive_value .)
    GREATEREQ       reduce using rule 126 (operand4 -> primitive_value .)
    LESS            reduce using rule 126 (operand4 -> primitive_value .)
    LESSEQ          reduce using rule 126 (operand4 -> primitive_value .)
    IN              reduce using rule 126 (operand4 -> primitive_value .)
    COLON           reduce using rule 126 (operand4 -> primitive_value .)
    FI              reduce using rule 126 (operand4 -> primitive_value .)
    SEMI            reduce using rule 126 (operand4 -> primitive_value .)
    RPAREN          reduce using rule 126 (operand4 -> primitive_value .)
    COMMA           reduce using rule 126 (operand4 -> primitive_value .)
    ELSE            reduce using rule 126 (operand4 -> primitive_value .)
    ELSIF           reduce using rule 126 (operand4 -> primitive_value .)
    RBRACKET        reduce using rule 126 (operand4 -> primitive_value .)
    TO              reduce using rule 126 (operand4 -> primitive_value .)
    DOWN            reduce using rule 126 (operand4 -> primitive_value .)
    THEN            reduce using rule 126 (operand4 -> primitive_value .)
    ID              reduce using rule 126 (operand4 -> primitive_value .)
    BY              reduce using rule 126 (operand4 -> primitive_value .)
    WHILE           reduce using rule 126 (operand4 -> primitive_value .)
    LBRACKET        reduce using rule 84 (array_primitive_value -> primitive_value .)


state 58

    (85) parenthesized_expression -> LPAREN . expression RPAREN
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 123
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 59

    (78) boolean_literal -> TRUE .

    TIMES           reduce using rule 78 (boolean_literal -> TRUE .)
    DIVIDE          reduce using rule 78 (boolean_literal -> TRUE .)
    MOD             reduce using rule 78 (boolean_literal -> TRUE .)
    PLUS            reduce using rule 78 (boolean_literal -> TRUE .)
    MINUS           reduce using rule 78 (boolean_literal -> TRUE .)
    STRCAT          reduce using rule 78 (boolean_literal -> TRUE .)
    AND             reduce using rule 78 (boolean_literal -> TRUE .)
    OR              reduce using rule 78 (boolean_literal -> TRUE .)
    EQUAL           reduce using rule 78 (boolean_literal -> TRUE .)
    DIFF            reduce using rule 78 (boolean_literal -> TRUE .)
    GREATER         reduce using rule 78 (boolean_literal -> TRUE .)
    GREATEREQ       reduce using rule 78 (boolean_literal -> TRUE .)
    LESS            reduce using rule 78 (boolean_literal -> TRUE .)
    LESSEQ          reduce using rule 78 (boolean_literal -> TRUE .)
    IN              reduce using rule 78 (boolean_literal -> TRUE .)
    RBRACKET        reduce using rule 78 (boolean_literal -> TRUE .)
    COLON           reduce using rule 78 (boolean_literal -> TRUE .)
    LBRACKET        reduce using rule 78 (boolean_literal -> TRUE .)
    SEMI            reduce using rule 78 (boolean_literal -> TRUE .)
    COMMA           reduce using rule 78 (boolean_literal -> TRUE .)
    THEN            reduce using rule 78 (boolean_literal -> TRUE .)
    RPAREN          reduce using rule 78 (boolean_literal -> TRUE .)
    ID              reduce using rule 78 (boolean_literal -> TRUE .)
    ELSE            reduce using rule 78 (boolean_literal -> TRUE .)
    ELSIF           reduce using rule 78 (boolean_literal -> TRUE .)
    TO              reduce using rule 78 (boolean_literal -> TRUE .)
    DOWN            reduce using rule 78 (boolean_literal -> TRUE .)
    BY              reduce using rule 78 (boolean_literal -> TRUE .)
    FI              reduce using rule 78 (boolean_literal -> TRUE .)
    WHILE           reduce using rule 78 (boolean_literal -> TRUE .)


state 60

    (121) operand3 -> monadic_operator . operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    operand4                       shift and go to state 124
    call_action                    shift and go to state 50
    character_literal              shift and go to state 67
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    array_primitive_value          shift and go to state 76
    primitive_value                shift and go to state 57
    literal                        shift and go to state 71
    identifier                     shift and go to state 79
    builtin_name                   shift and go to state 44
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    array_slice                    shift and go to state 17
    array_element                  shift and go to state 20
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    array_location                 shift and go to state 28
    procedure_call                 shift and go to state 4
    builtin_call                   shift and go to state 11

state 61

    (95) operand0 -> operand1 .
    (109) operand1 -> operand1 . operator2 operand2
    (110) operator2 -> . arithmetic_additive_operator
    (111) operator2 -> . string_concatenation_operator
    (112) arithmetic_additive_operator -> . PLUS
    (113) arithmetic_additive_operator -> . MINUS
    (114) string_concatenation_operator -> . STRCAT

    AND             reduce using rule 95 (operand0 -> operand1 .)
    OR              reduce using rule 95 (operand0 -> operand1 .)
    EQUAL           reduce using rule 95 (operand0 -> operand1 .)
    DIFF            reduce using rule 95 (operand0 -> operand1 .)
    GREATER         reduce using rule 95 (operand0 -> operand1 .)
    GREATEREQ       reduce using rule 95 (operand0 -> operand1 .)
    LESS            reduce using rule 95 (operand0 -> operand1 .)
    LESSEQ          reduce using rule 95 (operand0 -> operand1 .)
    IN              reduce using rule 95 (operand0 -> operand1 .)
    RPAREN          reduce using rule 95 (operand0 -> operand1 .)
    RBRACKET        reduce using rule 95 (operand0 -> operand1 .)
    SEMI            reduce using rule 95 (operand0 -> operand1 .)
    COMMA           reduce using rule 95 (operand0 -> operand1 .)
    COLON           reduce using rule 95 (operand0 -> operand1 .)
    THEN            reduce using rule 95 (operand0 -> operand1 .)
    WHILE           reduce using rule 95 (operand0 -> operand1 .)
    ELSE            reduce using rule 95 (operand0 -> operand1 .)
    ELSIF           reduce using rule 95 (operand0 -> operand1 .)
    TO              reduce using rule 95 (operand0 -> operand1 .)
    DOWN            reduce using rule 95 (operand0 -> operand1 .)
    BY              reduce using rule 95 (operand0 -> operand1 .)
    FI              reduce using rule 95 (operand0 -> operand1 .)
    ID              reduce using rule 95 (operand0 -> operand1 .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    STRCAT          shift and go to state 130

    arithmetic_additive_operator   shift and go to state 129
    string_concatenation_operator  shift and go to state 125
    operator2                      shift and go to state 128

state 62

    (124) operand4 -> location .
    (61) dereferenced_reference -> location . ARROW
    (66) array_location -> location .

    TIMES           reduce using rule 124 (operand4 -> location .)
    DIVIDE          reduce using rule 124 (operand4 -> location .)
    MOD             reduce using rule 124 (operand4 -> location .)
    PLUS            reduce using rule 124 (operand4 -> location .)
    MINUS           reduce using rule 124 (operand4 -> location .)
    STRCAT          reduce using rule 124 (operand4 -> location .)
    AND             reduce using rule 124 (operand4 -> location .)
    OR              reduce using rule 124 (operand4 -> location .)
    EQUAL           reduce using rule 124 (operand4 -> location .)
    DIFF            reduce using rule 124 (operand4 -> location .)
    GREATER         reduce using rule 124 (operand4 -> location .)
    GREATEREQ       reduce using rule 124 (operand4 -> location .)
    LESS            reduce using rule 124 (operand4 -> location .)
    LESSEQ          reduce using rule 124 (operand4 -> location .)
    IN              reduce using rule 124 (operand4 -> location .)
    COLON           reduce using rule 124 (operand4 -> location .)
    FI              reduce using rule 124 (operand4 -> location .)
    SEMI            reduce using rule 124 (operand4 -> location .)
    RPAREN          reduce using rule 124 (operand4 -> location .)
    COMMA           reduce using rule 124 (operand4 -> location .)
    ELSE            reduce using rule 124 (operand4 -> location .)
    ELSIF           reduce using rule 124 (operand4 -> location .)
    RBRACKET        reduce using rule 124 (operand4 -> location .)
    TO              reduce using rule 124 (operand4 -> location .)
    DOWN            reduce using rule 124 (operand4 -> location .)
    THEN            reduce using rule 124 (operand4 -> location .)
    ID              reduce using rule 124 (operand4 -> location .)
    BY              reduce using rule 124 (operand4 -> location .)
    WHILE           reduce using rule 124 (operand4 -> location .)
    ARROW           shift and go to state 103
    LBRACKET        reduce using rule 66 (array_location -> location .)


state 63

    (80) empty_literal -> NULL .

    TIMES           reduce using rule 80 (empty_literal -> NULL .)
    DIVIDE          reduce using rule 80 (empty_literal -> NULL .)
    MOD             reduce using rule 80 (empty_literal -> NULL .)
    PLUS            reduce using rule 80 (empty_literal -> NULL .)
    MINUS           reduce using rule 80 (empty_literal -> NULL .)
    STRCAT          reduce using rule 80 (empty_literal -> NULL .)
    AND             reduce using rule 80 (empty_literal -> NULL .)
    OR              reduce using rule 80 (empty_literal -> NULL .)
    EQUAL           reduce using rule 80 (empty_literal -> NULL .)
    DIFF            reduce using rule 80 (empty_literal -> NULL .)
    GREATER         reduce using rule 80 (empty_literal -> NULL .)
    GREATEREQ       reduce using rule 80 (empty_literal -> NULL .)
    LESS            reduce using rule 80 (empty_literal -> NULL .)
    LESSEQ          reduce using rule 80 (empty_literal -> NULL .)
    IN              reduce using rule 80 (empty_literal -> NULL .)
    SEMI            reduce using rule 80 (empty_literal -> NULL .)
    LBRACKET        reduce using rule 80 (empty_literal -> NULL .)
    THEN            reduce using rule 80 (empty_literal -> NULL .)
    RPAREN          reduce using rule 80 (empty_literal -> NULL .)
    RBRACKET        reduce using rule 80 (empty_literal -> NULL .)
    COMMA           reduce using rule 80 (empty_literal -> NULL .)
    COLON           reduce using rule 80 (empty_literal -> NULL .)
    ID              reduce using rule 80 (empty_literal -> NULL .)
    ELSE            reduce using rule 80 (empty_literal -> NULL .)
    ELSIF           reduce using rule 80 (empty_literal -> NULL .)
    TO              reduce using rule 80 (empty_literal -> NULL .)
    DOWN            reduce using rule 80 (empty_literal -> NULL .)
    BY              reduce using rule 80 (empty_literal -> NULL .)
    FI              reduce using rule 80 (empty_literal -> NULL .)
    WHILE           reduce using rule 80 (empty_literal -> NULL .)


state 64

    (86) expression -> operand0 .
    (96) operand0 -> operand0 . operator1 operand1
    (97) operator1 -> . relational_operator
    (98) operator1 -> . membership_operator
    (99) relational_operator -> . AND
    (100) relational_operator -> . OR
    (101) relational_operator -> . EQUAL
    (102) relational_operator -> . DIFF
    (103) relational_operator -> . GREATER
    (104) relational_operator -> . GREATEREQ
    (105) relational_operator -> . LESS
    (106) relational_operator -> . LESSEQ
    (107) membership_operator -> . IN

    COLON           reduce using rule 86 (expression -> operand0 .)
    ELSE            reduce using rule 86 (expression -> operand0 .)
    ELSIF           reduce using rule 86 (expression -> operand0 .)
    SEMI            reduce using rule 86 (expression -> operand0 .)
    ID              reduce using rule 86 (expression -> operand0 .)
    COMMA           reduce using rule 86 (expression -> operand0 .)
    THEN            reduce using rule 86 (expression -> operand0 .)
    RPAREN          reduce using rule 86 (expression -> operand0 .)
    RBRACKET        reduce using rule 86 (expression -> operand0 .)
    WHILE           reduce using rule 86 (expression -> operand0 .)
    TO              reduce using rule 86 (expression -> operand0 .)
    DOWN            reduce using rule 86 (expression -> operand0 .)
    BY              reduce using rule 86 (expression -> operand0 .)
    FI              reduce using rule 86 (expression -> operand0 .)
    AND             shift and go to state 139
    OR              shift and go to state 137
    EQUAL           shift and go to state 142
    DIFF            shift and go to state 134
    GREATER         shift and go to state 135
    GREATEREQ       shift and go to state 138
    LESS            shift and go to state 136
    LESSEQ          shift and go to state 140
    IN              shift and go to state 132

    membership_operator            shift and go to state 133
    relational_operator            shift and go to state 131
    operator1                      shift and go to state 141

state 65

    (120) operand3 -> operand4 .

    TIMES           reduce using rule 120 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 120 (operand3 -> operand4 .)
    MOD             reduce using rule 120 (operand3 -> operand4 .)
    PLUS            reduce using rule 120 (operand3 -> operand4 .)
    MINUS           reduce using rule 120 (operand3 -> operand4 .)
    STRCAT          reduce using rule 120 (operand3 -> operand4 .)
    AND             reduce using rule 120 (operand3 -> operand4 .)
    OR              reduce using rule 120 (operand3 -> operand4 .)
    EQUAL           reduce using rule 120 (operand3 -> operand4 .)
    DIFF            reduce using rule 120 (operand3 -> operand4 .)
    GREATER         reduce using rule 120 (operand3 -> operand4 .)
    GREATEREQ       reduce using rule 120 (operand3 -> operand4 .)
    LESS            reduce using rule 120 (operand3 -> operand4 .)
    LESSEQ          reduce using rule 120 (operand3 -> operand4 .)
    IN              reduce using rule 120 (operand3 -> operand4 .)
    COLON           reduce using rule 120 (operand3 -> operand4 .)
    SEMI            reduce using rule 120 (operand3 -> operand4 .)
    THEN            reduce using rule 120 (operand3 -> operand4 .)
    RPAREN          reduce using rule 120 (operand3 -> operand4 .)
    RBRACKET        reduce using rule 120 (operand3 -> operand4 .)
    COMMA           reduce using rule 120 (operand3 -> operand4 .)
    ID              reduce using rule 120 (operand3 -> operand4 .)
    ELSE            reduce using rule 120 (operand3 -> operand4 .)
    ELSIF           reduce using rule 120 (operand3 -> operand4 .)
    TO              reduce using rule 120 (operand3 -> operand4 .)
    DOWN            reduce using rule 120 (operand3 -> operand4 .)
    BY              reduce using rule 120 (operand3 -> operand4 .)
    FI              reduce using rule 120 (operand3 -> operand4 .)
    WHILE           reduce using rule 120 (operand3 -> operand4 .)


state 66

    (79) character_literal -> CCONST .

    TIMES           reduce using rule 79 (character_literal -> CCONST .)
    DIVIDE          reduce using rule 79 (character_literal -> CCONST .)
    MOD             reduce using rule 79 (character_literal -> CCONST .)
    PLUS            reduce using rule 79 (character_literal -> CCONST .)
    MINUS           reduce using rule 79 (character_literal -> CCONST .)
    STRCAT          reduce using rule 79 (character_literal -> CCONST .)
    AND             reduce using rule 79 (character_literal -> CCONST .)
    OR              reduce using rule 79 (character_literal -> CCONST .)
    EQUAL           reduce using rule 79 (character_literal -> CCONST .)
    DIFF            reduce using rule 79 (character_literal -> CCONST .)
    GREATER         reduce using rule 79 (character_literal -> CCONST .)
    GREATEREQ       reduce using rule 79 (character_literal -> CCONST .)
    LESS            reduce using rule 79 (character_literal -> CCONST .)
    LESSEQ          reduce using rule 79 (character_literal -> CCONST .)
    IN              reduce using rule 79 (character_literal -> CCONST .)
    SEMI            reduce using rule 79 (character_literal -> CCONST .)
    LBRACKET        reduce using rule 79 (character_literal -> CCONST .)
    COLON           reduce using rule 79 (character_literal -> CCONST .)
    THEN            reduce using rule 79 (character_literal -> CCONST .)
    RPAREN          reduce using rule 79 (character_literal -> CCONST .)
    RBRACKET        reduce using rule 79 (character_literal -> CCONST .)
    COMMA           reduce using rule 79 (character_literal -> CCONST .)
    ID              reduce using rule 79 (character_literal -> CCONST .)
    ELSE            reduce using rule 79 (character_literal -> CCONST .)
    ELSIF           reduce using rule 79 (character_literal -> CCONST .)
    TO              reduce using rule 79 (character_literal -> CCONST .)
    DOWN            reduce using rule 79 (character_literal -> CCONST .)
    BY              reduce using rule 79 (character_literal -> CCONST .)
    FI              reduce using rule 79 (character_literal -> CCONST .)
    WHILE           reduce using rule 79 (character_literal -> CCONST .)


state 67

    (73) literal -> character_literal .

    TIMES           reduce using rule 73 (literal -> character_literal .)
    DIVIDE          reduce using rule 73 (literal -> character_literal .)
    MOD             reduce using rule 73 (literal -> character_literal .)
    PLUS            reduce using rule 73 (literal -> character_literal .)
    MINUS           reduce using rule 73 (literal -> character_literal .)
    STRCAT          reduce using rule 73 (literal -> character_literal .)
    AND             reduce using rule 73 (literal -> character_literal .)
    OR              reduce using rule 73 (literal -> character_literal .)
    EQUAL           reduce using rule 73 (literal -> character_literal .)
    DIFF            reduce using rule 73 (literal -> character_literal .)
    GREATER         reduce using rule 73 (literal -> character_literal .)
    GREATEREQ       reduce using rule 73 (literal -> character_literal .)
    LESS            reduce using rule 73 (literal -> character_literal .)
    LESSEQ          reduce using rule 73 (literal -> character_literal .)
    IN              reduce using rule 73 (literal -> character_literal .)
    RBRACKET        reduce using rule 73 (literal -> character_literal .)
    COLON           reduce using rule 73 (literal -> character_literal .)
    LBRACKET        reduce using rule 73 (literal -> character_literal .)
    THEN            reduce using rule 73 (literal -> character_literal .)
    SEMI            reduce using rule 73 (literal -> character_literal .)
    RPAREN          reduce using rule 73 (literal -> character_literal .)
    COMMA           reduce using rule 73 (literal -> character_literal .)
    ID              reduce using rule 73 (literal -> character_literal .)
    ELSE            reduce using rule 73 (literal -> character_literal .)
    ELSIF           reduce using rule 73 (literal -> character_literal .)
    TO              reduce using rule 73 (literal -> character_literal .)
    DOWN            reduce using rule 73 (literal -> character_literal .)
    BY              reduce using rule 73 (literal -> character_literal .)
    FI              reduce using rule 73 (literal -> character_literal .)
    WHILE           reduce using rule 73 (literal -> character_literal .)


state 68

    (77) boolean_literal -> FALSE .

    TIMES           reduce using rule 77 (boolean_literal -> FALSE .)
    DIVIDE          reduce using rule 77 (boolean_literal -> FALSE .)
    MOD             reduce using rule 77 (boolean_literal -> FALSE .)
    PLUS            reduce using rule 77 (boolean_literal -> FALSE .)
    MINUS           reduce using rule 77 (boolean_literal -> FALSE .)
    STRCAT          reduce using rule 77 (boolean_literal -> FALSE .)
    AND             reduce using rule 77 (boolean_literal -> FALSE .)
    OR              reduce using rule 77 (boolean_literal -> FALSE .)
    EQUAL           reduce using rule 77 (boolean_literal -> FALSE .)
    DIFF            reduce using rule 77 (boolean_literal -> FALSE .)
    GREATER         reduce using rule 77 (boolean_literal -> FALSE .)
    GREATEREQ       reduce using rule 77 (boolean_literal -> FALSE .)
    LESS            reduce using rule 77 (boolean_literal -> FALSE .)
    LESSEQ          reduce using rule 77 (boolean_literal -> FALSE .)
    IN              reduce using rule 77 (boolean_literal -> FALSE .)
    RBRACKET        reduce using rule 77 (boolean_literal -> FALSE .)
    COLON           reduce using rule 77 (boolean_literal -> FALSE .)
    LBRACKET        reduce using rule 77 (boolean_literal -> FALSE .)
    SEMI            reduce using rule 77 (boolean_literal -> FALSE .)
    COMMA           reduce using rule 77 (boolean_literal -> FALSE .)
    THEN            reduce using rule 77 (boolean_literal -> FALSE .)
    RPAREN          reduce using rule 77 (boolean_literal -> FALSE .)
    ID              reduce using rule 77 (boolean_literal -> FALSE .)
    ELSE            reduce using rule 77 (boolean_literal -> FALSE .)
    ELSIF           reduce using rule 77 (boolean_literal -> FALSE .)
    TO              reduce using rule 77 (boolean_literal -> FALSE .)
    DOWN            reduce using rule 77 (boolean_literal -> FALSE .)
    BY              reduce using rule 77 (boolean_literal -> FALSE .)
    FI              reduce using rule 77 (boolean_literal -> FALSE .)
    WHILE           reduce using rule 77 (boolean_literal -> FALSE .)


state 69

    (87) expression -> conditional_expression .

    COLON           reduce using rule 87 (expression -> conditional_expression .)
    ELSE            reduce using rule 87 (expression -> conditional_expression .)
    ELSIF           reduce using rule 87 (expression -> conditional_expression .)
    SEMI            reduce using rule 87 (expression -> conditional_expression .)
    ID              reduce using rule 87 (expression -> conditional_expression .)
    COMMA           reduce using rule 87 (expression -> conditional_expression .)
    THEN            reduce using rule 87 (expression -> conditional_expression .)
    RPAREN          reduce using rule 87 (expression -> conditional_expression .)
    RBRACKET        reduce using rule 87 (expression -> conditional_expression .)
    WHILE           reduce using rule 87 (expression -> conditional_expression .)
    TO              reduce using rule 87 (expression -> conditional_expression .)
    DOWN            reduce using rule 87 (expression -> conditional_expression .)
    BY              reduce using rule 87 (expression -> conditional_expression .)
    FI              reduce using rule 87 (expression -> conditional_expression .)


state 70

    (74) literal -> empty_literal .

    TIMES           reduce using rule 74 (literal -> empty_literal .)
    DIVIDE          reduce using rule 74 (literal -> empty_literal .)
    MOD             reduce using rule 74 (literal -> empty_literal .)
    PLUS            reduce using rule 74 (literal -> empty_literal .)
    MINUS           reduce using rule 74 (literal -> empty_literal .)
    STRCAT          reduce using rule 74 (literal -> empty_literal .)
    AND             reduce using rule 74 (literal -> empty_literal .)
    OR              reduce using rule 74 (literal -> empty_literal .)
    EQUAL           reduce using rule 74 (literal -> empty_literal .)
    DIFF            reduce using rule 74 (literal -> empty_literal .)
    GREATER         reduce using rule 74 (literal -> empty_literal .)
    GREATEREQ       reduce using rule 74 (literal -> empty_literal .)
    LESS            reduce using rule 74 (literal -> empty_literal .)
    LESSEQ          reduce using rule 74 (literal -> empty_literal .)
    IN              reduce using rule 74 (literal -> empty_literal .)
    RBRACKET        reduce using rule 74 (literal -> empty_literal .)
    COLON           reduce using rule 74 (literal -> empty_literal .)
    LBRACKET        reduce using rule 74 (literal -> empty_literal .)
    THEN            reduce using rule 74 (literal -> empty_literal .)
    SEMI            reduce using rule 74 (literal -> empty_literal .)
    RPAREN          reduce using rule 74 (literal -> empty_literal .)
    COMMA           reduce using rule 74 (literal -> empty_literal .)
    ID              reduce using rule 74 (literal -> empty_literal .)
    ELSE            reduce using rule 74 (literal -> empty_literal .)
    ELSIF           reduce using rule 74 (literal -> empty_literal .)
    TO              reduce using rule 74 (literal -> empty_literal .)
    DOWN            reduce using rule 74 (literal -> empty_literal .)
    BY              reduce using rule 74 (literal -> empty_literal .)
    FI              reduce using rule 74 (literal -> empty_literal .)
    WHILE           reduce using rule 74 (literal -> empty_literal .)


state 71

    (67) primitive_value -> literal .

    TIMES           reduce using rule 67 (primitive_value -> literal .)
    DIVIDE          reduce using rule 67 (primitive_value -> literal .)
    MOD             reduce using rule 67 (primitive_value -> literal .)
    PLUS            reduce using rule 67 (primitive_value -> literal .)
    MINUS           reduce using rule 67 (primitive_value -> literal .)
    STRCAT          reduce using rule 67 (primitive_value -> literal .)
    AND             reduce using rule 67 (primitive_value -> literal .)
    OR              reduce using rule 67 (primitive_value -> literal .)
    EQUAL           reduce using rule 67 (primitive_value -> literal .)
    DIFF            reduce using rule 67 (primitive_value -> literal .)
    GREATER         reduce using rule 67 (primitive_value -> literal .)
    GREATEREQ       reduce using rule 67 (primitive_value -> literal .)
    LESS            reduce using rule 67 (primitive_value -> literal .)
    LESSEQ          reduce using rule 67 (primitive_value -> literal .)
    IN              reduce using rule 67 (primitive_value -> literal .)
    RPAREN          reduce using rule 67 (primitive_value -> literal .)
    COMMA           reduce using rule 67 (primitive_value -> literal .)
    LBRACKET        reduce using rule 67 (primitive_value -> literal .)
    SEMI            reduce using rule 67 (primitive_value -> literal .)
    THEN            reduce using rule 67 (primitive_value -> literal .)
    RBRACKET        reduce using rule 67 (primitive_value -> literal .)
    COLON           reduce using rule 67 (primitive_value -> literal .)
    ID              reduce using rule 67 (primitive_value -> literal .)
    ELSE            reduce using rule 67 (primitive_value -> literal .)
    ELSIF           reduce using rule 67 (primitive_value -> literal .)
    TO              reduce using rule 67 (primitive_value -> literal .)
    DOWN            reduce using rule 67 (primitive_value -> literal .)
    BY              reduce using rule 67 (primitive_value -> literal .)
    FI              reduce using rule 67 (primitive_value -> literal .)
    WHILE           reduce using rule 67 (primitive_value -> literal .)


state 72

    (88) conditional_expression -> IF . boolean_expression then_expression else_expression FI
    (89) conditional_expression -> IF . boolean_expression then_expression elsif_expression else_expression FI
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    boolean_expression             shift and go to state 143
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 73

    (71) literal -> integer_literal .

    TIMES           reduce using rule 71 (literal -> integer_literal .)
    DIVIDE          reduce using rule 71 (literal -> integer_literal .)
    MOD             reduce using rule 71 (literal -> integer_literal .)
    PLUS            reduce using rule 71 (literal -> integer_literal .)
    MINUS           reduce using rule 71 (literal -> integer_literal .)
    STRCAT          reduce using rule 71 (literal -> integer_literal .)
    AND             reduce using rule 71 (literal -> integer_literal .)
    OR              reduce using rule 71 (literal -> integer_literal .)
    EQUAL           reduce using rule 71 (literal -> integer_literal .)
    DIFF            reduce using rule 71 (literal -> integer_literal .)
    GREATER         reduce using rule 71 (literal -> integer_literal .)
    GREATEREQ       reduce using rule 71 (literal -> integer_literal .)
    LESS            reduce using rule 71 (literal -> integer_literal .)
    LESSEQ          reduce using rule 71 (literal -> integer_literal .)
    IN              reduce using rule 71 (literal -> integer_literal .)
    RBRACKET        reduce using rule 71 (literal -> integer_literal .)
    COLON           reduce using rule 71 (literal -> integer_literal .)
    LBRACKET        reduce using rule 71 (literal -> integer_literal .)
    THEN            reduce using rule 71 (literal -> integer_literal .)
    SEMI            reduce using rule 71 (literal -> integer_literal .)
    RPAREN          reduce using rule 71 (literal -> integer_literal .)
    COMMA           reduce using rule 71 (literal -> integer_literal .)
    ID              reduce using rule 71 (literal -> integer_literal .)
    ELSE            reduce using rule 71 (literal -> integer_literal .)
    ELSIF           reduce using rule 71 (literal -> integer_literal .)
    TO              reduce using rule 71 (literal -> integer_literal .)
    DOWN            reduce using rule 71 (literal -> integer_literal .)
    BY              reduce using rule 71 (literal -> integer_literal .)
    FI              reduce using rule 71 (literal -> integer_literal .)
    WHILE           reduce using rule 71 (literal -> integer_literal .)


state 74

    (188) result_action -> RESULT result .

    SEMI            reduce using rule 188 (result_action -> RESULT result .)


state 75

    (72) literal -> boolean_literal .

    TIMES           reduce using rule 72 (literal -> boolean_literal .)
    DIVIDE          reduce using rule 72 (literal -> boolean_literal .)
    MOD             reduce using rule 72 (literal -> boolean_literal .)
    PLUS            reduce using rule 72 (literal -> boolean_literal .)
    MINUS           reduce using rule 72 (literal -> boolean_literal .)
    STRCAT          reduce using rule 72 (literal -> boolean_literal .)
    AND             reduce using rule 72 (literal -> boolean_literal .)
    OR              reduce using rule 72 (literal -> boolean_literal .)
    EQUAL           reduce using rule 72 (literal -> boolean_literal .)
    DIFF            reduce using rule 72 (literal -> boolean_literal .)
    GREATER         reduce using rule 72 (literal -> boolean_literal .)
    GREATEREQ       reduce using rule 72 (literal -> boolean_literal .)
    LESS            reduce using rule 72 (literal -> boolean_literal .)
    LESSEQ          reduce using rule 72 (literal -> boolean_literal .)
    IN              reduce using rule 72 (literal -> boolean_literal .)
    RBRACKET        reduce using rule 72 (literal -> boolean_literal .)
    COLON           reduce using rule 72 (literal -> boolean_literal .)
    LBRACKET        reduce using rule 72 (literal -> boolean_literal .)
    THEN            reduce using rule 72 (literal -> boolean_literal .)
    SEMI            reduce using rule 72 (literal -> boolean_literal .)
    RPAREN          reduce using rule 72 (literal -> boolean_literal .)
    COMMA           reduce using rule 72 (literal -> boolean_literal .)
    ID              reduce using rule 72 (literal -> boolean_literal .)
    ELSE            reduce using rule 72 (literal -> boolean_literal .)
    ELSIF           reduce using rule 72 (literal -> boolean_literal .)
    TO              reduce using rule 72 (literal -> boolean_literal .)
    DOWN            reduce using rule 72 (literal -> boolean_literal .)
    BY              reduce using rule 72 (literal -> boolean_literal .)
    FI              reduce using rule 72 (literal -> boolean_literal .)
    WHILE           reduce using rule 72 (literal -> boolean_literal .)


state 76

    (82) value_array_element -> array_primitive_value . LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> array_primitive_value . LBRACKET lower_bound COLON upper_bound RBRACKET

    LBRACKET        shift and go to state 144


state 77

    (115) operand2 -> operand3 .

    TIMES           reduce using rule 115 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 115 (operand2 -> operand3 .)
    MOD             reduce using rule 115 (operand2 -> operand3 .)
    PLUS            reduce using rule 115 (operand2 -> operand3 .)
    MINUS           reduce using rule 115 (operand2 -> operand3 .)
    STRCAT          reduce using rule 115 (operand2 -> operand3 .)
    AND             reduce using rule 115 (operand2 -> operand3 .)
    OR              reduce using rule 115 (operand2 -> operand3 .)
    EQUAL           reduce using rule 115 (operand2 -> operand3 .)
    DIFF            reduce using rule 115 (operand2 -> operand3 .)
    GREATER         reduce using rule 115 (operand2 -> operand3 .)
    GREATEREQ       reduce using rule 115 (operand2 -> operand3 .)
    LESS            reduce using rule 115 (operand2 -> operand3 .)
    LESSEQ          reduce using rule 115 (operand2 -> operand3 .)
    IN              reduce using rule 115 (operand2 -> operand3 .)
    RBRACKET        reduce using rule 115 (operand2 -> operand3 .)
    SEMI            reduce using rule 115 (operand2 -> operand3 .)
    ID              reduce using rule 115 (operand2 -> operand3 .)
    COMMA           reduce using rule 115 (operand2 -> operand3 .)
    THEN            reduce using rule 115 (operand2 -> operand3 .)
    ELSE            reduce using rule 115 (operand2 -> operand3 .)
    ELSIF           reduce using rule 115 (operand2 -> operand3 .)
    TO              reduce using rule 115 (operand2 -> operand3 .)
    DOWN            reduce using rule 115 (operand2 -> operand3 .)
    BY              reduce using rule 115 (operand2 -> operand3 .)
    RPAREN          reduce using rule 115 (operand2 -> operand3 .)
    COLON           reduce using rule 115 (operand2 -> operand3 .)
    FI              reduce using rule 115 (operand2 -> operand3 .)
    WHILE           reduce using rule 115 (operand2 -> operand3 .)


state 78

    (125) operand4 -> referenced_location .

    TIMES           reduce using rule 125 (operand4 -> referenced_location .)
    DIVIDE          reduce using rule 125 (operand4 -> referenced_location .)
    MOD             reduce using rule 125 (operand4 -> referenced_location .)
    PLUS            reduce using rule 125 (operand4 -> referenced_location .)
    MINUS           reduce using rule 125 (operand4 -> referenced_location .)
    STRCAT          reduce using rule 125 (operand4 -> referenced_location .)
    AND             reduce using rule 125 (operand4 -> referenced_location .)
    OR              reduce using rule 125 (operand4 -> referenced_location .)
    EQUAL           reduce using rule 125 (operand4 -> referenced_location .)
    DIFF            reduce using rule 125 (operand4 -> referenced_location .)
    GREATER         reduce using rule 125 (operand4 -> referenced_location .)
    GREATEREQ       reduce using rule 125 (operand4 -> referenced_location .)
    LESS            reduce using rule 125 (operand4 -> referenced_location .)
    LESSEQ          reduce using rule 125 (operand4 -> referenced_location .)
    IN              reduce using rule 125 (operand4 -> referenced_location .)
    COLON           reduce using rule 125 (operand4 -> referenced_location .)
    FI              reduce using rule 125 (operand4 -> referenced_location .)
    SEMI            reduce using rule 125 (operand4 -> referenced_location .)
    RPAREN          reduce using rule 125 (operand4 -> referenced_location .)
    COMMA           reduce using rule 125 (operand4 -> referenced_location .)
    ELSE            reduce using rule 125 (operand4 -> referenced_location .)
    ELSIF           reduce using rule 125 (operand4 -> referenced_location .)
    RBRACKET        reduce using rule 125 (operand4 -> referenced_location .)
    TO              reduce using rule 125 (operand4 -> referenced_location .)
    DOWN            reduce using rule 125 (operand4 -> referenced_location .)
    THEN            reduce using rule 125 (operand4 -> referenced_location .)
    ID              reduce using rule 125 (operand4 -> referenced_location .)
    BY              reduce using rule 125 (operand4 -> referenced_location .)
    WHILE           reduce using rule 125 (operand4 -> referenced_location .)


state 79

    (56) location -> identifier .
    (180) procedure_call -> identifier . LPAREN RPAREN
    (181) procedure_call -> identifier . LPAREN parameter_list RPAREN

    ARROW           reduce using rule 56 (location -> identifier .)
    TIMES           reduce using rule 56 (location -> identifier .)
    DIVIDE          reduce using rule 56 (location -> identifier .)
    MOD             reduce using rule 56 (location -> identifier .)
    PLUS            reduce using rule 56 (location -> identifier .)
    MINUS           reduce using rule 56 (location -> identifier .)
    STRCAT          reduce using rule 56 (location -> identifier .)
    AND             reduce using rule 56 (location -> identifier .)
    OR              reduce using rule 56 (location -> identifier .)
    EQUAL           reduce using rule 56 (location -> identifier .)
    DIFF            reduce using rule 56 (location -> identifier .)
    GREATER         reduce using rule 56 (location -> identifier .)
    GREATEREQ       reduce using rule 56 (location -> identifier .)
    LESS            reduce using rule 56 (location -> identifier .)
    LESSEQ          reduce using rule 56 (location -> identifier .)
    IN              reduce using rule 56 (location -> identifier .)
    THEN            reduce using rule 56 (location -> identifier .)
    LBRACKET        reduce using rule 56 (location -> identifier .)
    RPAREN          reduce using rule 56 (location -> identifier .)
    COMMA           reduce using rule 56 (location -> identifier .)
    COLON           reduce using rule 56 (location -> identifier .)
    RBRACKET        reduce using rule 56 (location -> identifier .)
    WHILE           reduce using rule 56 (location -> identifier .)
    SEMI            reduce using rule 56 (location -> identifier .)
    ID              reduce using rule 56 (location -> identifier .)
    ELSE            reduce using rule 56 (location -> identifier .)
    ELSIF           reduce using rule 56 (location -> identifier .)
    TO              reduce using rule 56 (location -> identifier .)
    DOWN            reduce using rule 56 (location -> identifier .)
    BY              reduce using rule 56 (location -> identifier .)
    ASSIGN          reduce using rule 56 (location -> identifier .)
    INCREASE        reduce using rule 56 (location -> identifier .)
    DECREASE        reduce using rule 56 (location -> identifier .)
    MULCREASE       reduce using rule 56 (location -> identifier .)
    DIVCREASE       reduce using rule 56 (location -> identifier .)
    MODCREASE       reduce using rule 56 (location -> identifier .)
    FI              reduce using rule 56 (location -> identifier .)
    LPAREN          shift and go to state 116


state 80

    (19) synonym_list -> synonym_definition .

    SEMI            reduce using rule 19 (synonym_list -> synonym_definition .)
    ID              reduce using rule 19 (synonym_list -> synonym_definition .)


state 81

    (21) synonym_definition -> identifier_list . initialization
    (22) synonym_definition -> identifier_list . mode initialization
    (16) identifier_list -> identifier_list . COMMA identifier
    (14) initialization -> . ASSIGN expression
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    COMMA           shift and go to state 145
    ASSIGN          shift and go to state 153
    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    initialization                 shift and go to state 155
    string_mode                    shift and go to state 148
    discrete_mode                  shift and go to state 147
    discrete_range_mode            shift and go to state 150
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 160
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 82

    (15) identifier_list -> identifier .

    COMMA           reduce using rule 15 (identifier_list -> identifier .)
    REF             reduce using rule 15 (identifier_list -> identifier .)
    ID              reduce using rule 15 (identifier_list -> identifier .)
    INT             reduce using rule 15 (identifier_list -> identifier .)
    BOOL            reduce using rule 15 (identifier_list -> identifier .)
    CHAR            reduce using rule 15 (identifier_list -> identifier .)
    CHARS           reduce using rule 15 (identifier_list -> identifier .)
    ARRAY           reduce using rule 15 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 15 (identifier_list -> identifier .)


state 83

    (18) synonym_statement -> SYN synonym_list . SEMI
    (20) synonym_list -> synonym_list . synonym_definition
    (21) synonym_definition -> . identifier_list initialization
    (22) synonym_definition -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    SEMI            shift and go to state 167
    ID              shift and go to state 24

    synonym_definition             shift and go to state 166
    identifier_list                shift and go to state 81
    identifier                     shift and go to state 82

state 84

    (130) label_id -> identifier .

    SEMI            reduce using rule 130 (label_id -> identifier .)


state 85

    (185) exit_action -> EXIT label_id .

    SEMI            reduce using rule 185 (exit_action -> EXIT label_id .)


state 86

    (3) statement_list -> statement_list statement .

    DCL             reduce using rule 3 (statement_list -> statement_list statement .)
    SYN             reduce using rule 3 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    RESULT          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    DO              reduce using rule 3 (statement_list -> statement_list statement .)
    ABS             reduce using rule 3 (statement_list -> statement_list statement .)
    ASC             reduce using rule 3 (statement_list -> statement_list statement .)
    NUM             reduce using rule 3 (statement_list -> statement_list statement .)
    UPPER           reduce using rule 3 (statement_list -> statement_list statement .)
    LOWER           reduce using rule 3 (statement_list -> statement_list statement .)
    LENGTH          reduce using rule 3 (statement_list -> statement_list statement .)
    READ            reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    END             reduce using rule 3 (statement_list -> statement_list statement .)


state 87

    (128) action_statement -> action SEMI .

    OD              reduce using rule 128 (action_statement -> action SEMI .)
    EXIT            reduce using rule 128 (action_statement -> action SEMI .)
    RETURN          reduce using rule 128 (action_statement -> action SEMI .)
    RESULT          reduce using rule 128 (action_statement -> action SEMI .)
    ID              reduce using rule 128 (action_statement -> action SEMI .)
    IF              reduce using rule 128 (action_statement -> action SEMI .)
    DO              reduce using rule 128 (action_statement -> action SEMI .)
    ABS             reduce using rule 128 (action_statement -> action SEMI .)
    ASC             reduce using rule 128 (action_statement -> action SEMI .)
    NUM             reduce using rule 128 (action_statement -> action SEMI .)
    UPPER           reduce using rule 128 (action_statement -> action SEMI .)
    LOWER           reduce using rule 128 (action_statement -> action SEMI .)
    LENGTH          reduce using rule 128 (action_statement -> action SEMI .)
    READ            reduce using rule 128 (action_statement -> action SEMI .)
    PRINT           reduce using rule 128 (action_statement -> action SEMI .)
    FI              reduce using rule 128 (action_statement -> action SEMI .)
    ELSE            reduce using rule 128 (action_statement -> action SEMI .)
    ELSIF           reduce using rule 128 (action_statement -> action SEMI .)
    END             reduce using rule 128 (action_statement -> action SEMI .)
    DCL             reduce using rule 128 (action_statement -> action SEMI .)
    SYN             reduce using rule 128 (action_statement -> action SEMI .)
    TYPE            reduce using rule 128 (action_statement -> action SEMI .)
    $end            reduce using rule 128 (action_statement -> action SEMI .)


state 88

    (187) return_action -> RETURN result .

    SEMI            reduce using rule 187 (return_action -> RETURN result .)


state 89

    (23) newmode_statement -> TYPE newmode_list . SEMI
    (25) newmode_list -> newmode_list . COMMA mode_definition

    SEMI            shift and go to state 168
    COMMA           shift and go to state 169


state 90

    (26) mode_definition -> identifier_list . ASSIGN mode
    (16) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 170
    COMMA           shift and go to state 145


state 91

    (24) newmode_list -> mode_definition .

    SEMI            reduce using rule 24 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 24 (newmode_list -> mode_definition .)


state 92

    (9) declaration_statement -> DCL declaration_list . SEMI
    (11) declaration_list -> declaration_list . COMMA declaration

    SEMI            shift and go to state 172
    COMMA           shift and go to state 171


state 93

    (12) declaration -> identifier_list . mode
    (13) declaration -> identifier_list . mode initialization
    (16) identifier_list -> identifier_list . COMMA identifier
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    COMMA           shift and go to state 145
    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    string_mode                    shift and go to state 148
    discrete_mode                  shift and go to state 147
    discrete_range_mode            shift and go to state 150
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 173
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 94

    (10) declaration_list -> declaration .

    SEMI            reduce using rule 10 (declaration_list -> declaration .)
    COMMA           reduce using rule 10 (declaration_list -> declaration .)


state 95

    (140) assigning_operator -> ASSIGN .

    IF              reduce using rule 140 (assigning_operator -> ASSIGN .)
    MINUS           reduce using rule 140 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 140 (assigning_operator -> ASSIGN .)
    ARROW           reduce using rule 140 (assigning_operator -> ASSIGN .)
    ID              reduce using rule 140 (assigning_operator -> ASSIGN .)
    LPAREN          reduce using rule 140 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 140 (assigning_operator -> ASSIGN .)
    FALSE           reduce using rule 140 (assigning_operator -> ASSIGN .)
    TRUE            reduce using rule 140 (assigning_operator -> ASSIGN .)
    CCONST          reduce using rule 140 (assigning_operator -> ASSIGN .)
    NULL            reduce using rule 140 (assigning_operator -> ASSIGN .)
    SCONST          reduce using rule 140 (assigning_operator -> ASSIGN .)
    ABS             reduce using rule 140 (assigning_operator -> ASSIGN .)
    ASC             reduce using rule 140 (assigning_operator -> ASSIGN .)
    NUM             reduce using rule 140 (assigning_operator -> ASSIGN .)
    UPPER           reduce using rule 140 (assigning_operator -> ASSIGN .)
    LOWER           reduce using rule 140 (assigning_operator -> ASSIGN .)
    LENGTH          reduce using rule 140 (assigning_operator -> ASSIGN .)
    READ            reduce using rule 140 (assigning_operator -> ASSIGN .)
    PRINT           reduce using rule 140 (assigning_operator -> ASSIGN .)


state 96

    (141) assigning_operator -> closed_dyadic_operator .

    IF              reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    MINUS           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    NOT             reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    ARROW           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    ID              reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    LPAREN          reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    ICONST          reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    FALSE           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    TRUE            reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    CCONST          reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    NULL            reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    SCONST          reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    ABS             reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    ASC             reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    NUM             reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    UPPER           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    LOWER           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    LENGTH          reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    READ            reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)
    PRINT           reduce using rule 141 (assigning_operator -> closed_dyadic_operator .)


state 97

    (139) assignment_action -> location assigning_operator . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    dereferenced_reference         shift and go to state 22
    call_action                    shift and go to state 50
    procedure_call                 shift and go to state 4
    value_array_element            shift and go to state 46
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 174
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    identifier                     shift and go to state 79
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    builtin_call                   shift and go to state 11

state 98

    (146) closed_dyadic_operator -> MODCREASE .

    IF              reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    MINUS           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    NOT             reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    ARROW           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    ID              reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    LPAREN          reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    ICONST          reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    FALSE           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    TRUE            reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    CCONST          reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    NULL            reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    SCONST          reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    ABS             reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    ASC             reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    NUM             reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    UPPER           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    LOWER           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    LENGTH          reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    READ            reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)
    PRINT           reduce using rule 146 (closed_dyadic_operator -> MODCREASE .)


state 99

    (142) closed_dyadic_operator -> INCREASE .

    IF              reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    MINUS           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    NOT             reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    ARROW           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    ID              reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    LPAREN          reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    ICONST          reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    FALSE           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    TRUE            reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    CCONST          reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    NULL            reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    SCONST          reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    ABS             reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    ASC             reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    NUM             reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    UPPER           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    LOWER           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    LENGTH          reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    READ            reduce using rule 142 (closed_dyadic_operator -> INCREASE .)
    PRINT           reduce using rule 142 (closed_dyadic_operator -> INCREASE .)


state 100

    (144) closed_dyadic_operator -> MULCREASE .

    IF              reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    MINUS           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    NOT             reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    ARROW           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    ID              reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    LPAREN          reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    ICONST          reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    FALSE           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    TRUE            reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    CCONST          reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    NULL            reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    SCONST          reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    ABS             reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    ASC             reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    NUM             reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    UPPER           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    LOWER           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    LENGTH          reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    READ            reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)
    PRINT           reduce using rule 144 (closed_dyadic_operator -> MULCREASE .)


state 101

    (143) closed_dyadic_operator -> DECREASE .

    IF              reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    MINUS           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    NOT             reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    ARROW           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    ID              reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    LPAREN          reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    ICONST          reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    FALSE           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    TRUE            reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    CCONST          reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    NULL            reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    SCONST          reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    ABS             reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    ASC             reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    NUM             reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    UPPER           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    LOWER           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    LENGTH          reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    READ            reduce using rule 143 (closed_dyadic_operator -> DECREASE .)
    PRINT           reduce using rule 143 (closed_dyadic_operator -> DECREASE .)


state 102

    (145) closed_dyadic_operator -> DIVCREASE .

    IF              reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    MINUS           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    NOT             reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    ARROW           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    ID              reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    LPAREN          reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    ICONST          reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    FALSE           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    TRUE            reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    CCONST          reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    NULL            reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    SCONST          reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    ABS             reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    ASC             reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    NUM             reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    UPPER           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    LOWER           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    LENGTH          reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    READ            reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)
    PRINT           reduce using rule 145 (closed_dyadic_operator -> DIVCREASE .)


state 103

    (61) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 61 (dereferenced_reference -> location ARROW .)
    INCREASE        reduce using rule 61 (dereferenced_reference -> location ARROW .)
    DECREASE        reduce using rule 61 (dereferenced_reference -> location ARROW .)
    MULCREASE       reduce using rule 61 (dereferenced_reference -> location ARROW .)
    DIVCREASE       reduce using rule 61 (dereferenced_reference -> location ARROW .)
    MODCREASE       reduce using rule 61 (dereferenced_reference -> location ARROW .)
    LBRACKET        reduce using rule 61 (dereferenced_reference -> location ARROW .)
    TIMES           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    DIVIDE          reduce using rule 61 (dereferenced_reference -> location ARROW .)
    MOD             reduce using rule 61 (dereferenced_reference -> location ARROW .)
    PLUS            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    MINUS           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    STRCAT          reduce using rule 61 (dereferenced_reference -> location ARROW .)
    AND             reduce using rule 61 (dereferenced_reference -> location ARROW .)
    OR              reduce using rule 61 (dereferenced_reference -> location ARROW .)
    EQUAL           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    DIFF            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    GREATER         reduce using rule 61 (dereferenced_reference -> location ARROW .)
    GREATEREQ       reduce using rule 61 (dereferenced_reference -> location ARROW .)
    LESS            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    LESSEQ          reduce using rule 61 (dereferenced_reference -> location ARROW .)
    IN              reduce using rule 61 (dereferenced_reference -> location ARROW .)
    SEMI            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    WHILE           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    RPAREN          reduce using rule 61 (dereferenced_reference -> location ARROW .)
    RBRACKET        reduce using rule 61 (dereferenced_reference -> location ARROW .)
    COMMA           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    TO              reduce using rule 61 (dereferenced_reference -> location ARROW .)
    DOWN            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    BY              reduce using rule 61 (dereferenced_reference -> location ARROW .)
    COLON           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    ID              reduce using rule 61 (dereferenced_reference -> location ARROW .)
    THEN            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    ELSE            reduce using rule 61 (dereferenced_reference -> location ARROW .)
    ELSIF           reduce using rule 61 (dereferenced_reference -> location ARROW .)
    FI              reduce using rule 61 (dereferenced_reference -> location ARROW .)


state 104

    (159) do_action -> DO action_statement_list . OD
    (152) action_statement_list -> action_statement_list . action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    OD              shift and go to state 175
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 176
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 105

    (157) do_action -> DO OD .

    SEMI            reduce using rule 157 (do_action -> DO OD .)


state 106

    (162) control_part -> FOR . for_control
    (163) control_part -> FOR . for_control while_control
    (164) for_control -> . iteration
    (165) iteration -> . step_enumeration
    (166) iteration -> . range_enumeration
    (167) step_enumeration -> . loop_counter ASSIGN start_value end_value
    (168) step_enumeration -> . loop_counter ASSIGN start_value step_value end_value
    (175) range_enumeration -> . loop_counter IN discrete_mode
    (176) range_enumeration -> . loop_counter DOWN IN discrete_mode
    (169) loop_counter -> . identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 177
    range_enumeration              shift and go to state 178
    step_enumeration               shift and go to state 179
    for_control                    shift and go to state 182
    loop_counter                   shift and go to state 181
    iteration                      shift and go to state 180

state 107

    (161) control_part -> while_control .

    SEMI            reduce using rule 161 (control_part -> while_control .)


state 108

    (129) action_statement -> label_id . COLON action SEMI

    COLON           shift and go to state 183


state 109

    (158) do_action -> DO control_part . SEMI OD
    (160) do_action -> DO control_part . SEMI action_statement_list OD

    SEMI            shift and go to state 184


state 110

    (151) action_statement_list -> action_statement .

    EXIT            reduce using rule 151 (action_statement_list -> action_statement .)
    RETURN          reduce using rule 151 (action_statement_list -> action_statement .)
    RESULT          reduce using rule 151 (action_statement_list -> action_statement .)
    ID              reduce using rule 151 (action_statement_list -> action_statement .)
    IF              reduce using rule 151 (action_statement_list -> action_statement .)
    DO              reduce using rule 151 (action_statement_list -> action_statement .)
    ABS             reduce using rule 151 (action_statement_list -> action_statement .)
    ASC             reduce using rule 151 (action_statement_list -> action_statement .)
    NUM             reduce using rule 151 (action_statement_list -> action_statement .)
    UPPER           reduce using rule 151 (action_statement_list -> action_statement .)
    LOWER           reduce using rule 151 (action_statement_list -> action_statement .)
    LENGTH          reduce using rule 151 (action_statement_list -> action_statement .)
    READ            reduce using rule 151 (action_statement_list -> action_statement .)
    PRINT           reduce using rule 151 (action_statement_list -> action_statement .)
    FI              reduce using rule 151 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 151 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 151 (action_statement_list -> action_statement .)
    OD              reduce using rule 151 (action_statement_list -> action_statement .)


state 111

    (177) while_control -> WHILE . boolean_expression
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    boolean_expression             shift and go to state 185
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 112

    (62) array_element -> array_location LBRACKET . expression_list RBRACKET
    (65) array_slice -> array_location LBRACKET . lower_bound COLON upper_bound RBRACKET
    (63) expression_list -> . expression
    (64) expression_list -> . expression_list COMMA expression
    (42) lower_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    expression_list                shift and go to state 188
    dereferenced_reference         shift and go to state 22
    lower_bound                    shift and go to state 186
    operand4                       shift and go to state 65
    parenthesized_expression       shift and go to state 48
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 187
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    array_location                 shift and go to state 28
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    builtin_name                   shift and go to state 44
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 113

    (147) if_action -> IF boolean_expression . then_clause FI
    (148) if_action -> IF boolean_expression . then_clause else_clause FI
    (149) then_clause -> . THEN
    (150) then_clause -> . THEN action_statement_list

    THEN            shift and go to state 190

    then_clause                    shift and go to state 189

state 114

    (90) boolean_expression -> expression .

    THEN            reduce using rule 90 (boolean_expression -> expression .)
    SEMI            reduce using rule 90 (boolean_expression -> expression .)


state 115

    (200) procedure_statement -> label_id COLON . procedure_definition SEMI
    (129) action_statement -> label_id COLON . action SEMI
    (201) procedure_definition -> . formal_procedure_head END
    (202) procedure_definition -> . formal_procedure_head statement_list END
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (203) formal_procedure_head -> . PROC parenthesis_gambiarra SEMI
    (204) formal_procedure_head -> . PROC parenthesis_gambiarra result_spec SEMI
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    PROC            shift and go to state 193
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ID              shift and go to state 24
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    formal_procedure_head          shift and go to state 191
    if_action                      shift and go to state 10
    builtin_call                   shift and go to state 11
    procedure_definition           shift and go to state 194
    action                         shift and go to state 192
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    bracketed_action               shift and go to state 1
    array_location                 shift and go to state 28
    do_action                      shift and go to state 41
    array_element                  shift and go to state 20
    identifier                     shift and go to state 79
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44

state 116

    (180) procedure_call -> identifier LPAREN . RPAREN
    (181) procedure_call -> identifier LPAREN . parameter_list RPAREN
    (182) parameter_list -> . parameter
    (183) parameter_list -> . parameter_list COMMA parameter
    (184) parameter -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    RPAREN          shift and go to state 197
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parameter_list                 shift and go to state 195
    parenthesized_expression       shift and go to state 48
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 196
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parameter                      shift and go to state 198
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    builtin_name                   shift and go to state 44
    identifier                     shift and go to state 79

state 117

    (190) builtin_call -> builtin_name LPAREN . RPAREN
    (191) builtin_call -> builtin_name LPAREN . parameter_list RPAREN
    (182) parameter_list -> . parameter
    (183) parameter_list -> . parameter_list COMMA parameter
    (184) parameter -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    RPAREN          shift and go to state 200
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parameter_list                 shift and go to state 199
    parenthesized_expression       shift and go to state 48
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    builtin_name                   shift and go to state 44
    expression                     shift and go to state 196
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    character_string_literal       shift and go to state 49
    parameter                      shift and go to state 198
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 118

    (127) referenced_location -> ARROW location .
    (61) dereferenced_reference -> location . ARROW
    (66) array_location -> location .

    TIMES           reduce using rule 127 (referenced_location -> ARROW location .)
    DIVIDE          reduce using rule 127 (referenced_location -> ARROW location .)
    MOD             reduce using rule 127 (referenced_location -> ARROW location .)
    PLUS            reduce using rule 127 (referenced_location -> ARROW location .)
    MINUS           reduce using rule 127 (referenced_location -> ARROW location .)
    STRCAT          reduce using rule 127 (referenced_location -> ARROW location .)
    AND             reduce using rule 127 (referenced_location -> ARROW location .)
    OR              reduce using rule 127 (referenced_location -> ARROW location .)
    EQUAL           reduce using rule 127 (referenced_location -> ARROW location .)
    DIFF            reduce using rule 127 (referenced_location -> ARROW location .)
    GREATER         reduce using rule 127 (referenced_location -> ARROW location .)
    GREATEREQ       reduce using rule 127 (referenced_location -> ARROW location .)
    LESS            reduce using rule 127 (referenced_location -> ARROW location .)
    LESSEQ          reduce using rule 127 (referenced_location -> ARROW location .)
    IN              reduce using rule 127 (referenced_location -> ARROW location .)
    RPAREN          reduce using rule 127 (referenced_location -> ARROW location .)
    WHILE           reduce using rule 127 (referenced_location -> ARROW location .)
    SEMI            reduce using rule 127 (referenced_location -> ARROW location .)
    COLON           reduce using rule 127 (referenced_location -> ARROW location .)
    THEN            reduce using rule 127 (referenced_location -> ARROW location .)
    TO              reduce using rule 127 (referenced_location -> ARROW location .)
    DOWN            reduce using rule 127 (referenced_location -> ARROW location .)
    BY              reduce using rule 127 (referenced_location -> ARROW location .)
    RBRACKET        reduce using rule 127 (referenced_location -> ARROW location .)
    COMMA           reduce using rule 127 (referenced_location -> ARROW location .)
    ID              reduce using rule 127 (referenced_location -> ARROW location .)
    ELSE            reduce using rule 127 (referenced_location -> ARROW location .)
    ELSIF           reduce using rule 127 (referenced_location -> ARROW location .)
    FI              reduce using rule 127 (referenced_location -> ARROW location .)
    ARROW           shift and go to state 103
    LBRACKET        reduce using rule 66 (array_location -> location .)


state 119

    (116) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    value_array_element            shift and go to state 46
    builtin_call                   shift and go to state 11
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    primitive_value                shift and go to state 57
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    array_location                 shift and go to state 28
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    array_slice                    shift and go to state 17
    operand3                       shift and go to state 201
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    builtin_name                   shift and go to state 44
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 120

    (119) arithmetic_multiplicative_operator -> MOD .

    MINUS           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    NOT             reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    ARROW           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    ID              reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    LPAREN          reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    ICONST          reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    FALSE           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    TRUE            reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    CCONST          reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    NULL            reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    SCONST          reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    ABS             reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    ASC             reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    NUM             reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    UPPER           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    LOWER           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    LENGTH          reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    READ            reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)
    PRINT           reduce using rule 119 (arithmetic_multiplicative_operator -> MOD .)


state 121

    (118) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    ARROW           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    ID              reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    LPAREN          reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    FALSE           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    TRUE            reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    CCONST          reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    NULL            reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    SCONST          reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    ABS             reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    ASC             reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    NUM             reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    UPPER           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    LOWER           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    LENGTH          reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    READ            reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRINT           reduce using rule 118 (arithmetic_multiplicative_operator -> DIVIDE .)


state 122

    (117) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    ARROW           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    ID              reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    LPAREN          reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    FALSE           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    TRUE            reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    CCONST          reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    NULL            reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    SCONST          reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    ABS             reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    ASC             reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    NUM             reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    UPPER           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    LOWER           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    LENGTH          reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    READ            reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)
    PRINT           reduce using rule 117 (arithmetic_multiplicative_operator -> TIMES .)


state 123

    (85) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 202


state 124

    (121) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    MOD             reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    STRCAT          reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    EQUAL           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    DIFF            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    GREATER         reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    GREATEREQ       reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    LESS            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    LESSEQ          reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    SEMI            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    THEN            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    RBRACKET        reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    ID              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    ELSE            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    ELSIF           reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    TO              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    DOWN            reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    BY              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    FI              reduce using rule 121 (operand3 -> monadic_operator operand4 .)
    WHILE           reduce using rule 121 (operand3 -> monadic_operator operand4 .)


state 125

    (111) operator2 -> string_concatenation_operator .

    MINUS           reduce using rule 111 (operator2 -> string_concatenation_operator .)
    NOT             reduce using rule 111 (operator2 -> string_concatenation_operator .)
    ARROW           reduce using rule 111 (operator2 -> string_concatenation_operator .)
    ID              reduce using rule 111 (operator2 -> string_concatenation_operator .)
    LPAREN          reduce using rule 111 (operator2 -> string_concatenation_operator .)
    ICONST          reduce using rule 111 (operator2 -> string_concatenation_operator .)
    FALSE           reduce using rule 111 (operator2 -> string_concatenation_operator .)
    TRUE            reduce using rule 111 (operator2 -> string_concatenation_operator .)
    CCONST          reduce using rule 111 (operator2 -> string_concatenation_operator .)
    NULL            reduce using rule 111 (operator2 -> string_concatenation_operator .)
    SCONST          reduce using rule 111 (operator2 -> string_concatenation_operator .)
    ABS             reduce using rule 111 (operator2 -> string_concatenation_operator .)
    ASC             reduce using rule 111 (operator2 -> string_concatenation_operator .)
    NUM             reduce using rule 111 (operator2 -> string_concatenation_operator .)
    UPPER           reduce using rule 111 (operator2 -> string_concatenation_operator .)
    LOWER           reduce using rule 111 (operator2 -> string_concatenation_operator .)
    LENGTH          reduce using rule 111 (operator2 -> string_concatenation_operator .)
    READ            reduce using rule 111 (operator2 -> string_concatenation_operator .)
    PRINT           reduce using rule 111 (operator2 -> string_concatenation_operator .)


state 126

    (112) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    ARROW           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    ID              reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    LPAREN          reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    FALSE           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    TRUE            reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    CCONST          reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    NULL            reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    SCONST          reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    ABS             reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    ASC             reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    NUM             reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    UPPER           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    LOWER           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    LENGTH          reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    READ            reduce using rule 112 (arithmetic_additive_operator -> PLUS .)
    PRINT           reduce using rule 112 (arithmetic_additive_operator -> PLUS .)


state 127

    (113) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    ARROW           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    ID              reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    LPAREN          reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    FALSE           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    TRUE            reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    CCONST          reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    NULL            reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    SCONST          reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    ABS             reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    ASC             reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    NUM             reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    UPPER           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    LOWER           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    LENGTH          reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    READ            reduce using rule 113 (arithmetic_additive_operator -> MINUS .)
    PRINT           reduce using rule 113 (arithmetic_additive_operator -> MINUS .)


state 128

    (109) operand1 -> operand1 operator2 . operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    builtin_name                   shift and go to state 44
    value_array_element            shift and go to state 46
    builtin_call                   shift and go to state 11
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    operand2                       shift and go to state 203
    primitive_value                shift and go to state 57
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    array_location                 shift and go to state 28
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    array_slice                    shift and go to state 17
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 129

    (110) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    ARROW           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    ID              reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    LPAREN          reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    FALSE           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    TRUE            reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    CCONST          reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    NULL            reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    SCONST          reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    ABS             reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    ASC             reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    NUM             reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    UPPER           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    LOWER           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    LENGTH          reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    READ            reduce using rule 110 (operator2 -> arithmetic_additive_operator .)
    PRINT           reduce using rule 110 (operator2 -> arithmetic_additive_operator .)


state 130

    (114) string_concatenation_operator -> STRCAT .

    MINUS           reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    NOT             reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    ARROW           reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    ID              reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    LPAREN          reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    ICONST          reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    FALSE           reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    TRUE            reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    CCONST          reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    NULL            reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    SCONST          reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    ABS             reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    ASC             reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    NUM             reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    UPPER           reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    LOWER           reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    LENGTH          reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    READ            reduce using rule 114 (string_concatenation_operator -> STRCAT .)
    PRINT           reduce using rule 114 (string_concatenation_operator -> STRCAT .)


state 131

    (97) operator1 -> relational_operator .

    MINUS           reduce using rule 97 (operator1 -> relational_operator .)
    NOT             reduce using rule 97 (operator1 -> relational_operator .)
    ARROW           reduce using rule 97 (operator1 -> relational_operator .)
    ID              reduce using rule 97 (operator1 -> relational_operator .)
    LPAREN          reduce using rule 97 (operator1 -> relational_operator .)
    ICONST          reduce using rule 97 (operator1 -> relational_operator .)
    FALSE           reduce using rule 97 (operator1 -> relational_operator .)
    TRUE            reduce using rule 97 (operator1 -> relational_operator .)
    CCONST          reduce using rule 97 (operator1 -> relational_operator .)
    NULL            reduce using rule 97 (operator1 -> relational_operator .)
    SCONST          reduce using rule 97 (operator1 -> relational_operator .)
    ABS             reduce using rule 97 (operator1 -> relational_operator .)
    ASC             reduce using rule 97 (operator1 -> relational_operator .)
    NUM             reduce using rule 97 (operator1 -> relational_operator .)
    UPPER           reduce using rule 97 (operator1 -> relational_operator .)
    LOWER           reduce using rule 97 (operator1 -> relational_operator .)
    LENGTH          reduce using rule 97 (operator1 -> relational_operator .)
    READ            reduce using rule 97 (operator1 -> relational_operator .)
    PRINT           reduce using rule 97 (operator1 -> relational_operator .)


state 132

    (107) membership_operator -> IN .

    MINUS           reduce using rule 107 (membership_operator -> IN .)
    NOT             reduce using rule 107 (membership_operator -> IN .)
    ARROW           reduce using rule 107 (membership_operator -> IN .)
    ID              reduce using rule 107 (membership_operator -> IN .)
    LPAREN          reduce using rule 107 (membership_operator -> IN .)
    ICONST          reduce using rule 107 (membership_operator -> IN .)
    FALSE           reduce using rule 107 (membership_operator -> IN .)
    TRUE            reduce using rule 107 (membership_operator -> IN .)
    CCONST          reduce using rule 107 (membership_operator -> IN .)
    NULL            reduce using rule 107 (membership_operator -> IN .)
    SCONST          reduce using rule 107 (membership_operator -> IN .)
    ABS             reduce using rule 107 (membership_operator -> IN .)
    ASC             reduce using rule 107 (membership_operator -> IN .)
    NUM             reduce using rule 107 (membership_operator -> IN .)
    UPPER           reduce using rule 107 (membership_operator -> IN .)
    LOWER           reduce using rule 107 (membership_operator -> IN .)
    LENGTH          reduce using rule 107 (membership_operator -> IN .)
    READ            reduce using rule 107 (membership_operator -> IN .)
    PRINT           reduce using rule 107 (membership_operator -> IN .)


state 133

    (98) operator1 -> membership_operator .

    MINUS           reduce using rule 98 (operator1 -> membership_operator .)
    NOT             reduce using rule 98 (operator1 -> membership_operator .)
    ARROW           reduce using rule 98 (operator1 -> membership_operator .)
    ID              reduce using rule 98 (operator1 -> membership_operator .)
    LPAREN          reduce using rule 98 (operator1 -> membership_operator .)
    ICONST          reduce using rule 98 (operator1 -> membership_operator .)
    FALSE           reduce using rule 98 (operator1 -> membership_operator .)
    TRUE            reduce using rule 98 (operator1 -> membership_operator .)
    CCONST          reduce using rule 98 (operator1 -> membership_operator .)
    NULL            reduce using rule 98 (operator1 -> membership_operator .)
    SCONST          reduce using rule 98 (operator1 -> membership_operator .)
    ABS             reduce using rule 98 (operator1 -> membership_operator .)
    ASC             reduce using rule 98 (operator1 -> membership_operator .)
    NUM             reduce using rule 98 (operator1 -> membership_operator .)
    UPPER           reduce using rule 98 (operator1 -> membership_operator .)
    LOWER           reduce using rule 98 (operator1 -> membership_operator .)
    LENGTH          reduce using rule 98 (operator1 -> membership_operator .)
    READ            reduce using rule 98 (operator1 -> membership_operator .)
    PRINT           reduce using rule 98 (operator1 -> membership_operator .)


state 134

    (102) relational_operator -> DIFF .

    MINUS           reduce using rule 102 (relational_operator -> DIFF .)
    NOT             reduce using rule 102 (relational_operator -> DIFF .)
    ARROW           reduce using rule 102 (relational_operator -> DIFF .)
    ID              reduce using rule 102 (relational_operator -> DIFF .)
    LPAREN          reduce using rule 102 (relational_operator -> DIFF .)
    ICONST          reduce using rule 102 (relational_operator -> DIFF .)
    FALSE           reduce using rule 102 (relational_operator -> DIFF .)
    TRUE            reduce using rule 102 (relational_operator -> DIFF .)
    CCONST          reduce using rule 102 (relational_operator -> DIFF .)
    NULL            reduce using rule 102 (relational_operator -> DIFF .)
    SCONST          reduce using rule 102 (relational_operator -> DIFF .)
    ABS             reduce using rule 102 (relational_operator -> DIFF .)
    ASC             reduce using rule 102 (relational_operator -> DIFF .)
    NUM             reduce using rule 102 (relational_operator -> DIFF .)
    UPPER           reduce using rule 102 (relational_operator -> DIFF .)
    LOWER           reduce using rule 102 (relational_operator -> DIFF .)
    LENGTH          reduce using rule 102 (relational_operator -> DIFF .)
    READ            reduce using rule 102 (relational_operator -> DIFF .)
    PRINT           reduce using rule 102 (relational_operator -> DIFF .)


state 135

    (103) relational_operator -> GREATER .

    MINUS           reduce using rule 103 (relational_operator -> GREATER .)
    NOT             reduce using rule 103 (relational_operator -> GREATER .)
    ARROW           reduce using rule 103 (relational_operator -> GREATER .)
    ID              reduce using rule 103 (relational_operator -> GREATER .)
    LPAREN          reduce using rule 103 (relational_operator -> GREATER .)
    ICONST          reduce using rule 103 (relational_operator -> GREATER .)
    FALSE           reduce using rule 103 (relational_operator -> GREATER .)
    TRUE            reduce using rule 103 (relational_operator -> GREATER .)
    CCONST          reduce using rule 103 (relational_operator -> GREATER .)
    NULL            reduce using rule 103 (relational_operator -> GREATER .)
    SCONST          reduce using rule 103 (relational_operator -> GREATER .)
    ABS             reduce using rule 103 (relational_operator -> GREATER .)
    ASC             reduce using rule 103 (relational_operator -> GREATER .)
    NUM             reduce using rule 103 (relational_operator -> GREATER .)
    UPPER           reduce using rule 103 (relational_operator -> GREATER .)
    LOWER           reduce using rule 103 (relational_operator -> GREATER .)
    LENGTH          reduce using rule 103 (relational_operator -> GREATER .)
    READ            reduce using rule 103 (relational_operator -> GREATER .)
    PRINT           reduce using rule 103 (relational_operator -> GREATER .)


state 136

    (105) relational_operator -> LESS .

    MINUS           reduce using rule 105 (relational_operator -> LESS .)
    NOT             reduce using rule 105 (relational_operator -> LESS .)
    ARROW           reduce using rule 105 (relational_operator -> LESS .)
    ID              reduce using rule 105 (relational_operator -> LESS .)
    LPAREN          reduce using rule 105 (relational_operator -> LESS .)
    ICONST          reduce using rule 105 (relational_operator -> LESS .)
    FALSE           reduce using rule 105 (relational_operator -> LESS .)
    TRUE            reduce using rule 105 (relational_operator -> LESS .)
    CCONST          reduce using rule 105 (relational_operator -> LESS .)
    NULL            reduce using rule 105 (relational_operator -> LESS .)
    SCONST          reduce using rule 105 (relational_operator -> LESS .)
    ABS             reduce using rule 105 (relational_operator -> LESS .)
    ASC             reduce using rule 105 (relational_operator -> LESS .)
    NUM             reduce using rule 105 (relational_operator -> LESS .)
    UPPER           reduce using rule 105 (relational_operator -> LESS .)
    LOWER           reduce using rule 105 (relational_operator -> LESS .)
    LENGTH          reduce using rule 105 (relational_operator -> LESS .)
    READ            reduce using rule 105 (relational_operator -> LESS .)
    PRINT           reduce using rule 105 (relational_operator -> LESS .)


state 137

    (100) relational_operator -> OR .

    MINUS           reduce using rule 100 (relational_operator -> OR .)
    NOT             reduce using rule 100 (relational_operator -> OR .)
    ARROW           reduce using rule 100 (relational_operator -> OR .)
    ID              reduce using rule 100 (relational_operator -> OR .)
    LPAREN          reduce using rule 100 (relational_operator -> OR .)
    ICONST          reduce using rule 100 (relational_operator -> OR .)
    FALSE           reduce using rule 100 (relational_operator -> OR .)
    TRUE            reduce using rule 100 (relational_operator -> OR .)
    CCONST          reduce using rule 100 (relational_operator -> OR .)
    NULL            reduce using rule 100 (relational_operator -> OR .)
    SCONST          reduce using rule 100 (relational_operator -> OR .)
    ABS             reduce using rule 100 (relational_operator -> OR .)
    ASC             reduce using rule 100 (relational_operator -> OR .)
    NUM             reduce using rule 100 (relational_operator -> OR .)
    UPPER           reduce using rule 100 (relational_operator -> OR .)
    LOWER           reduce using rule 100 (relational_operator -> OR .)
    LENGTH          reduce using rule 100 (relational_operator -> OR .)
    READ            reduce using rule 100 (relational_operator -> OR .)
    PRINT           reduce using rule 100 (relational_operator -> OR .)


state 138

    (104) relational_operator -> GREATEREQ .

    MINUS           reduce using rule 104 (relational_operator -> GREATEREQ .)
    NOT             reduce using rule 104 (relational_operator -> GREATEREQ .)
    ARROW           reduce using rule 104 (relational_operator -> GREATEREQ .)
    ID              reduce using rule 104 (relational_operator -> GREATEREQ .)
    LPAREN          reduce using rule 104 (relational_operator -> GREATEREQ .)
    ICONST          reduce using rule 104 (relational_operator -> GREATEREQ .)
    FALSE           reduce using rule 104 (relational_operator -> GREATEREQ .)
    TRUE            reduce using rule 104 (relational_operator -> GREATEREQ .)
    CCONST          reduce using rule 104 (relational_operator -> GREATEREQ .)
    NULL            reduce using rule 104 (relational_operator -> GREATEREQ .)
    SCONST          reduce using rule 104 (relational_operator -> GREATEREQ .)
    ABS             reduce using rule 104 (relational_operator -> GREATEREQ .)
    ASC             reduce using rule 104 (relational_operator -> GREATEREQ .)
    NUM             reduce using rule 104 (relational_operator -> GREATEREQ .)
    UPPER           reduce using rule 104 (relational_operator -> GREATEREQ .)
    LOWER           reduce using rule 104 (relational_operator -> GREATEREQ .)
    LENGTH          reduce using rule 104 (relational_operator -> GREATEREQ .)
    READ            reduce using rule 104 (relational_operator -> GREATEREQ .)
    PRINT           reduce using rule 104 (relational_operator -> GREATEREQ .)


state 139

    (99) relational_operator -> AND .

    MINUS           reduce using rule 99 (relational_operator -> AND .)
    NOT             reduce using rule 99 (relational_operator -> AND .)
    ARROW           reduce using rule 99 (relational_operator -> AND .)
    ID              reduce using rule 99 (relational_operator -> AND .)
    LPAREN          reduce using rule 99 (relational_operator -> AND .)
    ICONST          reduce using rule 99 (relational_operator -> AND .)
    FALSE           reduce using rule 99 (relational_operator -> AND .)
    TRUE            reduce using rule 99 (relational_operator -> AND .)
    CCONST          reduce using rule 99 (relational_operator -> AND .)
    NULL            reduce using rule 99 (relational_operator -> AND .)
    SCONST          reduce using rule 99 (relational_operator -> AND .)
    ABS             reduce using rule 99 (relational_operator -> AND .)
    ASC             reduce using rule 99 (relational_operator -> AND .)
    NUM             reduce using rule 99 (relational_operator -> AND .)
    UPPER           reduce using rule 99 (relational_operator -> AND .)
    LOWER           reduce using rule 99 (relational_operator -> AND .)
    LENGTH          reduce using rule 99 (relational_operator -> AND .)
    READ            reduce using rule 99 (relational_operator -> AND .)
    PRINT           reduce using rule 99 (relational_operator -> AND .)


state 140

    (106) relational_operator -> LESSEQ .

    MINUS           reduce using rule 106 (relational_operator -> LESSEQ .)
    NOT             reduce using rule 106 (relational_operator -> LESSEQ .)
    ARROW           reduce using rule 106 (relational_operator -> LESSEQ .)
    ID              reduce using rule 106 (relational_operator -> LESSEQ .)
    LPAREN          reduce using rule 106 (relational_operator -> LESSEQ .)
    ICONST          reduce using rule 106 (relational_operator -> LESSEQ .)
    FALSE           reduce using rule 106 (relational_operator -> LESSEQ .)
    TRUE            reduce using rule 106 (relational_operator -> LESSEQ .)
    CCONST          reduce using rule 106 (relational_operator -> LESSEQ .)
    NULL            reduce using rule 106 (relational_operator -> LESSEQ .)
    SCONST          reduce using rule 106 (relational_operator -> LESSEQ .)
    ABS             reduce using rule 106 (relational_operator -> LESSEQ .)
    ASC             reduce using rule 106 (relational_operator -> LESSEQ .)
    NUM             reduce using rule 106 (relational_operator -> LESSEQ .)
    UPPER           reduce using rule 106 (relational_operator -> LESSEQ .)
    LOWER           reduce using rule 106 (relational_operator -> LESSEQ .)
    LENGTH          reduce using rule 106 (relational_operator -> LESSEQ .)
    READ            reduce using rule 106 (relational_operator -> LESSEQ .)
    PRINT           reduce using rule 106 (relational_operator -> LESSEQ .)


state 141

    (96) operand0 -> operand0 operator1 . operand1
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    builtin_name                   shift and go to state 44
    value_array_element            shift and go to state 46
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_call                   shift and go to state 11
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    primitive_value                shift and go to state 57
    referenced_location            shift and go to state 78
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    array_location                 shift and go to state 28
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    array_slice                    shift and go to state 17
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 204
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    operand2                       shift and go to state 56
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 142

    (101) relational_operator -> EQUAL .

    MINUS           reduce using rule 101 (relational_operator -> EQUAL .)
    NOT             reduce using rule 101 (relational_operator -> EQUAL .)
    ARROW           reduce using rule 101 (relational_operator -> EQUAL .)
    ID              reduce using rule 101 (relational_operator -> EQUAL .)
    LPAREN          reduce using rule 101 (relational_operator -> EQUAL .)
    ICONST          reduce using rule 101 (relational_operator -> EQUAL .)
    FALSE           reduce using rule 101 (relational_operator -> EQUAL .)
    TRUE            reduce using rule 101 (relational_operator -> EQUAL .)
    CCONST          reduce using rule 101 (relational_operator -> EQUAL .)
    NULL            reduce using rule 101 (relational_operator -> EQUAL .)
    SCONST          reduce using rule 101 (relational_operator -> EQUAL .)
    ABS             reduce using rule 101 (relational_operator -> EQUAL .)
    ASC             reduce using rule 101 (relational_operator -> EQUAL .)
    NUM             reduce using rule 101 (relational_operator -> EQUAL .)
    UPPER           reduce using rule 101 (relational_operator -> EQUAL .)
    LOWER           reduce using rule 101 (relational_operator -> EQUAL .)
    LENGTH          reduce using rule 101 (relational_operator -> EQUAL .)
    READ            reduce using rule 101 (relational_operator -> EQUAL .)
    PRINT           reduce using rule 101 (relational_operator -> EQUAL .)


state 143

    (88) conditional_expression -> IF boolean_expression . then_expression else_expression FI
    (89) conditional_expression -> IF boolean_expression . then_expression elsif_expression else_expression FI
    (91) then_expression -> . THEN expression

    THEN            shift and go to state 206

    then_expression                shift and go to state 205

state 144

    (82) value_array_element -> array_primitive_value LBRACKET . integer_expression RBRACKET
    (83) value_array_slice -> array_primitive_value LBRACKET . lower_bound COLON upper_bound RBRACKET
    (55) integer_expression -> . expression
    (42) lower_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    dereferenced_reference         shift and go to state 22
    lower_bound                    shift and go to state 207
    operand4                       shift and go to state 65
    operand2                       shift and go to state 56
    call_action                    shift and go to state 50
    boolean_literal                shift and go to state 75
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 208
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    integer_expression             shift and go to state 209
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 145

    (16) identifier_list -> identifier_list COMMA . identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 210

state 146

    (35) integer_mode -> INT .

    LPAREN          reduce using rule 35 (integer_mode -> INT .)
    RPAREN          reduce using rule 35 (integer_mode -> INT .)
    LOC             reduce using rule 35 (integer_mode -> INT .)
    ASSIGN          reduce using rule 35 (integer_mode -> INT .)
    SEMI            reduce using rule 35 (integer_mode -> INT .)
    COMMA           reduce using rule 35 (integer_mode -> INT .)
    RBRACKET        reduce using rule 35 (integer_mode -> INT .)
    WHILE           reduce using rule 35 (integer_mode -> INT .)


state 147

    (28) mode -> discrete_mode .
    (39) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 28 (mode -> discrete_mode .)
    SEMI            reduce using rule 28 (mode -> discrete_mode .)
    COMMA           reduce using rule 28 (mode -> discrete_mode .)
    LOC             reduce using rule 28 (mode -> discrete_mode .)
    RPAREN          reduce using rule 28 (mode -> discrete_mode .)
    LPAREN          shift and go to state 211


state 148

    (45) composite_mode -> string_mode .

    ASSIGN          reduce using rule 45 (composite_mode -> string_mode .)
    SEMI            reduce using rule 45 (composite_mode -> string_mode .)
    COMMA           reduce using rule 45 (composite_mode -> string_mode .)
    LOC             reduce using rule 45 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 45 (composite_mode -> string_mode .)


state 149

    (37) character_mode -> CHAR .

    LPAREN          reduce using rule 37 (character_mode -> CHAR .)
    RBRACKET        reduce using rule 37 (character_mode -> CHAR .)
    COMMA           reduce using rule 37 (character_mode -> CHAR .)
    WHILE           reduce using rule 37 (character_mode -> CHAR .)
    SEMI            reduce using rule 37 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 37 (character_mode -> CHAR .)
    LOC             reduce using rule 37 (character_mode -> CHAR .)
    RPAREN          reduce using rule 37 (character_mode -> CHAR .)


state 150

    (34) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    SEMI            reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    WHILE           reduce using rule 34 (discrete_mode -> discrete_range_mode .)
    RBRACKET        reduce using rule 34 (discrete_mode -> discrete_range_mode .)


state 151

    (31) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 31 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 31 (discrete_mode -> integer_mode .)
    SEMI            reduce using rule 31 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 31 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 31 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 31 (discrete_mode -> integer_mode .)
    WHILE           reduce using rule 31 (discrete_mode -> integer_mode .)
    RBRACKET        reduce using rule 31 (discrete_mode -> integer_mode .)


state 152

    (44) reference_mode -> REF . mode
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    character_mode                 shift and go to state 165
    discrete_mode                  shift and go to state 147
    string_mode                    shift and go to state 148
    boolean_mode                   shift and go to state 158
    discrete_range_mode            shift and go to state 150
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 212
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 153

    (14) initialization -> ASSIGN . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 213
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 154

    (47) string_mode -> CHARS . LBRACKET string_length RBRACKET

    LBRACKET        shift and go to state 214


state 155

    (21) synonym_definition -> identifier_list initialization .

    SEMI            reduce using rule 21 (synonym_definition -> identifier_list initialization .)
    ID              reduce using rule 21 (synonym_definition -> identifier_list initialization .)


state 156

    (49) array_mode -> ARRAY . LBRACKET index_mode_list RBRACKET element_mode

    LBRACKET        shift and go to state 215


state 157

    (36) boolean_mode -> BOOL .

    LPAREN          reduce using rule 36 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 36 (boolean_mode -> BOOL .)
    SEMI            reduce using rule 36 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 36 (boolean_mode -> BOOL .)
    LOC             reduce using rule 36 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 36 (boolean_mode -> BOOL .)
    WHILE           reduce using rule 36 (boolean_mode -> BOOL .)
    RBRACKET        reduce using rule 36 (boolean_mode -> BOOL .)


state 158

    (32) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> boolean_mode .)
    SEMI            reduce using rule 32 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 32 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> boolean_mode .)
    WHILE           reduce using rule 32 (discrete_mode -> boolean_mode .)
    RBRACKET        reduce using rule 32 (discrete_mode -> boolean_mode .)


state 159

    (29) mode -> reference_mode .

    ASSIGN          reduce using rule 29 (mode -> reference_mode .)
    SEMI            reduce using rule 29 (mode -> reference_mode .)
    COMMA           reduce using rule 29 (mode -> reference_mode .)
    LOC             reduce using rule 29 (mode -> reference_mode .)
    RPAREN          reduce using rule 29 (mode -> reference_mode .)


state 160

    (22) synonym_definition -> identifier_list mode . initialization
    (14) initialization -> . ASSIGN expression

    ASSIGN          shift and go to state 153

    initialization                 shift and go to state 216

state 161

    (40) mode_name -> identifier .
    (38) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    SEMI            reduce using rule 40 (mode_name -> identifier .)
    COMMA           reduce using rule 40 (mode_name -> identifier .)
    LOC             reduce using rule 40 (mode_name -> identifier .)
    RPAREN          reduce using rule 40 (mode_name -> identifier .)
    ASSIGN          reduce using rule 40 (mode_name -> identifier .)
    LPAREN          shift and go to state 217


state 162

    (27) mode -> mode_name .

    ASSIGN          reduce using rule 27 (mode -> mode_name .)
    SEMI            reduce using rule 27 (mode -> mode_name .)
    COMMA           reduce using rule 27 (mode -> mode_name .)
    LOC             reduce using rule 27 (mode -> mode_name .)
    RPAREN          reduce using rule 27 (mode -> mode_name .)


state 163

    (30) mode -> composite_mode .

    ASSIGN          reduce using rule 30 (mode -> composite_mode .)
    SEMI            reduce using rule 30 (mode -> composite_mode .)
    COMMA           reduce using rule 30 (mode -> composite_mode .)
    LOC             reduce using rule 30 (mode -> composite_mode .)
    RPAREN          reduce using rule 30 (mode -> composite_mode .)


state 164

    (46) composite_mode -> array_mode .

    ASSIGN          reduce using rule 46 (composite_mode -> array_mode .)
    SEMI            reduce using rule 46 (composite_mode -> array_mode .)
    COMMA           reduce using rule 46 (composite_mode -> array_mode .)
    LOC             reduce using rule 46 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 46 (composite_mode -> array_mode .)


state 165

    (33) discrete_mode -> character_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> character_mode .)
    SEMI            reduce using rule 33 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> character_mode .)
    LOC             reduce using rule 33 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> character_mode .)
    WHILE           reduce using rule 33 (discrete_mode -> character_mode .)
    RBRACKET        reduce using rule 33 (discrete_mode -> character_mode .)


state 166

    (20) synonym_list -> synonym_list synonym_definition .

    SEMI            reduce using rule 20 (synonym_list -> synonym_list synonym_definition .)
    ID              reduce using rule 20 (synonym_list -> synonym_list synonym_definition .)


state 167

    (18) synonym_statement -> SYN synonym_list SEMI .

    END             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    DCL             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    SYN             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    TYPE            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ID              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    EXIT            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    RETURN          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    RESULT          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    IF              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    DO              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ABS             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ASC             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    NUM             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    UPPER           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    LOWER           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    LENGTH          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    READ            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    PRINT           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    $end            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)


state 168

    (23) newmode_statement -> TYPE newmode_list SEMI .

    DCL             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    SYN             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    TYPE            reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    ID              reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    EXIT            reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    RETURN          reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    RESULT          reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    IF              reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    DO              reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    ABS             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    ASC             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    NUM             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    UPPER           reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    LOWER           reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    LENGTH          reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    READ            reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    PRINT           reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    $end            reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)
    END             reduce using rule 23 (newmode_statement -> TYPE newmode_list SEMI .)


state 169

    (25) newmode_list -> newmode_list COMMA . mode_definition
    (26) mode_definition -> . identifier_list ASSIGN mode
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    mode_definition                shift and go to state 218
    identifier_list                shift and go to state 90
    identifier                     shift and go to state 82

state 170

    (26) mode_definition -> identifier_list ASSIGN . mode
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    string_mode                    shift and go to state 148
    discrete_mode                  shift and go to state 147
    discrete_range_mode            shift and go to state 150
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 219
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 171

    (11) declaration_list -> declaration_list COMMA . declaration
    (12) declaration -> . identifier_list mode
    (13) declaration -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    identifier_list                shift and go to state 93
    identifier                     shift and go to state 82
    declaration                    shift and go to state 220

state 172

    (9) declaration_statement -> DCL declaration_list SEMI .

    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    RETURN          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    RESULT          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    DO              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ABS             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ASC             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    NUM             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    UPPER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    LOWER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    LENGTH          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    READ            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    PRINT           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)


state 173

    (12) declaration -> identifier_list mode .
    (13) declaration -> identifier_list mode . initialization
    (14) initialization -> . ASSIGN expression

    SEMI            reduce using rule 12 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 12 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 153

    initialization                 shift and go to state 221

state 174

    (139) assignment_action -> location assigning_operator expression .

    SEMI            reduce using rule 139 (assignment_action -> location assigning_operator expression .)


state 175

    (159) do_action -> DO action_statement_list OD .

    SEMI            reduce using rule 159 (do_action -> DO action_statement_list OD .)


state 176

    (152) action_statement_list -> action_statement_list action_statement .

    EXIT            reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    RETURN          reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    RESULT          reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    ID              reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    DO              reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    ABS             reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    ASC             reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    NUM             reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    UPPER           reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    LOWER           reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    LENGTH          reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    READ            reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    PRINT           reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)
    OD              reduce using rule 152 (action_statement_list -> action_statement_list action_statement .)


state 177

    (169) loop_counter -> identifier .

    ASSIGN          reduce using rule 169 (loop_counter -> identifier .)
    IN              reduce using rule 169 (loop_counter -> identifier .)
    DOWN            reduce using rule 169 (loop_counter -> identifier .)


state 178

    (166) iteration -> range_enumeration .

    WHILE           reduce using rule 166 (iteration -> range_enumeration .)
    SEMI            reduce using rule 166 (iteration -> range_enumeration .)


state 179

    (165) iteration -> step_enumeration .

    WHILE           reduce using rule 165 (iteration -> step_enumeration .)
    SEMI            reduce using rule 165 (iteration -> step_enumeration .)


state 180

    (164) for_control -> iteration .

    WHILE           reduce using rule 164 (for_control -> iteration .)
    SEMI            reduce using rule 164 (for_control -> iteration .)


state 181

    (167) step_enumeration -> loop_counter . ASSIGN start_value end_value
    (168) step_enumeration -> loop_counter . ASSIGN start_value step_value end_value
    (175) range_enumeration -> loop_counter . IN discrete_mode
    (176) range_enumeration -> loop_counter . DOWN IN discrete_mode

    ASSIGN          shift and go to state 223
    IN              shift and go to state 222
    DOWN            shift and go to state 224


state 182

    (162) control_part -> FOR for_control .
    (163) control_part -> FOR for_control . while_control
    (177) while_control -> . WHILE boolean_expression

    SEMI            reduce using rule 162 (control_part -> FOR for_control .)
    WHILE           shift and go to state 111

    while_control                  shift and go to state 225

state 183

    (129) action_statement -> label_id COLON . action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ID              shift and go to state 24
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 192
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 79
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44

state 184

    (158) do_action -> DO control_part SEMI . OD
    (160) do_action -> DO control_part SEMI . action_statement_list OD
    (151) action_statement_list -> . action_statement
    (152) action_statement_list -> . action_statement_list action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    OD              shift and go to state 227
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    action_statement_list          shift and go to state 226
    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 110
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 185

    (177) while_control -> WHILE boolean_expression .

    SEMI            reduce using rule 177 (while_control -> WHILE boolean_expression .)


state 186

    (65) array_slice -> array_location LBRACKET lower_bound . COLON upper_bound RBRACKET

    COLON           shift and go to state 228


state 187

    (63) expression_list -> expression .
    (42) lower_bound -> expression .

    RBRACKET        reduce using rule 63 (expression_list -> expression .)
    COMMA           reduce using rule 63 (expression_list -> expression .)
    COLON           reduce using rule 42 (lower_bound -> expression .)


state 188

    (62) array_element -> array_location LBRACKET expression_list . RBRACKET
    (64) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 230
    COMMA           shift and go to state 229


state 189

    (147) if_action -> IF boolean_expression then_clause . FI
    (148) if_action -> IF boolean_expression then_clause . else_clause FI
    (153) else_clause -> . ELSE
    (154) else_clause -> . ELSE action_statement_list
    (155) else_clause -> . ELSIF boolean_expression then_clause
    (156) else_clause -> . ELSIF boolean_expression then_clause else_clause

    FI              shift and go to state 234
    ELSE            shift and go to state 232
    ELSIF           shift and go to state 233

    else_clause                    shift and go to state 231

state 190

    (149) then_clause -> THEN .
    (150) then_clause -> THEN . action_statement_list
    (151) action_statement_list -> . action_statement
    (152) action_statement_list -> . action_statement_list action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    ELSE            reduce using rule 149 (then_clause -> THEN .)
    ELSIF           reduce using rule 149 (then_clause -> THEN .)
    FI              reduce using rule 149 (then_clause -> THEN .)
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    action_statement_list          shift and go to state 235
    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 110
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 191

    (201) procedure_definition -> formal_procedure_head . END
    (202) procedure_definition -> formal_procedure_head . statement_list END
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (23) newmode_statement -> . TYPE newmode_list SEMI
    (200) procedure_statement -> . label_id COLON procedure_definition SEMI
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (130) label_id -> . identifier
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (17) identifier -> . ID
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    END             shift and go to state 237
    DCL             shift and go to state 19
    SYN             shift and go to state 8
    TYPE            shift and go to state 18
    ID              shift and go to state 24
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    synonym_statement              shift and go to state 2
    dereferenced_reference         shift and go to state 22
    procedure_statement            shift and go to state 30
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    procedure_call                 shift and go to state 4
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    array_element                  shift and go to state 20
    declaration_statement          shift and go to state 34
    statement_list                 shift and go to state 236
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 36
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    statement                      shift and go to state 12
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    newmode_statement              shift and go to state 25
    label_id                       shift and go to state 40

state 192

    (129) action_statement -> label_id COLON action . SEMI

    SEMI            shift and go to state 238


state 193

    (203) formal_procedure_head -> PROC . parenthesis_gambiarra SEMI
    (204) formal_procedure_head -> PROC . parenthesis_gambiarra result_spec SEMI
    (205) parenthesis_gambiarra -> . LPAREN RPAREN
    (206) parenthesis_gambiarra -> . LPAREN formal_parameter_list RPAREN

    LPAREN          shift and go to state 240

    parenthesis_gambiarra          shift and go to state 239

state 194

    (200) procedure_statement -> label_id COLON procedure_definition . SEMI

    SEMI            shift and go to state 241


state 195

    (181) procedure_call -> identifier LPAREN parameter_list . RPAREN
    (183) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 242
    COMMA           shift and go to state 243


state 196

    (184) parameter -> expression .

    RPAREN          reduce using rule 184 (parameter -> expression .)
    COMMA           reduce using rule 184 (parameter -> expression .)


state 197

    (180) procedure_call -> identifier LPAREN RPAREN .

    SEMI            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    ARROW           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    ASSIGN          reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    INCREASE        reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    DECREASE        reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    MULCREASE       reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    DIVCREASE       reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    MODCREASE       reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    LBRACKET        reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    TIMES           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    MOD             reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    PLUS            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    MINUS           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    STRCAT          reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    AND             reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    OR              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    EQUAL           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    DIFF            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    GREATER         reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    GREATEREQ       reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    LESS            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    LESSEQ          reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    IN              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    COLON           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    COMMA           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    THEN            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    WHILE           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    TO              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    DOWN            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    BY              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    ID              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    ELSE            reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    ELSIF           reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)
    FI              reduce using rule 180 (procedure_call -> identifier LPAREN RPAREN .)


state 198

    (182) parameter_list -> parameter .

    RPAREN          reduce using rule 182 (parameter_list -> parameter .)
    COMMA           reduce using rule 182 (parameter_list -> parameter .)


state 199

    (191) builtin_call -> builtin_name LPAREN parameter_list . RPAREN
    (183) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 244
    COMMA           shift and go to state 243


state 200

    (190) builtin_call -> builtin_name LPAREN RPAREN .

    ARROW           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMES           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    MOD             reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUS            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUS           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    STRCAT          reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    AND             reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    OR              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    EQUAL           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIFF            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    GREATER         reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    GREATEREQ       reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    LESS            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    LESSEQ          reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    IN              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    RPAREN          reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    COMMA           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    LBRACKET        reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSE            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSIF           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    SEMI            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    THEN            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    INCREASE        reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    DECREASE        reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    MULCREASE       reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVCREASE       reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    MODCREASE       reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    RBRACKET        reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    COLON           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    ID              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    TO              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    DOWN            reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    BY              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    FI              reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)
    WHILE           reduce using rule 190 (builtin_call -> builtin_name LPAREN RPAREN .)


state 201

    (116) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MOD             reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    STRCAT          reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUAL           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIFF            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GREATER         reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GREATEREQ       reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LESS            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LESSEQ          reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACKET        reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMI            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ID              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSE            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSIF           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    TO              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DOWN            reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    BY              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    FI              reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    WHILE           reduce using rule 116 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 202

    (85) parenthesized_expression -> LPAREN expression RPAREN .

    TIMES           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    STRCAT          reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIFF            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    DOWN            reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    BY              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 85 (parenthesized_expression -> LPAREN expression RPAREN .)


state 203

    (109) operand1 -> operand1 operator2 operand2 .
    (116) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (117) arithmetic_multiplicative_operator -> . TIMES
    (118) arithmetic_multiplicative_operator -> . DIVIDE
    (119) arithmetic_multiplicative_operator -> . MOD

    PLUS            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    STRCAT          reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    EQUAL           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    DIFF            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    GREATER         reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    GREATEREQ       reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    LESS            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    LESSEQ          reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    SEMI            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    WHILE           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    TO              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    DOWN            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    ELSE            reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    ELSIF           reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    BY              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    RBRACKET        reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    ID              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    FI              reduce using rule 109 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 122
    DIVIDE          shift and go to state 121
    MOD             shift and go to state 120

    arithmetic_multiplicative_operator shift and go to state 119

state 204

    (96) operand0 -> operand0 operator1 operand1 .
    (109) operand1 -> operand1 . operator2 operand2
    (110) operator2 -> . arithmetic_additive_operator
    (111) operator2 -> . string_concatenation_operator
    (112) arithmetic_additive_operator -> . PLUS
    (113) arithmetic_additive_operator -> . MINUS
    (114) string_concatenation_operator -> . STRCAT

    AND             reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    EQUAL           reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    DIFF            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    GREATER         reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    GREATEREQ       reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    LESS            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    LESSEQ          reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    RBRACKET        reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    SEMI            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    WHILE           reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    ELSE            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    ELSIF           reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    TO              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    DOWN            reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    BY              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    FI              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    ID              reduce using rule 96 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    STRCAT          shift and go to state 130

    string_concatenation_operator  shift and go to state 125
    operator2                      shift and go to state 128
    arithmetic_additive_operator   shift and go to state 129

state 205

    (88) conditional_expression -> IF boolean_expression then_expression . else_expression FI
    (89) conditional_expression -> IF boolean_expression then_expression . elsif_expression else_expression FI
    (92) else_expression -> . ELSE expression
    (93) elsif_expression -> . ELSIF boolean_expression then_expression
    (94) elsif_expression -> . elsif_expression ELSIF boolean_expression then_expression

    ELSE            shift and go to state 245
    ELSIF           shift and go to state 247

    else_expression                shift and go to state 248
    elsif_expression               shift and go to state 246

state 206

    (91) then_expression -> THEN . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 249
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 207

    (83) value_array_slice -> array_primitive_value LBRACKET lower_bound . COLON upper_bound RBRACKET

    COLON           shift and go to state 250


state 208

    (55) integer_expression -> expression .
    (42) lower_bound -> expression .

    RBRACKET        reduce using rule 55 (integer_expression -> expression .)
    COLON           reduce using rule 42 (lower_bound -> expression .)


state 209

    (82) value_array_element -> array_primitive_value LBRACKET integer_expression . RBRACKET

    RBRACKET        shift and go to state 251


state 210

    (16) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)


state 211

    (39) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (41) literal_range -> . lower_bound COLON upper_bound
    (42) lower_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    literal_range                  shift and go to state 252
    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    lower_bound                    shift and go to state 253
    call_action                    shift and go to state 50
    builtin_call                   shift and go to state 11
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 254
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    procedure_call                 shift and go to state 4
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 79
    integer_literal                shift and go to state 73
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    boolean_literal                shift and go to state 75
    referenced_location            shift and go to state 78
    value_array_slice              shift and go to state 52

state 212

    (44) reference_mode -> REF mode .

    ASSIGN          reduce using rule 44 (reference_mode -> REF mode .)
    SEMI            reduce using rule 44 (reference_mode -> REF mode .)
    COMMA           reduce using rule 44 (reference_mode -> REF mode .)
    LOC             reduce using rule 44 (reference_mode -> REF mode .)
    RPAREN          reduce using rule 44 (reference_mode -> REF mode .)


state 213

    (14) initialization -> ASSIGN expression .

    SEMI            reduce using rule 14 (initialization -> ASSIGN expression .)
    ID              reduce using rule 14 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 14 (initialization -> ASSIGN expression .)


state 214

    (47) string_mode -> CHARS LBRACKET . string_length RBRACKET
    (48) string_length -> . integer_literal
    (76) integer_literal -> . ICONST

    ICONST          shift and go to state 53

    integer_literal                shift and go to state 255
    string_length                  shift and go to state 256

state 215

    (49) array_mode -> ARRAY LBRACKET . index_mode_list RBRACKET element_mode
    (50) index_mode_list -> . index_mode
    (51) index_mode_list -> . index_mode_list COMMA index_mode
    (52) index_mode -> . discrete_mode
    (53) index_mode -> . literal_range
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (41) literal_range -> . lower_bound COLON upper_bound
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (42) lower_bound -> . expression
    (17) identifier -> . ID
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    ID              shift and go to state 24
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    literal_range                  shift and go to state 257
    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    lower_bound                    shift and go to state 253
    call_action                    shift and go to state 50
    builtin_call                   shift and go to state 11
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 254
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    index_mode                     shift and go to state 258
    procedure_call                 shift and go to state 4
    array_primitive_value          shift and go to state 76
    discrete_mode                  shift and go to state 259
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    discrete_range_mode            shift and go to state 150
    integer_mode                   shift and go to state 151
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    index_mode_list                shift and go to state 260
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 261
    integer_literal                shift and go to state 73
    boolean_literal                shift and go to state 75
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    operand3                       shift and go to state 77
    referenced_location            shift and go to state 78
    value_array_slice              shift and go to state 52

state 216

    (22) synonym_definition -> identifier_list mode initialization .

    SEMI            reduce using rule 22 (synonym_definition -> identifier_list mode initialization .)
    ID              reduce using rule 22 (synonym_definition -> identifier_list mode initialization .)


state 217

    (38) discrete_range_mode -> identifier LPAREN . literal_range RPAREN
    (41) literal_range -> . lower_bound COLON upper_bound
    (42) lower_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    literal_range                  shift and go to state 262
    array_slice                    shift and go to state 17
    operand4                       shift and go to state 65
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    dereferenced_reference         shift and go to state 22
    lower_bound                    shift and go to state 253
    identifier                     shift and go to state 79
    call_action                    shift and go to state 50
    value_array_element            shift and go to state 46
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 254
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    array_location                 shift and go to state 28
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    builtin_call                   shift and go to state 11

state 218

    (25) newmode_list -> newmode_list COMMA mode_definition .

    SEMI            reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> newmode_list COMMA mode_definition .)


state 219

    (26) mode_definition -> identifier_list ASSIGN mode .

    SEMI            reduce using rule 26 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 26 (mode_definition -> identifier_list ASSIGN mode .)


state 220

    (11) declaration_list -> declaration_list COMMA declaration .

    SEMI            reduce using rule 11 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 11 (declaration_list -> declaration_list COMMA declaration .)


state 221

    (13) declaration -> identifier_list mode initialization .

    SEMI            reduce using rule 13 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 13 (declaration -> identifier_list mode initialization .)


state 222

    (175) range_enumeration -> loop_counter IN . discrete_mode
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (17) identifier -> . ID

    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    ID              shift and go to state 24

    integer_mode                   shift and go to state 151
    identifier                     shift and go to state 264
    discrete_mode                  shift and go to state 263
    character_mode                 shift and go to state 165
    boolean_mode                   shift and go to state 158
    discrete_range_mode            shift and go to state 150

state 223

    (167) step_enumeration -> loop_counter ASSIGN . start_value end_value
    (168) step_enumeration -> loop_counter ASSIGN . start_value step_value end_value
    (170) start_value -> . discrete_expression
    (174) discrete_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 265
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    procedure_call                 shift and go to state 4
    array_primitive_value          shift and go to state 76
    operand0                       shift and go to state 64
    start_value                    shift and go to state 266
    operand4                       shift and go to state 65
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 79
    discrete_expression            shift and go to state 267
    integer_literal                shift and go to state 73
    boolean_literal                shift and go to state 75
    operand3                       shift and go to state 77
    referenced_location            shift and go to state 78
    builtin_call                   shift and go to state 11

state 224

    (176) range_enumeration -> loop_counter DOWN . IN discrete_mode

    IN              shift and go to state 268


state 225

    (163) control_part -> FOR for_control while_control .

    SEMI            reduce using rule 163 (control_part -> FOR for_control while_control .)


state 226

    (160) do_action -> DO control_part SEMI action_statement_list . OD
    (152) action_statement_list -> action_statement_list . action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    OD              shift and go to state 269
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 176
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 227

    (158) do_action -> DO control_part SEMI OD .

    SEMI            reduce using rule 158 (do_action -> DO control_part SEMI OD .)


state 228

    (65) array_slice -> array_location LBRACKET lower_bound COLON . upper_bound RBRACKET
    (43) upper_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    upper_bound                    shift and go to state 271
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 270
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    array_location                 shift and go to state 28
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 229

    (64) expression_list -> expression_list COMMA . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    parenthesized_expression       shift and go to state 48
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 272
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 230

    (62) array_element -> array_location LBRACKET expression_list RBRACKET .

    ARROW           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ASSIGN          reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    INCREASE        reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DECREASE        reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MULCREASE       reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIVCREASE       reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MODCREASE       reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LBRACKET        reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    STRCAT          reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    EQUAL           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIFF            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    GREATER         reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    GREATEREQ       reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LESS            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LESSEQ          reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    IN              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    SEMI            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ID              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ELSIF           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    TO              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DOWN            reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    BY              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    FI              reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    WHILE           reduce using rule 62 (array_element -> array_location LBRACKET expression_list RBRACKET .)


state 231

    (148) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 273


state 232

    (153) else_clause -> ELSE .
    (154) else_clause -> ELSE . action_statement_list
    (151) action_statement_list -> . action_statement
    (152) action_statement_list -> . action_statement_list action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    FI              reduce using rule 153 (else_clause -> ELSE .)
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    action_statement_list          shift and go to state 274
    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 110
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 233

    (155) else_clause -> ELSIF . boolean_expression then_clause
    (156) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    procedure_call                 shift and go to state 4
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 79
    integer_literal                shift and go to state 73
    boolean_expression             shift and go to state 275
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    boolean_literal                shift and go to state 75
    referenced_location            shift and go to state 78
    builtin_call                   shift and go to state 11

state 234

    (147) if_action -> IF boolean_expression then_clause FI .

    SEMI            reduce using rule 147 (if_action -> IF boolean_expression then_clause FI .)


state 235

    (150) then_clause -> THEN action_statement_list .
    (152) action_statement_list -> action_statement_list . action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    ELSE            reduce using rule 150 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 150 (then_clause -> THEN action_statement_list .)
    FI              reduce using rule 150 (then_clause -> THEN action_statement_list .)
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 176
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 236

    (202) procedure_definition -> formal_procedure_head statement_list . END
    (3) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (23) newmode_statement -> . TYPE newmode_list SEMI
    (200) procedure_statement -> . label_id COLON procedure_definition SEMI
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (130) label_id -> . identifier
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (17) identifier -> . ID
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    END             shift and go to state 276
    DCL             shift and go to state 19
    SYN             shift and go to state 8
    TYPE            shift and go to state 18
    ID              shift and go to state 24
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    synonym_statement              shift and go to state 2
    dereferenced_reference         shift and go to state 22
    procedure_statement            shift and go to state 30
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    procedure_call                 shift and go to state 4
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    array_element                  shift and go to state 20
    declaration_statement          shift and go to state 34
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 36
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    statement                      shift and go to state 86
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    newmode_statement              shift and go to state 25
    label_id                       shift and go to state 40

state 237

    (201) procedure_definition -> formal_procedure_head END .

    SEMI            reduce using rule 201 (procedure_definition -> formal_procedure_head END .)


state 238

    (129) action_statement -> label_id COLON action SEMI .

    OD              reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    EXIT            reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    RETURN          reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    RESULT          reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    ID              reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    IF              reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    DO              reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    ABS             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    ASC             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    NUM             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    UPPER           reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    LOWER           reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    LENGTH          reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    READ            reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    PRINT           reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    FI              reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    ELSE            reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    ELSIF           reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    END             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    DCL             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    SYN             reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    TYPE            reduce using rule 129 (action_statement -> label_id COLON action SEMI .)
    $end            reduce using rule 129 (action_statement -> label_id COLON action SEMI .)


state 239

    (203) formal_procedure_head -> PROC parenthesis_gambiarra . SEMI
    (204) formal_procedure_head -> PROC parenthesis_gambiarra . result_spec SEMI
    (212) result_spec -> . RETURNS LPAREN mode RPAREN
    (213) result_spec -> . RETURNS LPAREN mode LOC RPAREN

    SEMI            shift and go to state 279
    RETURNS         shift and go to state 277

    result_spec                    shift and go to state 278

state 240

    (205) parenthesis_gambiarra -> LPAREN . RPAREN
    (206) parenthesis_gambiarra -> LPAREN . formal_parameter_list RPAREN
    (207) formal_parameter_list -> . formal_parameter
    (208) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (209) formal_parameter -> . identifier_list parameter_spec
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    RPAREN          shift and go to state 280
    ID              shift and go to state 24

    identifier                     shift and go to state 82
    formal_parameter               shift and go to state 281
    identifier_list                shift and go to state 282
    formal_parameter_list          shift and go to state 283

state 241

    (200) procedure_statement -> label_id COLON procedure_definition SEMI .

    DCL             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    SYN             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    TYPE            reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ID              reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    EXIT            reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    RETURN          reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    RESULT          reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    IF              reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    DO              reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ABS             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ASC             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    NUM             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    UPPER           reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    LOWER           reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    LENGTH          reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    READ            reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    PRINT           reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    $end            reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    END             reduce using rule 200 (procedure_statement -> label_id COLON procedure_definition SEMI .)


state 242

    (181) procedure_call -> identifier LPAREN parameter_list RPAREN .

    SEMI            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ARROW           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    INCREASE        reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DECREASE        reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MULCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIVCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MODCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LBRACKET        reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MOD             reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    STRCAT          reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    AND             reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    OR              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    EQUAL           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIFF            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    GREATER         reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    GREATEREQ       reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LESS            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LESSEQ          reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    IN              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    RBRACKET        reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    TO              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    BY              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ID              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    FI              reduce using rule 181 (procedure_call -> identifier LPAREN parameter_list RPAREN .)


state 243

    (183) parameter_list -> parameter_list COMMA . parameter
    (184) parameter -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 196
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parameter                      shift and go to state 284
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    builtin_name                   shift and go to state 44
    identifier                     shift and go to state 79

state 244

    (191) builtin_call -> builtin_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MOD             reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    STRCAT          reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    EQUAL           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIFF            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GREATER         reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GREATEREQ       reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LESS            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LESSEQ          reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LBRACKET        reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    SEMI            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    INCREASE        reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DECREASE        reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MULCREASE       reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVCREASE       reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MODCREASE       reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RBRACKET        reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ID              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 191 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)


state 245

    (92) else_expression -> ELSE . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 285
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 246

    (89) conditional_expression -> IF boolean_expression then_expression elsif_expression . else_expression FI
    (94) elsif_expression -> elsif_expression . ELSIF boolean_expression then_expression
    (92) else_expression -> . ELSE expression

    ELSIF           shift and go to state 286
    ELSE            shift and go to state 245

    else_expression                shift and go to state 287

state 247

    (93) elsif_expression -> ELSIF . boolean_expression then_expression
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    boolean_expression             shift and go to state 288
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 248

    (88) conditional_expression -> IF boolean_expression then_expression else_expression . FI

    FI              shift and go to state 289


state 249

    (91) then_expression -> THEN expression .

    ELSE            reduce using rule 91 (then_expression -> THEN expression .)
    ELSIF           reduce using rule 91 (then_expression -> THEN expression .)


state 250

    (83) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON . upper_bound RBRACKET
    (43) upper_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    upper_bound                    shift and go to state 290
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    operand2                       shift and go to state 56
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 270
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 251

    (82) value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .

    TIMES           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DIVIDE          reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    MOD             reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    PLUS            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    MINUS           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    STRCAT          reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    AND             reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    OR              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    EQUAL           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DIFF            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    GREATER         reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    GREATEREQ       reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LESS            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LESSEQ          reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    IN              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    RPAREN          reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    COMMA           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LBRACKET        reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    RBRACKET        reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    COLON           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ELSE            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ELSIF           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    THEN            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    TO              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DOWN            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    SEMI            reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ID              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    BY              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    FI              reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    WHILE           reduce using rule 82 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)


state 252

    (39) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 291


state 253

    (41) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 292


state 254

    (42) lower_bound -> expression .

    COLON           reduce using rule 42 (lower_bound -> expression .)


state 255

    (48) string_length -> integer_literal .

    RBRACKET        reduce using rule 48 (string_length -> integer_literal .)


state 256

    (47) string_mode -> CHARS LBRACKET string_length . RBRACKET

    RBRACKET        shift and go to state 293


state 257

    (53) index_mode -> literal_range .

    RBRACKET        reduce using rule 53 (index_mode -> literal_range .)
    COMMA           reduce using rule 53 (index_mode -> literal_range .)


state 258

    (50) index_mode_list -> index_mode .

    RBRACKET        reduce using rule 50 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 50 (index_mode_list -> index_mode .)


state 259

    (52) index_mode -> discrete_mode .
    (39) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACKET        reduce using rule 52 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 52 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 211


state 260

    (49) array_mode -> ARRAY LBRACKET index_mode_list . RBRACKET element_mode
    (51) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACKET        shift and go to state 295
    COMMA           shift and go to state 294


state 261

    (38) discrete_range_mode -> identifier . LPAREN literal_range RPAREN
    (56) location -> identifier .
    (180) procedure_call -> identifier . LPAREN RPAREN
    (181) procedure_call -> identifier . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 296
    ARROW           reduce using rule 56 (location -> identifier .)
    TIMES           reduce using rule 56 (location -> identifier .)
    DIVIDE          reduce using rule 56 (location -> identifier .)
    MOD             reduce using rule 56 (location -> identifier .)
    PLUS            reduce using rule 56 (location -> identifier .)
    MINUS           reduce using rule 56 (location -> identifier .)
    STRCAT          reduce using rule 56 (location -> identifier .)
    AND             reduce using rule 56 (location -> identifier .)
    OR              reduce using rule 56 (location -> identifier .)
    EQUAL           reduce using rule 56 (location -> identifier .)
    DIFF            reduce using rule 56 (location -> identifier .)
    GREATER         reduce using rule 56 (location -> identifier .)
    GREATEREQ       reduce using rule 56 (location -> identifier .)
    LESS            reduce using rule 56 (location -> identifier .)
    LESSEQ          reduce using rule 56 (location -> identifier .)
    IN              reduce using rule 56 (location -> identifier .)
    COLON           reduce using rule 56 (location -> identifier .)
    LBRACKET        reduce using rule 56 (location -> identifier .)


state 262

    (38) discrete_range_mode -> identifier LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 297


state 263

    (175) range_enumeration -> loop_counter IN discrete_mode .
    (39) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 175 (range_enumeration -> loop_counter IN discrete_mode .)
    SEMI            reduce using rule 175 (range_enumeration -> loop_counter IN discrete_mode .)
    LPAREN          shift and go to state 211


state 264

    (38) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 217


state 265

    (174) discrete_expression -> expression .

    TO              reduce using rule 174 (discrete_expression -> expression .)
    DOWN            reduce using rule 174 (discrete_expression -> expression .)
    BY              reduce using rule 174 (discrete_expression -> expression .)
    WHILE           reduce using rule 174 (discrete_expression -> expression .)
    SEMI            reduce using rule 174 (discrete_expression -> expression .)


state 266

    (167) step_enumeration -> loop_counter ASSIGN start_value . end_value
    (168) step_enumeration -> loop_counter ASSIGN start_value . step_value end_value
    (172) end_value -> . TO discrete_expression
    (173) end_value -> . DOWN TO discrete_expression
    (171) step_value -> . BY integer_expression

    TO              shift and go to state 300
    DOWN            shift and go to state 302
    BY              shift and go to state 299

    end_value                      shift and go to state 298
    step_value                     shift and go to state 301

state 267

    (170) start_value -> discrete_expression .

    TO              reduce using rule 170 (start_value -> discrete_expression .)
    DOWN            reduce using rule 170 (start_value -> discrete_expression .)
    BY              reduce using rule 170 (start_value -> discrete_expression .)


state 268

    (176) range_enumeration -> loop_counter DOWN IN . discrete_mode
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (17) identifier -> . ID

    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    ID              shift and go to state 24

    integer_mode                   shift and go to state 151
    identifier                     shift and go to state 264
    discrete_mode                  shift and go to state 303
    character_mode                 shift and go to state 165
    boolean_mode                   shift and go to state 158
    discrete_range_mode            shift and go to state 150

state 269

    (160) do_action -> DO control_part SEMI action_statement_list OD .

    SEMI            reduce using rule 160 (do_action -> DO control_part SEMI action_statement_list OD .)


state 270

    (43) upper_bound -> expression .

    RBRACKET        reduce using rule 43 (upper_bound -> expression .)
    RPAREN          reduce using rule 43 (upper_bound -> expression .)
    COMMA           reduce using rule 43 (upper_bound -> expression .)


state 271

    (65) array_slice -> array_location LBRACKET lower_bound COLON upper_bound . RBRACKET

    RBRACKET        shift and go to state 304


state 272

    (64) expression_list -> expression_list COMMA expression .

    RBRACKET        reduce using rule 64 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 64 (expression_list -> expression_list COMMA expression .)


state 273

    (148) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMI            reduce using rule 148 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 274

    (154) else_clause -> ELSE action_statement_list .
    (152) action_statement_list -> action_statement_list . action_statement
    (128) action_statement -> . action SEMI
    (129) action_statement -> . label_id COLON action SEMI
    (131) action -> . bracketed_action
    (132) action -> . assignment_action
    (133) action -> . call_action
    (134) action -> . exit_action
    (135) action -> . return_action
    (136) action -> . result_action
    (130) label_id -> . identifier
    (137) bracketed_action -> . if_action
    (138) bracketed_action -> . do_action
    (139) assignment_action -> . location assigning_operator expression
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (185) exit_action -> . EXIT label_id
    (186) return_action -> . RETURN
    (187) return_action -> . RETURN result
    (188) result_action -> . RESULT result
    (17) identifier -> . ID
    (147) if_action -> . IF boolean_expression then_clause FI
    (148) if_action -> . IF boolean_expression then_clause else_clause FI
    (157) do_action -> . DO OD
    (158) do_action -> . DO control_part SEMI OD
    (159) do_action -> . DO action_statement_list OD
    (160) do_action -> . DO control_part SEMI action_statement_list OD
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT
    (66) array_location -> . location

    FI              reduce using rule 154 (else_clause -> ELSE action_statement_list .)
    EXIT            shift and go to state 13
    RETURN          shift and go to state 16
    RESULT          shift and go to state 5
    ID              shift and go to state 24
    IF              shift and go to state 35
    DO              shift and go to state 26
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    dereferenced_reference         shift and go to state 22
    procedure_call                 shift and go to state 4
    result_action                  shift and go to state 31
    return_action                  shift and go to state 32
    call_action                    shift and go to state 6
    bracketed_action               shift and go to state 1
    builtin_call                   shift and go to state 11
    do_action                      shift and go to state 41
    action                         shift and go to state 15
    action_statement               shift and go to state 176
    exit_action                    shift and go to state 37
    assignment_action              shift and go to state 38
    array_slice                    shift and go to state 17
    array_location                 shift and go to state 28
    if_action                      shift and go to state 10
    array_element                  shift and go to state 20
    identifier                     shift and go to state 42
    location                       shift and go to state 23
    builtin_name                   shift and go to state 44
    label_id                       shift and go to state 108

state 275

    (155) else_clause -> ELSIF boolean_expression . then_clause
    (156) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (149) then_clause -> . THEN
    (150) then_clause -> . THEN action_statement_list

    THEN            shift and go to state 190

    then_clause                    shift and go to state 305

state 276

    (202) procedure_definition -> formal_procedure_head statement_list END .

    SEMI            reduce using rule 202 (procedure_definition -> formal_procedure_head statement_list END .)


state 277

    (212) result_spec -> RETURNS . LPAREN mode RPAREN
    (213) result_spec -> RETURNS . LPAREN mode LOC RPAREN

    LPAREN          shift and go to state 306


state 278

    (204) formal_procedure_head -> PROC parenthesis_gambiarra result_spec . SEMI

    SEMI            shift and go to state 307


state 279

    (203) formal_procedure_head -> PROC parenthesis_gambiarra SEMI .

    END             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    DCL             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    SYN             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    TYPE            reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ID              reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    EXIT            reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    RETURN          reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    RESULT          reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    IF              reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    DO              reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ABS             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ASC             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    NUM             reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    UPPER           reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    LOWER           reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    LENGTH          reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    READ            reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    PRINT           reduce using rule 203 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)


state 280

    (205) parenthesis_gambiarra -> LPAREN RPAREN .

    SEMI            reduce using rule 205 (parenthesis_gambiarra -> LPAREN RPAREN .)
    RETURNS         reduce using rule 205 (parenthesis_gambiarra -> LPAREN RPAREN .)


state 281

    (207) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 207 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 207 (formal_parameter_list -> formal_parameter .)


state 282

    (209) formal_parameter -> identifier_list . parameter_spec
    (16) identifier_list -> identifier_list . COMMA identifier
    (210) parameter_spec -> . mode
    (211) parameter_spec -> . mode LOC
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    COMMA           shift and go to state 145
    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    string_mode                    shift and go to state 148
    discrete_mode                  shift and go to state 147
    parameter_spec                 shift and go to state 308
    discrete_range_mode            shift and go to state 150
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 309
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 283

    (206) parenthesis_gambiarra -> LPAREN formal_parameter_list . RPAREN
    (208) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 310
    COMMA           shift and go to state 311


state 284

    (183) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 183 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 183 (parameter_list -> parameter_list COMMA parameter .)


state 285

    (92) else_expression -> ELSE expression .

    FI              reduce using rule 92 (else_expression -> ELSE expression .)


state 286

    (94) elsif_expression -> elsif_expression ELSIF . boolean_expression then_expression
    (90) boolean_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 114
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    boolean_expression             shift and go to state 312
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 287

    (89) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression . FI

    FI              shift and go to state 313


state 288

    (93) elsif_expression -> ELSIF boolean_expression . then_expression
    (91) then_expression -> . THEN expression

    THEN            shift and go to state 206

    then_expression                shift and go to state 314

state 289

    (88) conditional_expression -> IF boolean_expression then_expression else_expression FI .

    THEN            reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    SEMI            reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RPAREN          reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COMMA           reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ID              reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    TO              reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    DOWN            reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    BY              reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COLON           reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RBRACKET        reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSE            reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSIF           reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    WHILE           reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    FI              reduce using rule 88 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)


state 290

    (83) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound . RBRACKET

    RBRACKET        shift and go to state 315


state 291

    (39) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMI            reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACKET        reduce using rule 39 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 292

    (41) literal_range -> lower_bound COLON . upper_bound
    (43) upper_bound -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    upper_bound                    shift and go to state 316
    dereferenced_reference         shift and go to state 22
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 270
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 293

    (47) string_mode -> CHARS LBRACKET string_length RBRACKET .

    ASSIGN          reduce using rule 47 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    SEMI            reduce using rule 47 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    COMMA           reduce using rule 47 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    LOC             reduce using rule 47 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    RPAREN          reduce using rule 47 (string_mode -> CHARS LBRACKET string_length RBRACKET .)


state 294

    (51) index_mode_list -> index_mode_list COMMA . index_mode
    (52) index_mode -> . discrete_mode
    (53) index_mode -> . literal_range
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (41) literal_range -> . lower_bound COLON upper_bound
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (42) lower_bound -> . expression
    (17) identifier -> . ID
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    ID              shift and go to state 24
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    literal_range                  shift and go to state 257
    value_array_element            shift and go to state 46
    parenthesized_expression       shift and go to state 48
    lower_bound                    shift and go to state 253
    call_action                    shift and go to state 50
    builtin_call                   shift and go to state 11
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 254
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    index_mode                     shift and go to state 317
    procedure_call                 shift and go to state 4
    array_primitive_value          shift and go to state 76
    discrete_mode                  shift and go to state 259
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    discrete_range_mode            shift and go to state 150
    integer_mode                   shift and go to state 151
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    identifier                     shift and go to state 261
    integer_literal                shift and go to state 73
    boolean_literal                shift and go to state 75
    boolean_mode                   shift and go to state 158
    character_mode                 shift and go to state 165
    operand3                       shift and go to state 77
    referenced_location            shift and go to state 78
    value_array_slice              shift and go to state 52

state 295

    (49) array_mode -> ARRAY LBRACKET index_mode_list RBRACKET . element_mode
    (54) element_mode -> . mode
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    element_mode                   shift and go to state 318
    discrete_mode                  shift and go to state 147
    discrete_range_mode            shift and go to state 150
    boolean_mode                   shift and go to state 158
    reference_mode                 shift and go to state 159
    string_mode                    shift and go to state 148
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 319
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    character_mode                 shift and go to state 165
    identifier                     shift and go to state 161

state 296

    (38) discrete_range_mode -> identifier LPAREN . literal_range RPAREN
    (180) procedure_call -> identifier LPAREN . RPAREN
    (181) procedure_call -> identifier LPAREN . parameter_list RPAREN
    (41) literal_range -> . lower_bound COLON upper_bound
    (182) parameter_list -> . parameter
    (183) parameter_list -> . parameter_list COMMA parameter
    (42) lower_bound -> . expression
    (184) parameter -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    RPAREN          shift and go to state 197
    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    literal_range                  shift and go to state 262
    value_array_element            shift and go to state 46
    builtin_call                   shift and go to state 11
    parameter_list                 shift and go to state 195
    parenthesized_expression       shift and go to state 48
    lower_bound                    shift and go to state 253
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 320
    operand2                       shift and go to state 56
    primitive_value                shift and go to state 57
    parameter                      shift and go to state 198
    array_slice                    shift and go to state 17
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    array_location                 shift and go to state 28
    operand0                       shift and go to state 64
    operand4                       shift and go to state 65
    procedure_call                 shift and go to state 4
    character_literal              shift and go to state 67
    builtin_name                   shift and go to state 44
    conditional_expression         shift and go to state 69
    empty_literal                  shift and go to state 70
    literal                        shift and go to state 71
    array_primitive_value          shift and go to state 76
    operand3                       shift and go to state 77
    identifier                     shift and go to state 79
    boolean_literal                shift and go to state 75
    referenced_location            shift and go to state 78
    integer_literal                shift and go to state 73

state 297

    (38) discrete_range_mode -> identifier LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    SEMI            reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    LOC             reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RBRACKET        reduce using rule 38 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)


state 298

    (167) step_enumeration -> loop_counter ASSIGN start_value end_value .

    WHILE           reduce using rule 167 (step_enumeration -> loop_counter ASSIGN start_value end_value .)
    SEMI            reduce using rule 167 (step_enumeration -> loop_counter ASSIGN start_value end_value .)


state 299

    (171) step_value -> BY . integer_expression
    (55) integer_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    boolean_literal                shift and go to state 75
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 321
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    integer_expression             shift and go to state 322
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 300

    (172) end_value -> TO . discrete_expression
    (174) discrete_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 265
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    discrete_expression            shift and go to state 323
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 301

    (168) step_enumeration -> loop_counter ASSIGN start_value step_value . end_value
    (172) end_value -> . TO discrete_expression
    (173) end_value -> . DOWN TO discrete_expression

    TO              shift and go to state 300
    DOWN            shift and go to state 302

    end_value                      shift and go to state 324

state 302

    (173) end_value -> DOWN . TO discrete_expression

    TO              shift and go to state 325


state 303

    (176) range_enumeration -> loop_counter DOWN IN discrete_mode .
    (39) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 176 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    SEMI            reduce using rule 176 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    LPAREN          shift and go to state 211


state 304

    (65) array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .

    ARROW           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TIMES           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVIDE          reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MOD             reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    PLUS            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MINUS           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    STRCAT          reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    AND             reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    OR              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    EQUAL           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIFF            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATER         reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATEREQ       reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESS            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESSEQ          reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    IN              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    SEMI            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    THEN            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RPAREN          reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RBRACKET        reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COMMA           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COLON           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ID              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSE            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSIF           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TO              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DOWN            reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    BY              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    FI              reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    WHILE           reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LBRACKET        reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ASSIGN          reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    INCREASE        reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DECREASE        reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MULCREASE       reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVCREASE       reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MODCREASE       reduce using rule 65 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)


state 305

    (155) else_clause -> ELSIF boolean_expression then_clause .
    (156) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (153) else_clause -> . ELSE
    (154) else_clause -> . ELSE action_statement_list
    (155) else_clause -> . ELSIF boolean_expression then_clause
    (156) else_clause -> . ELSIF boolean_expression then_clause else_clause

    FI              reduce using rule 155 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 232
    ELSIF           shift and go to state 233

    else_clause                    shift and go to state 326

state 306

    (212) result_spec -> RETURNS LPAREN . mode RPAREN
    (213) result_spec -> RETURNS LPAREN . mode LOC RPAREN
    (27) mode -> . mode_name
    (28) mode -> . discrete_mode
    (29) mode -> . reference_mode
    (30) mode -> . composite_mode
    (40) mode_name -> . identifier
    (31) discrete_mode -> . integer_mode
    (32) discrete_mode -> . boolean_mode
    (33) discrete_mode -> . character_mode
    (34) discrete_mode -> . discrete_range_mode
    (44) reference_mode -> . REF mode
    (45) composite_mode -> . string_mode
    (46) composite_mode -> . array_mode
    (17) identifier -> . ID
    (35) integer_mode -> . INT
    (36) boolean_mode -> . BOOL
    (37) character_mode -> . CHAR
    (38) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (39) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (47) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (49) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 152
    ID              shift and go to state 24
    INT             shift and go to state 146
    BOOL            shift and go to state 157
    CHAR            shift and go to state 149
    CHARS           shift and go to state 154
    ARRAY           shift and go to state 156

    character_mode                 shift and go to state 165
    discrete_mode                  shift and go to state 147
    string_mode                    shift and go to state 148
    boolean_mode                   shift and go to state 158
    discrete_range_mode            shift and go to state 150
    integer_mode                   shift and go to state 151
    mode                           shift and go to state 327
    identifier                     shift and go to state 161
    mode_name                      shift and go to state 162
    composite_mode                 shift and go to state 163
    array_mode                     shift and go to state 164
    reference_mode                 shift and go to state 159

state 307

    (204) formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .

    END             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    DCL             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    SYN             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    TYPE            reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ID              reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    EXIT            reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    RETURN          reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    RESULT          reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    IF              reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    DO              reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ABS             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ASC             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    NUM             reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    UPPER           reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    LOWER           reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    LENGTH          reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    READ            reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    PRINT           reduce using rule 204 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)


state 308

    (209) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 209 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 209 (formal_parameter -> identifier_list parameter_spec .)


state 309

    (210) parameter_spec -> mode .
    (211) parameter_spec -> mode . LOC

    RPAREN          reduce using rule 210 (parameter_spec -> mode .)
    COMMA           reduce using rule 210 (parameter_spec -> mode .)
    LOC             shift and go to state 328


state 310

    (206) parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .

    SEMI            reduce using rule 206 (parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .)
    RETURNS         reduce using rule 206 (parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .)


state 311

    (208) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (209) formal_parameter -> . identifier_list parameter_spec
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 24

    identifier                     shift and go to state 82
    formal_parameter               shift and go to state 329
    identifier_list                shift and go to state 282

state 312

    (94) elsif_expression -> elsif_expression ELSIF boolean_expression . then_expression
    (91) then_expression -> . THEN expression

    THEN            shift and go to state 206

    then_expression                shift and go to state 330

state 313

    (89) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .

    THEN            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    SEMI            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RPAREN          reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COMMA           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ID              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    TO              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    DOWN            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    BY              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COLON           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RBRACKET        reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSE            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSIF           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    WHILE           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    FI              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)


state 314

    (93) elsif_expression -> ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 93 (elsif_expression -> ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 93 (elsif_expression -> ELSIF boolean_expression then_expression .)


state 315

    (83) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .

    TIMES           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVIDE          reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MOD             reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    PLUS            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MINUS           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    STRCAT          reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    AND             reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    OR              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    EQUAL           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIFF            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATER         reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATEREQ       reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESS            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESSEQ          reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    IN              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RPAREN          reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LBRACKET        reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    THEN            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RBRACKET        reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    SEMI            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COLON           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    FI              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    WHILE           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COMMA           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TO              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DOWN            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ID              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSE            reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSIF           reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    BY              reduce using rule 83 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)


state 316

    (41) literal_range -> lower_bound COLON upper_bound .

    RBRACKET        reduce using rule 41 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 41 (literal_range -> lower_bound COLON upper_bound .)
    RPAREN          reduce using rule 41 (literal_range -> lower_bound COLON upper_bound .)


state 317

    (51) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACKET        reduce using rule 51 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 51 (index_mode_list -> index_mode_list COMMA index_mode .)


state 318

    (49) array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .

    ASSIGN          reduce using rule 49 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    SEMI            reduce using rule 49 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    COMMA           reduce using rule 49 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    LOC             reduce using rule 49 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    RPAREN          reduce using rule 49 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)


state 319

    (54) element_mode -> mode .

    ASSIGN          reduce using rule 54 (element_mode -> mode .)
    SEMI            reduce using rule 54 (element_mode -> mode .)
    COMMA           reduce using rule 54 (element_mode -> mode .)
    LOC             reduce using rule 54 (element_mode -> mode .)
    RPAREN          reduce using rule 54 (element_mode -> mode .)


state 320

    (42) lower_bound -> expression .
    (184) parameter -> expression .

    COLON           reduce using rule 42 (lower_bound -> expression .)
    RPAREN          reduce using rule 184 (parameter -> expression .)
    COMMA           reduce using rule 184 (parameter -> expression .)


state 321

    (55) integer_expression -> expression .

    TO              reduce using rule 55 (integer_expression -> expression .)
    DOWN            reduce using rule 55 (integer_expression -> expression .)


state 322

    (171) step_value -> BY integer_expression .

    TO              reduce using rule 171 (step_value -> BY integer_expression .)
    DOWN            reduce using rule 171 (step_value -> BY integer_expression .)


state 323

    (172) end_value -> TO discrete_expression .

    WHILE           reduce using rule 172 (end_value -> TO discrete_expression .)
    SEMI            reduce using rule 172 (end_value -> TO discrete_expression .)


state 324

    (168) step_enumeration -> loop_counter ASSIGN start_value step_value end_value .

    WHILE           reduce using rule 168 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)
    SEMI            reduce using rule 168 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)


state 325

    (173) end_value -> DOWN TO . discrete_expression
    (174) discrete_expression -> . expression
    (86) expression -> . operand0
    (87) expression -> . conditional_expression
    (95) operand0 -> . operand1
    (96) operand0 -> . operand0 operator1 operand1
    (88) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (89) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (108) operand1 -> . operand2
    (109) operand1 -> . operand1 operator2 operand2
    (115) operand2 -> . operand3
    (116) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (120) operand3 -> . operand4
    (121) operand3 -> . monadic_operator operand4
    (124) operand4 -> . location
    (125) operand4 -> . referenced_location
    (126) operand4 -> . primitive_value
    (122) monadic_operator -> . MINUS
    (123) monadic_operator -> . NOT
    (56) location -> . identifier
    (57) location -> . dereferenced_reference
    (58) location -> . array_element
    (59) location -> . array_slice
    (60) location -> . call_action
    (127) referenced_location -> . ARROW location
    (67) primitive_value -> . literal
    (68) primitive_value -> . value_array_element
    (69) primitive_value -> . value_array_slice
    (70) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (61) dereferenced_reference -> . location ARROW
    (62) array_element -> . array_location LBRACKET expression_list RBRACKET
    (65) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (178) call_action -> . procedure_call
    (179) call_action -> . builtin_call
    (71) literal -> . integer_literal
    (72) literal -> . boolean_literal
    (73) literal -> . character_literal
    (74) literal -> . empty_literal
    (75) literal -> . character_string_literal
    (82) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (83) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (85) parenthesized_expression -> . LPAREN expression RPAREN
    (66) array_location -> . location
    (180) procedure_call -> . identifier LPAREN RPAREN
    (181) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (190) builtin_call -> . builtin_name LPAREN RPAREN
    (191) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (76) integer_literal -> . ICONST
    (77) boolean_literal -> . FALSE
    (78) boolean_literal -> . TRUE
    (79) character_literal -> . CCONST
    (80) empty_literal -> . NULL
    (81) character_string_literal -> . SCONST
    (84) array_primitive_value -> . primitive_value
    (192) builtin_name -> . ABS
    (193) builtin_name -> . ASC
    (194) builtin_name -> . NUM
    (195) builtin_name -> . UPPER
    (196) builtin_name -> . LOWER
    (197) builtin_name -> . LENGTH
    (198) builtin_name -> . READ
    (199) builtin_name -> . PRINT

    IF              shift and go to state 72
    MINUS           shift and go to state 47
    NOT             shift and go to state 54
    ARROW           shift and go to state 51
    ID              shift and go to state 24
    LPAREN          shift and go to state 58
    ICONST          shift and go to state 53
    FALSE           shift and go to state 68
    TRUE            shift and go to state 59
    CCONST          shift and go to state 66
    NULL            shift and go to state 63
    SCONST          shift and go to state 45
    ABS             shift and go to state 27
    ASC             shift and go to state 33
    NUM             shift and go to state 39
    UPPER           shift and go to state 43
    LOWER           shift and go to state 7
    LENGTH          shift and go to state 21
    READ            shift and go to state 3
    PRINT           shift and go to state 9

    array_location                 shift and go to state 28
    array_slice                    shift and go to state 17
    value_array_element            shift and go to state 46
    operand0                       shift and go to state 64
    array_primitive_value          shift and go to state 76
    parenthesized_expression       shift and go to state 48
    builtin_name                   shift and go to state 44
    operand4                       shift and go to state 65
    call_action                    shift and go to state 50
    value_array_slice              shift and go to state 52
    character_string_literal       shift and go to state 49
    expression                     shift and go to state 265
    conditional_expression         shift and go to state 69
    primitive_value                shift and go to state 57
    builtin_call                   shift and go to state 11
    literal                        shift and go to state 71
    character_literal              shift and go to state 67
    discrete_expression            shift and go to state 331
    integer_literal                shift and go to state 73
    empty_literal                  shift and go to state 70
    boolean_literal                shift and go to state 75
    operand2                       shift and go to state 56
    operand3                       shift and go to state 77
    monadic_operator               shift and go to state 60
    array_element                  shift and go to state 20
    operand1                       shift and go to state 61
    dereferenced_reference         shift and go to state 22
    location                       shift and go to state 62
    referenced_location            shift and go to state 78
    procedure_call                 shift and go to state 4
    identifier                     shift and go to state 79

state 326

    (156) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 156 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 327

    (212) result_spec -> RETURNS LPAREN mode . RPAREN
    (213) result_spec -> RETURNS LPAREN mode . LOC RPAREN

    RPAREN          shift and go to state 332
    LOC             shift and go to state 333


state 328

    (211) parameter_spec -> mode LOC .

    RPAREN          reduce using rule 211 (parameter_spec -> mode LOC .)
    COMMA           reduce using rule 211 (parameter_spec -> mode LOC .)


state 329

    (208) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 208 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 208 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 330

    (94) elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 94 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 94 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)


state 331

    (173) end_value -> DOWN TO discrete_expression .

    WHILE           reduce using rule 173 (end_value -> DOWN TO discrete_expression .)
    SEMI            reduce using rule 173 (end_value -> DOWN TO discrete_expression .)


state 332

    (212) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMI            reduce using rule 212 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 333

    (213) result_spec -> RETURNS LPAREN mode LOC . RPAREN

    RPAREN          shift and go to state 334


state 334

    (213) result_spec -> RETURNS LPAREN mode LOC RPAREN .

    SEMI            reduce using rule 213 (result_spec -> RETURNS LPAREN mode LOC RPAREN .)

