Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> declaration_statement
Rule 5     statement -> synonym_statement
Rule 6     statement -> newmode_statement
Rule 7     statement -> procedure_statement
Rule 8     statement -> action_statement
Rule 9     declaration_statement -> DCL declaration_list SEMI
Rule 10    declaration_list -> declaration
Rule 11    declaration_list -> declaration_list COMMA declaration
Rule 12    declaration -> identifier_list mode
Rule 13    declaration -> identifier_list mode initialization
Rule 14    initialization -> ASSIGN expression
Rule 15    identifier_list -> identifier
Rule 16    identifier_list -> identifier_list COMMA identifier
Rule 17    identifier -> ID
Rule 18    synonym_statement -> SYN synonym_list SEMI
Rule 19    synonym_list -> synonym_definition
Rule 20    synonym_list -> synonym_list synonym_definition
Rule 21    synonym_definition -> identifier_list ASSIGN constant_expression
Rule 22    synonym_definition -> identifier_list mode ASSIGN constant_expression
Rule 23    constant_expression -> expression
Rule 24    newmode_statement -> TYPE newmode_list SEMI
Rule 25    newmode_list -> mode_definition
Rule 26    newmode_list -> newmode_list COMMA mode_definition
Rule 27    mode_definition -> identifier_list ASSIGN mode
Rule 28    mode -> mode_name
Rule 29    mode -> discrete_mode
Rule 30    mode -> reference_mode
Rule 31    mode -> composite_mode
Rule 32    discrete_mode -> integer_mode
Rule 33    discrete_mode -> boolean_mode
Rule 34    discrete_mode -> character_mode
Rule 35    discrete_mode -> discrete_range_mode
Rule 36    integer_mode -> INT
Rule 37    boolean_mode -> BOOL
Rule 38    character_mode -> CHAR
Rule 39    discrete_range_mode -> identifier LPAREN literal_range RPAREN
Rule 40    discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN
Rule 41    mode_name -> identifier
Rule 42    literal_range -> lower_bound COLON upper_bound
Rule 43    lower_bound -> expression
Rule 44    upper_bound -> expression
Rule 45    reference_mode -> REF mode
Rule 46    composite_mode -> string_mode
Rule 47    composite_mode -> array_mode
Rule 48    string_mode -> CHARS LBRACKET string_length RBRACKET
Rule 49    string_length -> ICONST
Rule 50    array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode
Rule 51    index_mode_list -> index_mode
Rule 52    index_mode_list -> index_mode_list COMMA index_mode
Rule 53    index_mode -> discrete_mode
Rule 54    index_mode -> literal_range
Rule 55    element_mode -> mode
Rule 56    integer_expression -> expression
Rule 57    location -> identifier
Rule 58    location -> dereferenced_reference
Rule 59    location -> array_element
Rule 60    location -> array_slice
Rule 61    location -> call_action
Rule 62    dereferenced_reference -> location ARROW
Rule 63    array_element -> array_location LBRACKET expression_list RBRACKET
Rule 64    expression_list -> expression
Rule 65    expression_list -> expression_list COMMA expression
Rule 66    array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET
Rule 67    array_location -> location
Rule 68    primitive_value -> literal
Rule 69    primitive_value -> value_array_element
Rule 70    primitive_value -> value_array_slice
Rule 71    primitive_value -> parenthesized_expression
Rule 72    literal -> integer_literal
Rule 73    literal -> boolean_literal
Rule 74    literal -> character_literal
Rule 75    literal -> empty_literal
Rule 76    literal -> character_string_literal
Rule 77    integer_literal -> ICONST
Rule 78    boolean_literal -> FALSE
Rule 79    boolean_literal -> TRUE
Rule 80    character_literal -> CCONST
Rule 81    empty_literal -> NULL
Rule 82    character_string_literal -> SCONST
Rule 83    value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET
Rule 84    value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
Rule 85    array_primitive_value -> primitive_value
Rule 86    parenthesized_expression -> LPAREN expression RPAREN
Rule 87    expression -> operand0
Rule 88    expression -> conditional_expression
Rule 89    conditional_expression -> IF boolean_expression then_expression else_expression FI
Rule 90    conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI
Rule 91    boolean_expression -> expression
Rule 92    then_expression -> THEN expression
Rule 93    else_expression -> ELSE expression
Rule 94    elsif_expression -> ELSIF boolean_expression then_expression
Rule 95    elsif_expression -> elsif_expression ELSIF boolean_expression then_expression
Rule 96    operand0 -> operand1
Rule 97    operand0 -> operand0 operator1 operand1
Rule 98    operator1 -> relational_operator
Rule 99    operator1 -> membership_operator
Rule 100   relational_operator -> AND
Rule 101   relational_operator -> OR
Rule 102   relational_operator -> EQUAL
Rule 103   relational_operator -> DIFF
Rule 104   relational_operator -> GREATER
Rule 105   relational_operator -> GREATEREQ
Rule 106   relational_operator -> LESS
Rule 107   relational_operator -> LESSEQ
Rule 108   membership_operator -> IN
Rule 109   operand1 -> operand2
Rule 110   operand1 -> operand1 operator2 operand2
Rule 111   operator2 -> arithmetic_additive_operator
Rule 112   operator2 -> string_concatenation_operator
Rule 113   arithmetic_additive_operator -> PLUS
Rule 114   arithmetic_additive_operator -> MINUS
Rule 115   string_concatenation_operator -> STRCAT
Rule 116   operand2 -> operand3
Rule 117   operand2 -> operand2 arithmetic_multiplicative_operator operand3
Rule 118   arithmetic_multiplicative_operator -> TIMES
Rule 119   arithmetic_multiplicative_operator -> DIVIDE
Rule 120   arithmetic_multiplicative_operator -> MOD
Rule 121   operand3 -> operand4
Rule 122   operand3 -> monadic_operator operand4
Rule 123   monadic_operator -> MINUS
Rule 124   monadic_operator -> NOT
Rule 125   operand4 -> location
Rule 126   operand4 -> referenced_location
Rule 127   operand4 -> primitive_value
Rule 128   referenced_location -> ARROW location
Rule 129   action_statement -> action SEMI
Rule 130   action_statement -> label_id COLON action SEMI
Rule 131   label_id -> identifier
Rule 132   action -> bracketed_action
Rule 133   action -> assignment_action
Rule 134   action -> call_action
Rule 135   action -> exit_action
Rule 136   action -> return_action
Rule 137   action -> result_action
Rule 138   bracketed_action -> if_action
Rule 139   bracketed_action -> do_action
Rule 140   assignment_action -> location assigning_operator expression
Rule 141   assigning_operator -> ASSIGN
Rule 142   assigning_operator -> closed_dyadic_operator
Rule 143   closed_dyadic_operator -> INCREASE
Rule 144   closed_dyadic_operator -> DECREASE
Rule 145   closed_dyadic_operator -> MULCREASE
Rule 146   closed_dyadic_operator -> DIVCREASE
Rule 147   closed_dyadic_operator -> MODCREASE
Rule 148   if_action -> IF boolean_expression then_clause FI
Rule 149   if_action -> IF boolean_expression then_clause else_clause FI
Rule 150   then_clause -> THEN
Rule 151   then_clause -> THEN action_statement_list
Rule 152   action_statement_list -> action_statement
Rule 153   action_statement_list -> action_statement_list action_statement
Rule 154   else_clause -> ELSE
Rule 155   else_clause -> ELSE action_statement_list
Rule 156   else_clause -> ELSIF boolean_expression then_clause
Rule 157   else_clause -> ELSIF boolean_expression then_clause else_clause
Rule 158   do_action -> DO OD
Rule 159   do_action -> DO control_part SEMI OD
Rule 160   do_action -> DO action_statement_list OD
Rule 161   do_action -> DO control_part SEMI action_statement_list OD
Rule 162   control_part -> while_control
Rule 163   control_part -> FOR for_control
Rule 164   control_part -> FOR for_control while_control
Rule 165   for_control -> iteration
Rule 166   iteration -> step_enumeration
Rule 167   iteration -> range_enumeration
Rule 168   step_enumeration -> loop_counter ASSIGN start_value end_value
Rule 169   step_enumeration -> loop_counter ASSIGN start_value step_value end_value
Rule 170   loop_counter -> identifier
Rule 171   start_value -> discrete_expression
Rule 172   step_value -> BY integer_expression
Rule 173   end_value -> TO discrete_expression
Rule 174   end_value -> DOWN TO discrete_expression
Rule 175   discrete_expression -> expression
Rule 176   range_enumeration -> loop_counter IN discrete_mode
Rule 177   range_enumeration -> loop_counter DOWN IN discrete_mode
Rule 178   while_control -> WHILE boolean_expression
Rule 179   call_action -> procedure_call
Rule 180   call_action -> builtin_call
Rule 181   procedure_call -> identifier LPAREN RPAREN
Rule 182   procedure_call -> identifier LPAREN parameter_list RPAREN
Rule 183   parameter_list -> parameter
Rule 184   parameter_list -> parameter_list COMMA parameter
Rule 185   parameter -> expression
Rule 186   exit_action -> EXIT exit_label_id
Rule 187   exit_label_id -> identifier
Rule 188   return_action -> RETURN
Rule 189   return_action -> RETURN result
Rule 190   result_action -> RESULT result
Rule 191   result -> expression
Rule 192   builtin_call -> builtin_name LPAREN RPAREN
Rule 193   builtin_call -> builtin_name LPAREN parameter_list RPAREN
Rule 194   builtin_name -> ABS
Rule 195   builtin_name -> ASC
Rule 196   builtin_name -> NUM
Rule 197   builtin_name -> UPPER
Rule 198   builtin_name -> LOWER
Rule 199   builtin_name -> LENGTH
Rule 200   builtin_name -> READ
Rule 201   builtin_name -> PRINT
Rule 202   procedure_statement -> label_id COLON procedure_definition SEMI
Rule 203   procedure_definition -> formal_procedure_head END
Rule 204   procedure_definition -> formal_procedure_head statement_list END
Rule 205   formal_procedure_head -> PROC parenthesis_gambiarra SEMI
Rule 206   formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI
Rule 207   parenthesis_gambiarra -> LPAREN RPAREN
Rule 208   parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN
Rule 209   formal_parameter_list -> formal_parameter
Rule 210   formal_parameter_list -> formal_parameter_list COMMA formal_parameter
Rule 211   formal_parameter -> identifier_list parameter_spec
Rule 212   parameter_spec -> mode
Rule 213   parameter_spec -> mode LOC
Rule 214   result_spec -> RETURNS LPAREN mode RPAREN
Rule 215   result_spec -> RETURNS LPAREN mode LOC RPAREN

Terminals, with rules where they appear

ABS                  : 194
AND                  : 100
ARRAY                : 50
ARROW                : 62 128
ASC                  : 195
ASSIGN               : 14 21 22 27 141 168 169
BOOL                 : 37
BY                   : 172
CCONST               : 80
CHAR                 : 38
CHARS                : 48
COLON                : 42 66 84 130 202
COMMA                : 11 16 26 52 65 184 210
DCL                  : 9
DECREASE             : 144
DIFF                 : 103
DIVCREASE            : 146
DIVIDE               : 119
DO                   : 158 159 160 161
DOWN                 : 174 177
ELSE                 : 93 154 155
ELSIF                : 94 95 156 157
END                  : 203 204
EQUAL                : 102
EXIT                 : 186
FALSE                : 78
FI                   : 89 90 148 149
FOR                  : 163 164
GREATER              : 104
GREATEREQ            : 105
ICONST               : 49 77
ID                   : 17
IF                   : 89 90 148 149
IN                   : 108 176 177
INCREASE             : 143
INT                  : 36
LBRACKET             : 48 50 63 66 83 84
LENGTH               : 199
LESS                 : 106
LESSEQ               : 107
LOC                  : 213 215
LOWER                : 198
LPAREN               : 39 40 86 181 182 192 193 207 208 214 215
MINUS                : 114 123
MOD                  : 120
MODCREASE            : 147
MULCREASE            : 145
NOT                  : 124
NULL                 : 81
NUM                  : 196
OD                   : 158 159 160 161
OR                   : 101
PLUS                 : 113
PRINT                : 201
PROC                 : 205 206
RBRACKET             : 48 50 63 66 83 84
READ                 : 200
REF                  : 45
RESULT               : 190
RETURN               : 188 189
RETURNS              : 214 215
RPAREN               : 39 40 86 181 182 192 193 207 208 214 215
SCONST               : 82
SEMI                 : 9 18 24 129 130 159 161 202 205 206
STRCAT               : 115
SYN                  : 18
THEN                 : 92 150 151
TIMES                : 118
TO                   : 173 174
TRUE                 : 79
TYPE                 : 24
UPPER                : 197
WHILE                : 178
error                : 

Nonterminals, with rules where they appear

action               : 129 130
action_statement     : 8 152 153
action_statement_list : 151 153 155 160 161
arithmetic_additive_operator : 111
arithmetic_multiplicative_operator : 117
array_element        : 59
array_location       : 63 66
array_mode           : 47
array_primitive_value : 83 84
array_slice          : 60
assigning_operator   : 140
assignment_action    : 133
boolean_expression   : 89 90 94 95 148 149 156 157 178
boolean_literal      : 73
boolean_mode         : 33
bracketed_action     : 132
builtin_call         : 180
builtin_name         : 192 193
call_action          : 61 134
character_literal    : 74
character_mode       : 34
character_string_literal : 76
closed_dyadic_operator : 142
composite_mode       : 31
conditional_expression : 88
constant_expression  : 21 22
control_part         : 159 161
declaration          : 10 11
declaration_list     : 9 11
declaration_statement : 4
dereferenced_reference : 58
discrete_expression  : 171 173 174
discrete_mode        : 29 40 53 176 177
discrete_range_mode  : 35
do_action            : 139
element_mode         : 50
else_clause          : 149 157
else_expression      : 89 90
elsif_expression     : 90 95
empty_literal        : 75
end_value            : 168 169
exit_action          : 135
exit_label_id        : 186
expression           : 14 23 43 44 56 64 65 86 91 92 93 140 175 185 191
expression_list      : 63 65
for_control          : 163 164
formal_parameter     : 209 210
formal_parameter_list : 208 210
formal_procedure_head : 203 204
identifier           : 15 16 39 41 57 131 170 181 182 187
identifier_list      : 12 13 16 21 22 27 211
if_action            : 138
index_mode           : 51 52
index_mode_list      : 50 52
initialization       : 13
integer_expression   : 83 172
integer_literal      : 72
integer_mode         : 32
iteration            : 165
label_id             : 130 202
literal              : 68
literal_range        : 39 40 54
location             : 62 67 125 128 140
loop_counter         : 168 169 176 177
lower_bound          : 42 66 84
membership_operator  : 99
mode                 : 12 13 22 27 45 55 212 213 214 215
mode_definition      : 25 26
mode_name            : 28
monadic_operator     : 122
newmode_list         : 24 26
newmode_statement    : 6
operand0             : 87 97
operand1             : 96 97 110
operand2             : 109 110 117
operand3             : 116 117
operand4             : 121 122
operator1            : 97
operator2            : 110
parameter            : 183 184
parameter_list       : 182 184 193
parameter_spec       : 211
parenthesis_gambiarra : 205 206
parenthesized_expression : 71
primitive_value      : 85 127
procedure_call       : 179
procedure_definition : 202
procedure_statement  : 7
program              : 0
range_enumeration    : 167
reference_mode       : 30
referenced_location  : 126
relational_operator  : 98
result               : 189 190
result_action        : 137
result_spec          : 206
return_action        : 136
start_value          : 168 169
statement            : 2 3
statement_list       : 1 3 204
step_enumeration     : 166
step_value           : 169
string_concatenation_operator : 112
string_length        : 48
string_mode          : 46
synonym_definition   : 19 20
synonym_list         : 18 20
synonym_statement    : 5
then_clause          : 148 149 156 157
then_expression      : 89 90 94 95
upper_bound          : 42 66 84
value_array_element  : 69
value_array_slice    : 70
while_control        : 162 164

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (24) newmode_statement -> . TYPE newmode_list SEMI
    (202) procedure_statement -> . label_id COLON procedure_definition SEMI
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (131) label_id -> . identifier
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (17) identifier -> . ID
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    DCL             shift and go to state 31
    SYN             shift and go to state 4
    TYPE            shift and go to state 1
    ID              shift and go to state 22
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    statement                      shift and go to state 5
    label_id                       shift and go to state 6
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    location                       shift and go to state 13
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    newmode_statement              shift and go to state 21
    builtin_call                   shift and go to state 24
    synonym_statement              shift and go to state 25
    array_slice                    shift and go to state 18
    identifier                     shift and go to state 28
    program                        shift and go to state 29
    dereferenced_reference         shift and go to state 30
    statement_list                 shift and go to state 32
    action                         shift and go to state 33
    procedure_call                 shift and go to state 34
    declaration_statement          shift and go to state 36
    action_statement               shift and go to state 10
    builtin_name                   shift and go to state 38
    procedure_statement            shift and go to state 42
    return_action                  shift and go to state 44

state 1

    (24) newmode_statement -> TYPE . newmode_list SEMI
    (25) newmode_list -> . mode_definition
    (26) newmode_list -> . newmode_list COMMA mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 45
    newmode_list                   shift and go to state 46
    mode_definition                shift and go to state 48
    identifier_list                shift and go to state 47

state 2

    (201) builtin_name -> PRINT .

    LPAREN          reduce using rule 201 (builtin_name -> PRINT .)


state 3

    (139) bracketed_action -> do_action .

    SEMI            reduce using rule 139 (bracketed_action -> do_action .)


state 4

    (18) synonym_statement -> SYN . synonym_list SEMI
    (19) synonym_list -> . synonym_definition
    (20) synonym_list -> . synonym_list synonym_definition
    (21) synonym_definition -> . identifier_list ASSIGN constant_expression
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 45
    synonym_definition             shift and go to state 50
    identifier_list                shift and go to state 51
    synonym_list                   shift and go to state 49

state 5

    (2) statement_list -> statement .

    DCL             reduce using rule 2 (statement_list -> statement .)
    SYN             reduce using rule 2 (statement_list -> statement .)
    TYPE            reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    EXIT            reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    RESULT          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    DO              reduce using rule 2 (statement_list -> statement .)
    ABS             reduce using rule 2 (statement_list -> statement .)
    ASC             reduce using rule 2 (statement_list -> statement .)
    NUM             reduce using rule 2 (statement_list -> statement .)
    UPPER           reduce using rule 2 (statement_list -> statement .)
    LOWER           reduce using rule 2 (statement_list -> statement .)
    LENGTH          reduce using rule 2 (statement_list -> statement .)
    READ            reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)


state 6

    (202) procedure_statement -> label_id . COLON procedure_definition SEMI
    (130) action_statement -> label_id . COLON action SEMI

    COLON           shift and go to state 52


state 7

    (138) bracketed_action -> if_action .

    SEMI            reduce using rule 138 (bracketed_action -> if_action .)


state 8

    (199) builtin_name -> LENGTH .

    LPAREN          reduce using rule 199 (builtin_name -> LENGTH .)


state 9

    (59) location -> array_element .

    ARROW           reduce using rule 59 (location -> array_element .)
    ASSIGN          reduce using rule 59 (location -> array_element .)
    INCREASE        reduce using rule 59 (location -> array_element .)
    DECREASE        reduce using rule 59 (location -> array_element .)
    MULCREASE       reduce using rule 59 (location -> array_element .)
    DIVCREASE       reduce using rule 59 (location -> array_element .)
    MODCREASE       reduce using rule 59 (location -> array_element .)
    LBRACKET        reduce using rule 59 (location -> array_element .)
    TIMES           reduce using rule 59 (location -> array_element .)
    DIVIDE          reduce using rule 59 (location -> array_element .)
    MOD             reduce using rule 59 (location -> array_element .)
    PLUS            reduce using rule 59 (location -> array_element .)
    MINUS           reduce using rule 59 (location -> array_element .)
    STRCAT          reduce using rule 59 (location -> array_element .)
    AND             reduce using rule 59 (location -> array_element .)
    OR              reduce using rule 59 (location -> array_element .)
    EQUAL           reduce using rule 59 (location -> array_element .)
    DIFF            reduce using rule 59 (location -> array_element .)
    GREATER         reduce using rule 59 (location -> array_element .)
    GREATEREQ       reduce using rule 59 (location -> array_element .)
    LESS            reduce using rule 59 (location -> array_element .)
    LESSEQ          reduce using rule 59 (location -> array_element .)
    IN              reduce using rule 59 (location -> array_element .)
    THEN            reduce using rule 59 (location -> array_element .)
    COLON           reduce using rule 59 (location -> array_element .)
    RPAREN          reduce using rule 59 (location -> array_element .)
    COMMA           reduce using rule 59 (location -> array_element .)
    SEMI            reduce using rule 59 (location -> array_element .)
    RBRACKET        reduce using rule 59 (location -> array_element .)
    ID              reduce using rule 59 (location -> array_element .)
    ELSE            reduce using rule 59 (location -> array_element .)
    ELSIF           reduce using rule 59 (location -> array_element .)
    TO              reduce using rule 59 (location -> array_element .)
    DOWN            reduce using rule 59 (location -> array_element .)
    BY              reduce using rule 59 (location -> array_element .)
    FI              reduce using rule 59 (location -> array_element .)
    WHILE           reduce using rule 59 (location -> array_element .)


state 10

    (8) statement -> action_statement .

    END             reduce using rule 8 (statement -> action_statement .)
    DCL             reduce using rule 8 (statement -> action_statement .)
    SYN             reduce using rule 8 (statement -> action_statement .)
    TYPE            reduce using rule 8 (statement -> action_statement .)
    ID              reduce using rule 8 (statement -> action_statement .)
    EXIT            reduce using rule 8 (statement -> action_statement .)
    RETURN          reduce using rule 8 (statement -> action_statement .)
    RESULT          reduce using rule 8 (statement -> action_statement .)
    IF              reduce using rule 8 (statement -> action_statement .)
    DO              reduce using rule 8 (statement -> action_statement .)
    ABS             reduce using rule 8 (statement -> action_statement .)
    ASC             reduce using rule 8 (statement -> action_statement .)
    NUM             reduce using rule 8 (statement -> action_statement .)
    UPPER           reduce using rule 8 (statement -> action_statement .)
    LOWER           reduce using rule 8 (statement -> action_statement .)
    LENGTH          reduce using rule 8 (statement -> action_statement .)
    READ            reduce using rule 8 (statement -> action_statement .)
    PRINT           reduce using rule 8 (statement -> action_statement .)
    $end            reduce using rule 8 (statement -> action_statement .)


state 11

    (133) action -> assignment_action .

    SEMI            reduce using rule 133 (action -> assignment_action .)


state 12

    (137) action -> result_action .

    SEMI            reduce using rule 137 (action -> result_action .)


state 13

    (140) assignment_action -> location . assigning_operator expression
    (62) dereferenced_reference -> location . ARROW
    (67) array_location -> location .
    (141) assigning_operator -> . ASSIGN
    (142) assigning_operator -> . closed_dyadic_operator
    (143) closed_dyadic_operator -> . INCREASE
    (144) closed_dyadic_operator -> . DECREASE
    (145) closed_dyadic_operator -> . MULCREASE
    (146) closed_dyadic_operator -> . DIVCREASE
    (147) closed_dyadic_operator -> . MODCREASE

    ARROW           shift and go to state 53
    LBRACKET        reduce using rule 67 (array_location -> location .)
    ASSIGN          shift and go to state 58
    INCREASE        shift and go to state 57
    DECREASE        shift and go to state 59
    MULCREASE       shift and go to state 54
    DIVCREASE       shift and go to state 61
    MODCREASE       shift and go to state 56

    assigning_operator             shift and go to state 60
    closed_dyadic_operator         shift and go to state 55

state 14

    (194) builtin_name -> ABS .

    LPAREN          reduce using rule 194 (builtin_name -> ABS .)


state 15

    (200) builtin_name -> READ .

    LPAREN          reduce using rule 200 (builtin_name -> READ .)


state 16

    (63) array_element -> array_location . LBRACKET expression_list RBRACKET
    (66) array_slice -> array_location . LBRACKET lower_bound COLON upper_bound RBRACKET

    LBRACKET        shift and go to state 62


state 17

    (135) action -> exit_action .

    SEMI            reduce using rule 135 (action -> exit_action .)


state 18

    (60) location -> array_slice .

    ARROW           reduce using rule 60 (location -> array_slice .)
    ASSIGN          reduce using rule 60 (location -> array_slice .)
    INCREASE        reduce using rule 60 (location -> array_slice .)
    DECREASE        reduce using rule 60 (location -> array_slice .)
    MULCREASE       reduce using rule 60 (location -> array_slice .)
    DIVCREASE       reduce using rule 60 (location -> array_slice .)
    MODCREASE       reduce using rule 60 (location -> array_slice .)
    LBRACKET        reduce using rule 60 (location -> array_slice .)
    TIMES           reduce using rule 60 (location -> array_slice .)
    DIVIDE          reduce using rule 60 (location -> array_slice .)
    MOD             reduce using rule 60 (location -> array_slice .)
    PLUS            reduce using rule 60 (location -> array_slice .)
    MINUS           reduce using rule 60 (location -> array_slice .)
    STRCAT          reduce using rule 60 (location -> array_slice .)
    AND             reduce using rule 60 (location -> array_slice .)
    OR              reduce using rule 60 (location -> array_slice .)
    EQUAL           reduce using rule 60 (location -> array_slice .)
    DIFF            reduce using rule 60 (location -> array_slice .)
    GREATER         reduce using rule 60 (location -> array_slice .)
    GREATEREQ       reduce using rule 60 (location -> array_slice .)
    LESS            reduce using rule 60 (location -> array_slice .)
    LESSEQ          reduce using rule 60 (location -> array_slice .)
    IN              reduce using rule 60 (location -> array_slice .)
    THEN            reduce using rule 60 (location -> array_slice .)
    COLON           reduce using rule 60 (location -> array_slice .)
    RPAREN          reduce using rule 60 (location -> array_slice .)
    COMMA           reduce using rule 60 (location -> array_slice .)
    SEMI            reduce using rule 60 (location -> array_slice .)
    RBRACKET        reduce using rule 60 (location -> array_slice .)
    ID              reduce using rule 60 (location -> array_slice .)
    ELSE            reduce using rule 60 (location -> array_slice .)
    ELSIF           reduce using rule 60 (location -> array_slice .)
    TO              reduce using rule 60 (location -> array_slice .)
    DOWN            reduce using rule 60 (location -> array_slice .)
    BY              reduce using rule 60 (location -> array_slice .)
    FI              reduce using rule 60 (location -> array_slice .)
    WHILE           reduce using rule 60 (location -> array_slice .)


state 19

    (132) action -> bracketed_action .

    SEMI            reduce using rule 132 (action -> bracketed_action .)


state 20

    (134) action -> call_action .
    (61) location -> call_action .

    SEMI            reduce using rule 134 (action -> call_action .)
    ARROW           reduce using rule 61 (location -> call_action .)
    ASSIGN          reduce using rule 61 (location -> call_action .)
    INCREASE        reduce using rule 61 (location -> call_action .)
    DECREASE        reduce using rule 61 (location -> call_action .)
    MULCREASE       reduce using rule 61 (location -> call_action .)
    DIVCREASE       reduce using rule 61 (location -> call_action .)
    MODCREASE       reduce using rule 61 (location -> call_action .)
    LBRACKET        reduce using rule 61 (location -> call_action .)


state 21

    (6) statement -> newmode_statement .

    END             reduce using rule 6 (statement -> newmode_statement .)
    DCL             reduce using rule 6 (statement -> newmode_statement .)
    SYN             reduce using rule 6 (statement -> newmode_statement .)
    TYPE            reduce using rule 6 (statement -> newmode_statement .)
    ID              reduce using rule 6 (statement -> newmode_statement .)
    EXIT            reduce using rule 6 (statement -> newmode_statement .)
    RETURN          reduce using rule 6 (statement -> newmode_statement .)
    RESULT          reduce using rule 6 (statement -> newmode_statement .)
    IF              reduce using rule 6 (statement -> newmode_statement .)
    DO              reduce using rule 6 (statement -> newmode_statement .)
    ABS             reduce using rule 6 (statement -> newmode_statement .)
    ASC             reduce using rule 6 (statement -> newmode_statement .)
    NUM             reduce using rule 6 (statement -> newmode_statement .)
    UPPER           reduce using rule 6 (statement -> newmode_statement .)
    LOWER           reduce using rule 6 (statement -> newmode_statement .)
    LENGTH          reduce using rule 6 (statement -> newmode_statement .)
    READ            reduce using rule 6 (statement -> newmode_statement .)
    PRINT           reduce using rule 6 (statement -> newmode_statement .)
    $end            reduce using rule 6 (statement -> newmode_statement .)


state 22

    (17) identifier -> ID .

    LPAREN          reduce using rule 17 (identifier -> ID .)
    ARROW           reduce using rule 17 (identifier -> ID .)
    TIMES           reduce using rule 17 (identifier -> ID .)
    DIVIDE          reduce using rule 17 (identifier -> ID .)
    MOD             reduce using rule 17 (identifier -> ID .)
    PLUS            reduce using rule 17 (identifier -> ID .)
    MINUS           reduce using rule 17 (identifier -> ID .)
    STRCAT          reduce using rule 17 (identifier -> ID .)
    AND             reduce using rule 17 (identifier -> ID .)
    OR              reduce using rule 17 (identifier -> ID .)
    EQUAL           reduce using rule 17 (identifier -> ID .)
    DIFF            reduce using rule 17 (identifier -> ID .)
    GREATER         reduce using rule 17 (identifier -> ID .)
    GREATEREQ       reduce using rule 17 (identifier -> ID .)
    LESS            reduce using rule 17 (identifier -> ID .)
    LESSEQ          reduce using rule 17 (identifier -> ID .)
    IN              reduce using rule 17 (identifier -> ID .)
    RPAREN          reduce using rule 17 (identifier -> ID .)
    COMMA           reduce using rule 17 (identifier -> ID .)
    LBRACKET        reduce using rule 17 (identifier -> ID .)
    ASSIGN          reduce using rule 17 (identifier -> ID .)
    DOWN            reduce using rule 17 (identifier -> ID .)
    LOC             reduce using rule 17 (identifier -> ID .)
    INCREASE        reduce using rule 17 (identifier -> ID .)
    DECREASE        reduce using rule 17 (identifier -> ID .)
    MULCREASE       reduce using rule 17 (identifier -> ID .)
    DIVCREASE       reduce using rule 17 (identifier -> ID .)
    MODCREASE       reduce using rule 17 (identifier -> ID .)
    COLON           reduce using rule 17 (identifier -> ID .)
    RBRACKET        reduce using rule 17 (identifier -> ID .)
    SEMI            reduce using rule 17 (identifier -> ID .)
    ELSE            reduce using rule 17 (identifier -> ID .)
    ELSIF           reduce using rule 17 (identifier -> ID .)
    THEN            reduce using rule 17 (identifier -> ID .)
    ID              reduce using rule 17 (identifier -> ID .)
    TO              reduce using rule 17 (identifier -> ID .)
    BY              reduce using rule 17 (identifier -> ID .)
    FI              reduce using rule 17 (identifier -> ID .)
    WHILE           reduce using rule 17 (identifier -> ID .)
    REF             reduce using rule 17 (identifier -> ID .)
    INT             reduce using rule 17 (identifier -> ID .)
    BOOL            reduce using rule 17 (identifier -> ID .)
    CHAR            reduce using rule 17 (identifier -> ID .)
    CHARS           reduce using rule 17 (identifier -> ID .)
    ARRAY           reduce using rule 17 (identifier -> ID .)


state 23

    (186) exit_action -> EXIT . exit_label_id
    (187) exit_label_id -> . identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 63
    exit_label_id                  shift and go to state 64

state 24

    (180) call_action -> builtin_call .

    SEMI            reduce using rule 180 (call_action -> builtin_call .)
    ARROW           reduce using rule 180 (call_action -> builtin_call .)
    ASSIGN          reduce using rule 180 (call_action -> builtin_call .)
    INCREASE        reduce using rule 180 (call_action -> builtin_call .)
    DECREASE        reduce using rule 180 (call_action -> builtin_call .)
    MULCREASE       reduce using rule 180 (call_action -> builtin_call .)
    DIVCREASE       reduce using rule 180 (call_action -> builtin_call .)
    MODCREASE       reduce using rule 180 (call_action -> builtin_call .)
    LBRACKET        reduce using rule 180 (call_action -> builtin_call .)
    TIMES           reduce using rule 180 (call_action -> builtin_call .)
    DIVIDE          reduce using rule 180 (call_action -> builtin_call .)
    MOD             reduce using rule 180 (call_action -> builtin_call .)
    PLUS            reduce using rule 180 (call_action -> builtin_call .)
    MINUS           reduce using rule 180 (call_action -> builtin_call .)
    STRCAT          reduce using rule 180 (call_action -> builtin_call .)
    AND             reduce using rule 180 (call_action -> builtin_call .)
    OR              reduce using rule 180 (call_action -> builtin_call .)
    EQUAL           reduce using rule 180 (call_action -> builtin_call .)
    DIFF            reduce using rule 180 (call_action -> builtin_call .)
    GREATER         reduce using rule 180 (call_action -> builtin_call .)
    GREATEREQ       reduce using rule 180 (call_action -> builtin_call .)
    LESS            reduce using rule 180 (call_action -> builtin_call .)
    LESSEQ          reduce using rule 180 (call_action -> builtin_call .)
    IN              reduce using rule 180 (call_action -> builtin_call .)
    THEN            reduce using rule 180 (call_action -> builtin_call .)
    RBRACKET        reduce using rule 180 (call_action -> builtin_call .)
    COMMA           reduce using rule 180 (call_action -> builtin_call .)
    COLON           reduce using rule 180 (call_action -> builtin_call .)
    RPAREN          reduce using rule 180 (call_action -> builtin_call .)
    ID              reduce using rule 180 (call_action -> builtin_call .)
    ELSE            reduce using rule 180 (call_action -> builtin_call .)
    ELSIF           reduce using rule 180 (call_action -> builtin_call .)
    TO              reduce using rule 180 (call_action -> builtin_call .)
    DOWN            reduce using rule 180 (call_action -> builtin_call .)
    BY              reduce using rule 180 (call_action -> builtin_call .)
    FI              reduce using rule 180 (call_action -> builtin_call .)
    WHILE           reduce using rule 180 (call_action -> builtin_call .)


state 25

    (5) statement -> synonym_statement .

    END             reduce using rule 5 (statement -> synonym_statement .)
    DCL             reduce using rule 5 (statement -> synonym_statement .)
    SYN             reduce using rule 5 (statement -> synonym_statement .)
    TYPE            reduce using rule 5 (statement -> synonym_statement .)
    ID              reduce using rule 5 (statement -> synonym_statement .)
    EXIT            reduce using rule 5 (statement -> synonym_statement .)
    RETURN          reduce using rule 5 (statement -> synonym_statement .)
    RESULT          reduce using rule 5 (statement -> synonym_statement .)
    IF              reduce using rule 5 (statement -> synonym_statement .)
    DO              reduce using rule 5 (statement -> synonym_statement .)
    ABS             reduce using rule 5 (statement -> synonym_statement .)
    ASC             reduce using rule 5 (statement -> synonym_statement .)
    NUM             reduce using rule 5 (statement -> synonym_statement .)
    UPPER           reduce using rule 5 (statement -> synonym_statement .)
    LOWER           reduce using rule 5 (statement -> synonym_statement .)
    LENGTH          reduce using rule 5 (statement -> synonym_statement .)
    READ            reduce using rule 5 (statement -> synonym_statement .)
    PRINT           reduce using rule 5 (statement -> synonym_statement .)
    $end            reduce using rule 5 (statement -> synonym_statement .)


state 26

    (190) result_action -> RESULT . result
    (191) result -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 93
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    result                         shift and go to state 86
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 27

    (198) builtin_name -> LOWER .

    LPAREN          reduce using rule 198 (builtin_name -> LOWER .)


state 28

    (131) label_id -> identifier .
    (57) location -> identifier .
    (181) procedure_call -> identifier . LPAREN RPAREN
    (182) procedure_call -> identifier . LPAREN parameter_list RPAREN

    COLON           reduce using rule 131 (label_id -> identifier .)
    ARROW           reduce using rule 57 (location -> identifier .)
    ASSIGN          reduce using rule 57 (location -> identifier .)
    INCREASE        reduce using rule 57 (location -> identifier .)
    DECREASE        reduce using rule 57 (location -> identifier .)
    MULCREASE       reduce using rule 57 (location -> identifier .)
    DIVCREASE       reduce using rule 57 (location -> identifier .)
    MODCREASE       reduce using rule 57 (location -> identifier .)
    LBRACKET        reduce using rule 57 (location -> identifier .)
    LPAREN          shift and go to state 100


state 29

    (0) S' -> program .



state 30

    (58) location -> dereferenced_reference .

    ARROW           reduce using rule 58 (location -> dereferenced_reference .)
    ASSIGN          reduce using rule 58 (location -> dereferenced_reference .)
    INCREASE        reduce using rule 58 (location -> dereferenced_reference .)
    DECREASE        reduce using rule 58 (location -> dereferenced_reference .)
    MULCREASE       reduce using rule 58 (location -> dereferenced_reference .)
    DIVCREASE       reduce using rule 58 (location -> dereferenced_reference .)
    MODCREASE       reduce using rule 58 (location -> dereferenced_reference .)
    LBRACKET        reduce using rule 58 (location -> dereferenced_reference .)
    TIMES           reduce using rule 58 (location -> dereferenced_reference .)
    DIVIDE          reduce using rule 58 (location -> dereferenced_reference .)
    MOD             reduce using rule 58 (location -> dereferenced_reference .)
    PLUS            reduce using rule 58 (location -> dereferenced_reference .)
    MINUS           reduce using rule 58 (location -> dereferenced_reference .)
    STRCAT          reduce using rule 58 (location -> dereferenced_reference .)
    AND             reduce using rule 58 (location -> dereferenced_reference .)
    OR              reduce using rule 58 (location -> dereferenced_reference .)
    EQUAL           reduce using rule 58 (location -> dereferenced_reference .)
    DIFF            reduce using rule 58 (location -> dereferenced_reference .)
    GREATER         reduce using rule 58 (location -> dereferenced_reference .)
    GREATEREQ       reduce using rule 58 (location -> dereferenced_reference .)
    LESS            reduce using rule 58 (location -> dereferenced_reference .)
    LESSEQ          reduce using rule 58 (location -> dereferenced_reference .)
    IN              reduce using rule 58 (location -> dereferenced_reference .)
    THEN            reduce using rule 58 (location -> dereferenced_reference .)
    COLON           reduce using rule 58 (location -> dereferenced_reference .)
    RPAREN          reduce using rule 58 (location -> dereferenced_reference .)
    COMMA           reduce using rule 58 (location -> dereferenced_reference .)
    SEMI            reduce using rule 58 (location -> dereferenced_reference .)
    RBRACKET        reduce using rule 58 (location -> dereferenced_reference .)
    ID              reduce using rule 58 (location -> dereferenced_reference .)
    ELSE            reduce using rule 58 (location -> dereferenced_reference .)
    ELSIF           reduce using rule 58 (location -> dereferenced_reference .)
    TO              reduce using rule 58 (location -> dereferenced_reference .)
    DOWN            reduce using rule 58 (location -> dereferenced_reference .)
    BY              reduce using rule 58 (location -> dereferenced_reference .)
    FI              reduce using rule 58 (location -> dereferenced_reference .)
    WHILE           reduce using rule 58 (location -> dereferenced_reference .)


state 31

    (9) declaration_statement -> DCL . declaration_list SEMI
    (10) declaration_list -> . declaration
    (11) declaration_list -> . declaration_list COMMA declaration
    (12) declaration -> . identifier_list mode
    (13) declaration -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 45
    declaration_list               shift and go to state 101
    declaration                    shift and go to state 102
    identifier_list                shift and go to state 103

state 32

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (24) newmode_statement -> . TYPE newmode_list SEMI
    (202) procedure_statement -> . label_id COLON procedure_definition SEMI
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (131) label_id -> . identifier
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (17) identifier -> . ID
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    $end            reduce using rule 1 (program -> statement_list .)
    DCL             shift and go to state 31
    SYN             shift and go to state 4
    TYPE            shift and go to state 1
    ID              shift and go to state 22
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    synonym_statement              shift and go to state 25
    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    statement                      shift and go to state 104
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 6
    identifier                     shift and go to state 28
    if_action                      shift and go to state 7
    location                       shift and go to state 13
    action_statement               shift and go to state 10
    dereferenced_reference         shift and go to state 30
    procedure_call                 shift and go to state 34
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    return_action                  shift and go to state 44
    array_element                  shift and go to state 9
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    declaration_statement          shift and go to state 36
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    procedure_statement            shift and go to state 42
    newmode_statement              shift and go to state 21
    action                         shift and go to state 33
    builtin_call                   shift and go to state 24

state 33

    (129) action_statement -> action . SEMI

    SEMI            shift and go to state 105


state 34

    (179) call_action -> procedure_call .

    SEMI            reduce using rule 179 (call_action -> procedure_call .)
    ARROW           reduce using rule 179 (call_action -> procedure_call .)
    ASSIGN          reduce using rule 179 (call_action -> procedure_call .)
    INCREASE        reduce using rule 179 (call_action -> procedure_call .)
    DECREASE        reduce using rule 179 (call_action -> procedure_call .)
    MULCREASE       reduce using rule 179 (call_action -> procedure_call .)
    DIVCREASE       reduce using rule 179 (call_action -> procedure_call .)
    MODCREASE       reduce using rule 179 (call_action -> procedure_call .)
    LBRACKET        reduce using rule 179 (call_action -> procedure_call .)
    TIMES           reduce using rule 179 (call_action -> procedure_call .)
    DIVIDE          reduce using rule 179 (call_action -> procedure_call .)
    MOD             reduce using rule 179 (call_action -> procedure_call .)
    PLUS            reduce using rule 179 (call_action -> procedure_call .)
    MINUS           reduce using rule 179 (call_action -> procedure_call .)
    STRCAT          reduce using rule 179 (call_action -> procedure_call .)
    AND             reduce using rule 179 (call_action -> procedure_call .)
    OR              reduce using rule 179 (call_action -> procedure_call .)
    EQUAL           reduce using rule 179 (call_action -> procedure_call .)
    DIFF            reduce using rule 179 (call_action -> procedure_call .)
    GREATER         reduce using rule 179 (call_action -> procedure_call .)
    GREATEREQ       reduce using rule 179 (call_action -> procedure_call .)
    LESS            reduce using rule 179 (call_action -> procedure_call .)
    LESSEQ          reduce using rule 179 (call_action -> procedure_call .)
    IN              reduce using rule 179 (call_action -> procedure_call .)
    THEN            reduce using rule 179 (call_action -> procedure_call .)
    RBRACKET        reduce using rule 179 (call_action -> procedure_call .)
    COMMA           reduce using rule 179 (call_action -> procedure_call .)
    COLON           reduce using rule 179 (call_action -> procedure_call .)
    RPAREN          reduce using rule 179 (call_action -> procedure_call .)
    ID              reduce using rule 179 (call_action -> procedure_call .)
    ELSE            reduce using rule 179 (call_action -> procedure_call .)
    ELSIF           reduce using rule 179 (call_action -> procedure_call .)
    TO              reduce using rule 179 (call_action -> procedure_call .)
    DOWN            reduce using rule 179 (call_action -> procedure_call .)
    BY              reduce using rule 179 (call_action -> procedure_call .)
    FI              reduce using rule 179 (call_action -> procedure_call .)
    WHILE           reduce using rule 179 (call_action -> procedure_call .)


state 35

    (158) do_action -> DO . OD
    (159) do_action -> DO . control_part SEMI OD
    (160) do_action -> DO . action_statement_list OD
    (161) do_action -> DO . control_part SEMI action_statement_list OD
    (162) control_part -> . while_control
    (163) control_part -> . FOR for_control
    (164) control_part -> . FOR for_control while_control
    (152) action_statement_list -> . action_statement
    (153) action_statement_list -> . action_statement_list action_statement
    (178) while_control -> . WHILE boolean_expression
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    OD              shift and go to state 111
    FOR             shift and go to state 108
    WHILE           shift and go to state 109
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    control_part                   shift and go to state 110
    array_slice                    shift and go to state 18
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    action_statement               shift and go to state 107
    dereferenced_reference         shift and go to state 30
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 112
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    while_control                  shift and go to state 113
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 36

    (4) statement -> declaration_statement .

    END             reduce using rule 4 (statement -> declaration_statement .)
    DCL             reduce using rule 4 (statement -> declaration_statement .)
    SYN             reduce using rule 4 (statement -> declaration_statement .)
    TYPE            reduce using rule 4 (statement -> declaration_statement .)
    ID              reduce using rule 4 (statement -> declaration_statement .)
    EXIT            reduce using rule 4 (statement -> declaration_statement .)
    RETURN          reduce using rule 4 (statement -> declaration_statement .)
    RESULT          reduce using rule 4 (statement -> declaration_statement .)
    IF              reduce using rule 4 (statement -> declaration_statement .)
    DO              reduce using rule 4 (statement -> declaration_statement .)
    ABS             reduce using rule 4 (statement -> declaration_statement .)
    ASC             reduce using rule 4 (statement -> declaration_statement .)
    NUM             reduce using rule 4 (statement -> declaration_statement .)
    UPPER           reduce using rule 4 (statement -> declaration_statement .)
    LOWER           reduce using rule 4 (statement -> declaration_statement .)
    LENGTH          reduce using rule 4 (statement -> declaration_statement .)
    READ            reduce using rule 4 (statement -> declaration_statement .)
    PRINT           reduce using rule 4 (statement -> declaration_statement .)
    $end            reduce using rule 4 (statement -> declaration_statement .)


state 37

    (197) builtin_name -> UPPER .

    LPAREN          reduce using rule 197 (builtin_name -> UPPER .)


state 38

    (192) builtin_call -> builtin_name . LPAREN RPAREN
    (193) builtin_call -> builtin_name . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 114


state 39

    (195) builtin_name -> ASC .

    LPAREN          reduce using rule 195 (builtin_name -> ASC .)


state 40

    (188) return_action -> RETURN .
    (189) return_action -> RETURN . result
    (191) result -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    SEMI            reduce using rule 188 (return_action -> RETURN .)
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 93
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    result                         shift and go to state 115
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 41

    (148) if_action -> IF . boolean_expression then_clause FI
    (149) if_action -> IF . boolean_expression then_clause else_clause FI
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    expression                     shift and go to state 116
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    dereferenced_reference         shift and go to state 30
    boolean_expression             shift and go to state 117
    array_primitive_value          shift and go to state 75
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    location                       shift and go to state 84
    boolean_literal                shift and go to state 67
    value_array_slice              shift and go to state 85
    value_array_element            shift and go to state 76
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 42

    (7) statement -> procedure_statement .

    END             reduce using rule 7 (statement -> procedure_statement .)
    DCL             reduce using rule 7 (statement -> procedure_statement .)
    SYN             reduce using rule 7 (statement -> procedure_statement .)
    TYPE            reduce using rule 7 (statement -> procedure_statement .)
    ID              reduce using rule 7 (statement -> procedure_statement .)
    EXIT            reduce using rule 7 (statement -> procedure_statement .)
    RETURN          reduce using rule 7 (statement -> procedure_statement .)
    RESULT          reduce using rule 7 (statement -> procedure_statement .)
    IF              reduce using rule 7 (statement -> procedure_statement .)
    DO              reduce using rule 7 (statement -> procedure_statement .)
    ABS             reduce using rule 7 (statement -> procedure_statement .)
    ASC             reduce using rule 7 (statement -> procedure_statement .)
    NUM             reduce using rule 7 (statement -> procedure_statement .)
    UPPER           reduce using rule 7 (statement -> procedure_statement .)
    LOWER           reduce using rule 7 (statement -> procedure_statement .)
    LENGTH          reduce using rule 7 (statement -> procedure_statement .)
    READ            reduce using rule 7 (statement -> procedure_statement .)
    PRINT           reduce using rule 7 (statement -> procedure_statement .)
    $end            reduce using rule 7 (statement -> procedure_statement .)


state 43

    (196) builtin_name -> NUM .

    LPAREN          reduce using rule 196 (builtin_name -> NUM .)


state 44

    (136) action -> return_action .

    SEMI            reduce using rule 136 (action -> return_action .)


state 45

    (15) identifier_list -> identifier .

    COMMA           reduce using rule 15 (identifier_list -> identifier .)
    REF             reduce using rule 15 (identifier_list -> identifier .)
    ID              reduce using rule 15 (identifier_list -> identifier .)
    INT             reduce using rule 15 (identifier_list -> identifier .)
    BOOL            reduce using rule 15 (identifier_list -> identifier .)
    CHAR            reduce using rule 15 (identifier_list -> identifier .)
    CHARS           reduce using rule 15 (identifier_list -> identifier .)
    ARRAY           reduce using rule 15 (identifier_list -> identifier .)
    ASSIGN          reduce using rule 15 (identifier_list -> identifier .)


state 46

    (24) newmode_statement -> TYPE newmode_list . SEMI
    (26) newmode_list -> newmode_list . COMMA mode_definition

    SEMI            shift and go to state 118
    COMMA           shift and go to state 119


state 47

    (27) mode_definition -> identifier_list . ASSIGN mode
    (16) identifier_list -> identifier_list . COMMA identifier

    ASSIGN          shift and go to state 120
    COMMA           shift and go to state 121


state 48

    (25) newmode_list -> mode_definition .

    SEMI            reduce using rule 25 (newmode_list -> mode_definition .)
    COMMA           reduce using rule 25 (newmode_list -> mode_definition .)


state 49

    (18) synonym_statement -> SYN synonym_list . SEMI
    (20) synonym_list -> synonym_list . synonym_definition
    (21) synonym_definition -> . identifier_list ASSIGN constant_expression
    (22) synonym_definition -> . identifier_list mode ASSIGN constant_expression
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    SEMI            shift and go to state 123
    ID              shift and go to state 22

    identifier                     shift and go to state 45
    synonym_definition             shift and go to state 122
    identifier_list                shift and go to state 51

state 50

    (19) synonym_list -> synonym_definition .

    SEMI            reduce using rule 19 (synonym_list -> synonym_definition .)
    ID              reduce using rule 19 (synonym_list -> synonym_definition .)


state 51

    (21) synonym_definition -> identifier_list . ASSIGN constant_expression
    (22) synonym_definition -> identifier_list . mode ASSIGN constant_expression
    (16) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    ASSIGN          shift and go to state 126
    COMMA           shift and go to state 121
    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    identifier                     shift and go to state 137
    mode                           shift and go to state 134
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    integer_mode                   shift and go to state 125
    array_mode                     shift and go to state 129
    discrete_range_mode            shift and go to state 132
    composite_mode                 shift and go to state 131
    mode_name                      shift and go to state 128
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 52

    (202) procedure_statement -> label_id COLON . procedure_definition SEMI
    (130) action_statement -> label_id COLON . action SEMI
    (203) procedure_definition -> . formal_procedure_head END
    (204) procedure_definition -> . formal_procedure_head statement_list END
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (205) formal_procedure_head -> . PROC parenthesis_gambiarra SEMI
    (206) formal_procedure_head -> . PROC parenthesis_gambiarra result_spec SEMI
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    PROC            shift and go to state 145
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ID              shift and go to state 22
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    identifier                     shift and go to state 72
    array_slice                    shift and go to state 18
    procedure_definition           shift and go to state 143
    builtin_name                   shift and go to state 38
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action                         shift and go to state 146
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    formal_procedure_head          shift and go to state 144
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 53

    (62) dereferenced_reference -> location ARROW .

    ARROW           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    TIMES           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    DIVIDE          reduce using rule 62 (dereferenced_reference -> location ARROW .)
    MOD             reduce using rule 62 (dereferenced_reference -> location ARROW .)
    PLUS            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    MINUS           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    STRCAT          reduce using rule 62 (dereferenced_reference -> location ARROW .)
    AND             reduce using rule 62 (dereferenced_reference -> location ARROW .)
    OR              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    EQUAL           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    DIFF            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    GREATER         reduce using rule 62 (dereferenced_reference -> location ARROW .)
    GREATEREQ       reduce using rule 62 (dereferenced_reference -> location ARROW .)
    LESS            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    LESSEQ          reduce using rule 62 (dereferenced_reference -> location ARROW .)
    IN              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    RBRACKET        reduce using rule 62 (dereferenced_reference -> location ARROW .)
    LBRACKET        reduce using rule 62 (dereferenced_reference -> location ARROW .)
    ASSIGN          reduce using rule 62 (dereferenced_reference -> location ARROW .)
    INCREASE        reduce using rule 62 (dereferenced_reference -> location ARROW .)
    DECREASE        reduce using rule 62 (dereferenced_reference -> location ARROW .)
    MULCREASE       reduce using rule 62 (dereferenced_reference -> location ARROW .)
    DIVCREASE       reduce using rule 62 (dereferenced_reference -> location ARROW .)
    MODCREASE       reduce using rule 62 (dereferenced_reference -> location ARROW .)
    TO              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    DOWN            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    SEMI            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    THEN            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    COMMA           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    COLON           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    RPAREN          reduce using rule 62 (dereferenced_reference -> location ARROW .)
    ID              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    ELSE            reduce using rule 62 (dereferenced_reference -> location ARROW .)
    ELSIF           reduce using rule 62 (dereferenced_reference -> location ARROW .)
    BY              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    FI              reduce using rule 62 (dereferenced_reference -> location ARROW .)
    WHILE           reduce using rule 62 (dereferenced_reference -> location ARROW .)


state 54

    (145) closed_dyadic_operator -> MULCREASE .

    IF              reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    MINUS           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    NOT             reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    ARROW           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    ID              reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    LPAREN          reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    ICONST          reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    FALSE           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    TRUE            reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    CCONST          reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    NULL            reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    SCONST          reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    ABS             reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    ASC             reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    NUM             reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    UPPER           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    LOWER           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    LENGTH          reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    READ            reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)
    PRINT           reduce using rule 145 (closed_dyadic_operator -> MULCREASE .)


state 55

    (142) assigning_operator -> closed_dyadic_operator .

    IF              reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    MINUS           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    NOT             reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    ARROW           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    ID              reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    LPAREN          reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    ICONST          reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    FALSE           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    TRUE            reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    CCONST          reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    NULL            reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    SCONST          reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    ABS             reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    ASC             reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    NUM             reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    UPPER           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    LOWER           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    LENGTH          reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    READ            reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)
    PRINT           reduce using rule 142 (assigning_operator -> closed_dyadic_operator .)


state 56

    (147) closed_dyadic_operator -> MODCREASE .

    IF              reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    MINUS           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    NOT             reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    ARROW           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    ID              reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    LPAREN          reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    ICONST          reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    FALSE           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    TRUE            reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    CCONST          reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    NULL            reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    SCONST          reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    ABS             reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    ASC             reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    NUM             reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    UPPER           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    LOWER           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    LENGTH          reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    READ            reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)
    PRINT           reduce using rule 147 (closed_dyadic_operator -> MODCREASE .)


state 57

    (143) closed_dyadic_operator -> INCREASE .

    IF              reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    MINUS           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    NOT             reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    ARROW           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    ID              reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    LPAREN          reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    ICONST          reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    FALSE           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    TRUE            reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    CCONST          reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    NULL            reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    SCONST          reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    ABS             reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    ASC             reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    NUM             reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    UPPER           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    LOWER           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    LENGTH          reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    READ            reduce using rule 143 (closed_dyadic_operator -> INCREASE .)
    PRINT           reduce using rule 143 (closed_dyadic_operator -> INCREASE .)


state 58

    (141) assigning_operator -> ASSIGN .

    IF              reduce using rule 141 (assigning_operator -> ASSIGN .)
    MINUS           reduce using rule 141 (assigning_operator -> ASSIGN .)
    NOT             reduce using rule 141 (assigning_operator -> ASSIGN .)
    ARROW           reduce using rule 141 (assigning_operator -> ASSIGN .)
    ID              reduce using rule 141 (assigning_operator -> ASSIGN .)
    LPAREN          reduce using rule 141 (assigning_operator -> ASSIGN .)
    ICONST          reduce using rule 141 (assigning_operator -> ASSIGN .)
    FALSE           reduce using rule 141 (assigning_operator -> ASSIGN .)
    TRUE            reduce using rule 141 (assigning_operator -> ASSIGN .)
    CCONST          reduce using rule 141 (assigning_operator -> ASSIGN .)
    NULL            reduce using rule 141 (assigning_operator -> ASSIGN .)
    SCONST          reduce using rule 141 (assigning_operator -> ASSIGN .)
    ABS             reduce using rule 141 (assigning_operator -> ASSIGN .)
    ASC             reduce using rule 141 (assigning_operator -> ASSIGN .)
    NUM             reduce using rule 141 (assigning_operator -> ASSIGN .)
    UPPER           reduce using rule 141 (assigning_operator -> ASSIGN .)
    LOWER           reduce using rule 141 (assigning_operator -> ASSIGN .)
    LENGTH          reduce using rule 141 (assigning_operator -> ASSIGN .)
    READ            reduce using rule 141 (assigning_operator -> ASSIGN .)
    PRINT           reduce using rule 141 (assigning_operator -> ASSIGN .)


state 59

    (144) closed_dyadic_operator -> DECREASE .

    IF              reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    MINUS           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    NOT             reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    ARROW           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    ID              reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    LPAREN          reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    ICONST          reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    FALSE           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    TRUE            reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    CCONST          reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    NULL            reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    SCONST          reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    ABS             reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    ASC             reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    NUM             reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    UPPER           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    LOWER           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    LENGTH          reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    READ            reduce using rule 144 (closed_dyadic_operator -> DECREASE .)
    PRINT           reduce using rule 144 (closed_dyadic_operator -> DECREASE .)


state 60

    (140) assignment_action -> location assigning_operator . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 147
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 61

    (146) closed_dyadic_operator -> DIVCREASE .

    IF              reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    MINUS           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    NOT             reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    ARROW           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    ID              reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    LPAREN          reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    ICONST          reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    FALSE           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    TRUE            reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    CCONST          reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    NULL            reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    SCONST          reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    ABS             reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    ASC             reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    NUM             reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    UPPER           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    LOWER           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    LENGTH          reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    READ            reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)
    PRINT           reduce using rule 146 (closed_dyadic_operator -> DIVCREASE .)


state 62

    (63) array_element -> array_location LBRACKET . expression_list RBRACKET
    (66) array_slice -> array_location LBRACKET . lower_bound COLON upper_bound RBRACKET
    (64) expression_list -> . expression
    (65) expression_list -> . expression_list COMMA expression
    (43) lower_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    lower_bound                    shift and go to state 148
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    operand2                       shift and go to state 90
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    expression_list                shift and go to state 149
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    array_location                 shift and go to state 16
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    expression                     shift and go to state 150
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 63

    (187) exit_label_id -> identifier .

    SEMI            reduce using rule 187 (exit_label_id -> identifier .)


state 64

    (186) exit_action -> EXIT exit_label_id .

    SEMI            reduce using rule 186 (exit_action -> EXIT exit_label_id .)


state 65

    (123) monadic_operator -> MINUS .

    ARROW           reduce using rule 123 (monadic_operator -> MINUS .)
    ID              reduce using rule 123 (monadic_operator -> MINUS .)
    LPAREN          reduce using rule 123 (monadic_operator -> MINUS .)
    ICONST          reduce using rule 123 (monadic_operator -> MINUS .)
    FALSE           reduce using rule 123 (monadic_operator -> MINUS .)
    TRUE            reduce using rule 123 (monadic_operator -> MINUS .)
    CCONST          reduce using rule 123 (monadic_operator -> MINUS .)
    NULL            reduce using rule 123 (monadic_operator -> MINUS .)
    SCONST          reduce using rule 123 (monadic_operator -> MINUS .)
    ABS             reduce using rule 123 (monadic_operator -> MINUS .)
    ASC             reduce using rule 123 (monadic_operator -> MINUS .)
    NUM             reduce using rule 123 (monadic_operator -> MINUS .)
    UPPER           reduce using rule 123 (monadic_operator -> MINUS .)
    LOWER           reduce using rule 123 (monadic_operator -> MINUS .)
    LENGTH          reduce using rule 123 (monadic_operator -> MINUS .)
    READ            reduce using rule 123 (monadic_operator -> MINUS .)
    PRINT           reduce using rule 123 (monadic_operator -> MINUS .)


state 66

    (75) literal -> empty_literal .

    TIMES           reduce using rule 75 (literal -> empty_literal .)
    DIVIDE          reduce using rule 75 (literal -> empty_literal .)
    MOD             reduce using rule 75 (literal -> empty_literal .)
    PLUS            reduce using rule 75 (literal -> empty_literal .)
    MINUS           reduce using rule 75 (literal -> empty_literal .)
    STRCAT          reduce using rule 75 (literal -> empty_literal .)
    AND             reduce using rule 75 (literal -> empty_literal .)
    OR              reduce using rule 75 (literal -> empty_literal .)
    EQUAL           reduce using rule 75 (literal -> empty_literal .)
    DIFF            reduce using rule 75 (literal -> empty_literal .)
    GREATER         reduce using rule 75 (literal -> empty_literal .)
    GREATEREQ       reduce using rule 75 (literal -> empty_literal .)
    LESS            reduce using rule 75 (literal -> empty_literal .)
    LESSEQ          reduce using rule 75 (literal -> empty_literal .)
    IN              reduce using rule 75 (literal -> empty_literal .)
    THEN            reduce using rule 75 (literal -> empty_literal .)
    LBRACKET        reduce using rule 75 (literal -> empty_literal .)
    COLON           reduce using rule 75 (literal -> empty_literal .)
    SEMI            reduce using rule 75 (literal -> empty_literal .)
    WHILE           reduce using rule 75 (literal -> empty_literal .)
    RPAREN          reduce using rule 75 (literal -> empty_literal .)
    RBRACKET        reduce using rule 75 (literal -> empty_literal .)
    COMMA           reduce using rule 75 (literal -> empty_literal .)
    ID              reduce using rule 75 (literal -> empty_literal .)
    ELSE            reduce using rule 75 (literal -> empty_literal .)
    ELSIF           reduce using rule 75 (literal -> empty_literal .)
    TO              reduce using rule 75 (literal -> empty_literal .)
    DOWN            reduce using rule 75 (literal -> empty_literal .)
    BY              reduce using rule 75 (literal -> empty_literal .)
    FI              reduce using rule 75 (literal -> empty_literal .)


state 67

    (73) literal -> boolean_literal .

    TIMES           reduce using rule 73 (literal -> boolean_literal .)
    DIVIDE          reduce using rule 73 (literal -> boolean_literal .)
    MOD             reduce using rule 73 (literal -> boolean_literal .)
    PLUS            reduce using rule 73 (literal -> boolean_literal .)
    MINUS           reduce using rule 73 (literal -> boolean_literal .)
    STRCAT          reduce using rule 73 (literal -> boolean_literal .)
    AND             reduce using rule 73 (literal -> boolean_literal .)
    OR              reduce using rule 73 (literal -> boolean_literal .)
    EQUAL           reduce using rule 73 (literal -> boolean_literal .)
    DIFF            reduce using rule 73 (literal -> boolean_literal .)
    GREATER         reduce using rule 73 (literal -> boolean_literal .)
    GREATEREQ       reduce using rule 73 (literal -> boolean_literal .)
    LESS            reduce using rule 73 (literal -> boolean_literal .)
    LESSEQ          reduce using rule 73 (literal -> boolean_literal .)
    IN              reduce using rule 73 (literal -> boolean_literal .)
    THEN            reduce using rule 73 (literal -> boolean_literal .)
    LBRACKET        reduce using rule 73 (literal -> boolean_literal .)
    COLON           reduce using rule 73 (literal -> boolean_literal .)
    SEMI            reduce using rule 73 (literal -> boolean_literal .)
    WHILE           reduce using rule 73 (literal -> boolean_literal .)
    RPAREN          reduce using rule 73 (literal -> boolean_literal .)
    RBRACKET        reduce using rule 73 (literal -> boolean_literal .)
    COMMA           reduce using rule 73 (literal -> boolean_literal .)
    ID              reduce using rule 73 (literal -> boolean_literal .)
    ELSE            reduce using rule 73 (literal -> boolean_literal .)
    ELSIF           reduce using rule 73 (literal -> boolean_literal .)
    TO              reduce using rule 73 (literal -> boolean_literal .)
    DOWN            reduce using rule 73 (literal -> boolean_literal .)
    BY              reduce using rule 73 (literal -> boolean_literal .)
    FI              reduce using rule 73 (literal -> boolean_literal .)


state 68

    (122) operand3 -> monadic_operator . operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    procedure_call                 shift and go to state 34
    primitive_value                shift and go to state 87
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    array_primitive_value          shift and go to state 75
    operand4                       shift and go to state 151
    value_array_element            shift and go to state 76
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 69

    (86) parenthesized_expression -> LPAREN . expression RPAREN
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 152
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 70

    (76) literal -> character_string_literal .

    TIMES           reduce using rule 76 (literal -> character_string_literal .)
    DIVIDE          reduce using rule 76 (literal -> character_string_literal .)
    MOD             reduce using rule 76 (literal -> character_string_literal .)
    PLUS            reduce using rule 76 (literal -> character_string_literal .)
    MINUS           reduce using rule 76 (literal -> character_string_literal .)
    STRCAT          reduce using rule 76 (literal -> character_string_literal .)
    AND             reduce using rule 76 (literal -> character_string_literal .)
    OR              reduce using rule 76 (literal -> character_string_literal .)
    EQUAL           reduce using rule 76 (literal -> character_string_literal .)
    DIFF            reduce using rule 76 (literal -> character_string_literal .)
    GREATER         reduce using rule 76 (literal -> character_string_literal .)
    GREATEREQ       reduce using rule 76 (literal -> character_string_literal .)
    LESS            reduce using rule 76 (literal -> character_string_literal .)
    LESSEQ          reduce using rule 76 (literal -> character_string_literal .)
    IN              reduce using rule 76 (literal -> character_string_literal .)
    THEN            reduce using rule 76 (literal -> character_string_literal .)
    LBRACKET        reduce using rule 76 (literal -> character_string_literal .)
    COLON           reduce using rule 76 (literal -> character_string_literal .)
    SEMI            reduce using rule 76 (literal -> character_string_literal .)
    WHILE           reduce using rule 76 (literal -> character_string_literal .)
    RPAREN          reduce using rule 76 (literal -> character_string_literal .)
    RBRACKET        reduce using rule 76 (literal -> character_string_literal .)
    COMMA           reduce using rule 76 (literal -> character_string_literal .)
    ID              reduce using rule 76 (literal -> character_string_literal .)
    ELSE            reduce using rule 76 (literal -> character_string_literal .)
    ELSIF           reduce using rule 76 (literal -> character_string_literal .)
    TO              reduce using rule 76 (literal -> character_string_literal .)
    DOWN            reduce using rule 76 (literal -> character_string_literal .)
    BY              reduce using rule 76 (literal -> character_string_literal .)
    FI              reduce using rule 76 (literal -> character_string_literal .)


state 71

    (78) boolean_literal -> FALSE .

    TIMES           reduce using rule 78 (boolean_literal -> FALSE .)
    DIVIDE          reduce using rule 78 (boolean_literal -> FALSE .)
    MOD             reduce using rule 78 (boolean_literal -> FALSE .)
    PLUS            reduce using rule 78 (boolean_literal -> FALSE .)
    MINUS           reduce using rule 78 (boolean_literal -> FALSE .)
    STRCAT          reduce using rule 78 (boolean_literal -> FALSE .)
    AND             reduce using rule 78 (boolean_literal -> FALSE .)
    OR              reduce using rule 78 (boolean_literal -> FALSE .)
    EQUAL           reduce using rule 78 (boolean_literal -> FALSE .)
    DIFF            reduce using rule 78 (boolean_literal -> FALSE .)
    GREATER         reduce using rule 78 (boolean_literal -> FALSE .)
    GREATEREQ       reduce using rule 78 (boolean_literal -> FALSE .)
    LESS            reduce using rule 78 (boolean_literal -> FALSE .)
    LESSEQ          reduce using rule 78 (boolean_literal -> FALSE .)
    IN              reduce using rule 78 (boolean_literal -> FALSE .)
    RBRACKET        reduce using rule 78 (boolean_literal -> FALSE .)
    LBRACKET        reduce using rule 78 (boolean_literal -> FALSE .)
    SEMI            reduce using rule 78 (boolean_literal -> FALSE .)
    THEN            reduce using rule 78 (boolean_literal -> FALSE .)
    COMMA           reduce using rule 78 (boolean_literal -> FALSE .)
    COLON           reduce using rule 78 (boolean_literal -> FALSE .)
    RPAREN          reduce using rule 78 (boolean_literal -> FALSE .)
    ID              reduce using rule 78 (boolean_literal -> FALSE .)
    ELSE            reduce using rule 78 (boolean_literal -> FALSE .)
    ELSIF           reduce using rule 78 (boolean_literal -> FALSE .)
    TO              reduce using rule 78 (boolean_literal -> FALSE .)
    DOWN            reduce using rule 78 (boolean_literal -> FALSE .)
    BY              reduce using rule 78 (boolean_literal -> FALSE .)
    FI              reduce using rule 78 (boolean_literal -> FALSE .)
    WHILE           reduce using rule 78 (boolean_literal -> FALSE .)


state 72

    (57) location -> identifier .
    (181) procedure_call -> identifier . LPAREN RPAREN
    (182) procedure_call -> identifier . LPAREN parameter_list RPAREN

    ARROW           reduce using rule 57 (location -> identifier .)
    TIMES           reduce using rule 57 (location -> identifier .)
    DIVIDE          reduce using rule 57 (location -> identifier .)
    MOD             reduce using rule 57 (location -> identifier .)
    PLUS            reduce using rule 57 (location -> identifier .)
    MINUS           reduce using rule 57 (location -> identifier .)
    STRCAT          reduce using rule 57 (location -> identifier .)
    AND             reduce using rule 57 (location -> identifier .)
    OR              reduce using rule 57 (location -> identifier .)
    EQUAL           reduce using rule 57 (location -> identifier .)
    DIFF            reduce using rule 57 (location -> identifier .)
    GREATER         reduce using rule 57 (location -> identifier .)
    GREATEREQ       reduce using rule 57 (location -> identifier .)
    LESS            reduce using rule 57 (location -> identifier .)
    LESSEQ          reduce using rule 57 (location -> identifier .)
    IN              reduce using rule 57 (location -> identifier .)
    THEN            reduce using rule 57 (location -> identifier .)
    LBRACKET        reduce using rule 57 (location -> identifier .)
    COLON           reduce using rule 57 (location -> identifier .)
    RPAREN          reduce using rule 57 (location -> identifier .)
    COMMA           reduce using rule 57 (location -> identifier .)
    SEMI            reduce using rule 57 (location -> identifier .)
    RBRACKET        reduce using rule 57 (location -> identifier .)
    ID              reduce using rule 57 (location -> identifier .)
    ELSE            reduce using rule 57 (location -> identifier .)
    ELSIF           reduce using rule 57 (location -> identifier .)
    TO              reduce using rule 57 (location -> identifier .)
    DOWN            reduce using rule 57 (location -> identifier .)
    BY              reduce using rule 57 (location -> identifier .)
    FI              reduce using rule 57 (location -> identifier .)
    WHILE           reduce using rule 57 (location -> identifier .)
    ASSIGN          reduce using rule 57 (location -> identifier .)
    INCREASE        reduce using rule 57 (location -> identifier .)
    DECREASE        reduce using rule 57 (location -> identifier .)
    MULCREASE       reduce using rule 57 (location -> identifier .)
    DIVCREASE       reduce using rule 57 (location -> identifier .)
    MODCREASE       reduce using rule 57 (location -> identifier .)
    LPAREN          shift and go to state 100


state 73

    (79) boolean_literal -> TRUE .

    TIMES           reduce using rule 79 (boolean_literal -> TRUE .)
    DIVIDE          reduce using rule 79 (boolean_literal -> TRUE .)
    MOD             reduce using rule 79 (boolean_literal -> TRUE .)
    PLUS            reduce using rule 79 (boolean_literal -> TRUE .)
    MINUS           reduce using rule 79 (boolean_literal -> TRUE .)
    STRCAT          reduce using rule 79 (boolean_literal -> TRUE .)
    AND             reduce using rule 79 (boolean_literal -> TRUE .)
    OR              reduce using rule 79 (boolean_literal -> TRUE .)
    EQUAL           reduce using rule 79 (boolean_literal -> TRUE .)
    DIFF            reduce using rule 79 (boolean_literal -> TRUE .)
    GREATER         reduce using rule 79 (boolean_literal -> TRUE .)
    GREATEREQ       reduce using rule 79 (boolean_literal -> TRUE .)
    LESS            reduce using rule 79 (boolean_literal -> TRUE .)
    LESSEQ          reduce using rule 79 (boolean_literal -> TRUE .)
    IN              reduce using rule 79 (boolean_literal -> TRUE .)
    RBRACKET        reduce using rule 79 (boolean_literal -> TRUE .)
    LBRACKET        reduce using rule 79 (boolean_literal -> TRUE .)
    SEMI            reduce using rule 79 (boolean_literal -> TRUE .)
    THEN            reduce using rule 79 (boolean_literal -> TRUE .)
    COMMA           reduce using rule 79 (boolean_literal -> TRUE .)
    COLON           reduce using rule 79 (boolean_literal -> TRUE .)
    RPAREN          reduce using rule 79 (boolean_literal -> TRUE .)
    ID              reduce using rule 79 (boolean_literal -> TRUE .)
    ELSE            reduce using rule 79 (boolean_literal -> TRUE .)
    ELSIF           reduce using rule 79 (boolean_literal -> TRUE .)
    TO              reduce using rule 79 (boolean_literal -> TRUE .)
    DOWN            reduce using rule 79 (boolean_literal -> TRUE .)
    BY              reduce using rule 79 (boolean_literal -> TRUE .)
    FI              reduce using rule 79 (boolean_literal -> TRUE .)
    WHILE           reduce using rule 79 (boolean_literal -> TRUE .)


state 74

    (126) operand4 -> referenced_location .

    TIMES           reduce using rule 126 (operand4 -> referenced_location .)
    DIVIDE          reduce using rule 126 (operand4 -> referenced_location .)
    MOD             reduce using rule 126 (operand4 -> referenced_location .)
    PLUS            reduce using rule 126 (operand4 -> referenced_location .)
    MINUS           reduce using rule 126 (operand4 -> referenced_location .)
    STRCAT          reduce using rule 126 (operand4 -> referenced_location .)
    AND             reduce using rule 126 (operand4 -> referenced_location .)
    OR              reduce using rule 126 (operand4 -> referenced_location .)
    EQUAL           reduce using rule 126 (operand4 -> referenced_location .)
    DIFF            reduce using rule 126 (operand4 -> referenced_location .)
    GREATER         reduce using rule 126 (operand4 -> referenced_location .)
    GREATEREQ       reduce using rule 126 (operand4 -> referenced_location .)
    LESS            reduce using rule 126 (operand4 -> referenced_location .)
    LESSEQ          reduce using rule 126 (operand4 -> referenced_location .)
    IN              reduce using rule 126 (operand4 -> referenced_location .)
    WHILE           reduce using rule 126 (operand4 -> referenced_location .)
    SEMI            reduce using rule 126 (operand4 -> referenced_location .)
    THEN            reduce using rule 126 (operand4 -> referenced_location .)
    RBRACKET        reduce using rule 126 (operand4 -> referenced_location .)
    COMMA           reduce using rule 126 (operand4 -> referenced_location .)
    COLON           reduce using rule 126 (operand4 -> referenced_location .)
    RPAREN          reduce using rule 126 (operand4 -> referenced_location .)
    ID              reduce using rule 126 (operand4 -> referenced_location .)
    ELSE            reduce using rule 126 (operand4 -> referenced_location .)
    ELSIF           reduce using rule 126 (operand4 -> referenced_location .)
    TO              reduce using rule 126 (operand4 -> referenced_location .)
    DOWN            reduce using rule 126 (operand4 -> referenced_location .)
    BY              reduce using rule 126 (operand4 -> referenced_location .)
    FI              reduce using rule 126 (operand4 -> referenced_location .)


state 75

    (83) value_array_element -> array_primitive_value . LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> array_primitive_value . LBRACKET lower_bound COLON upper_bound RBRACKET

    LBRACKET        shift and go to state 153


state 76

    (69) primitive_value -> value_array_element .

    TIMES           reduce using rule 69 (primitive_value -> value_array_element .)
    DIVIDE          reduce using rule 69 (primitive_value -> value_array_element .)
    MOD             reduce using rule 69 (primitive_value -> value_array_element .)
    PLUS            reduce using rule 69 (primitive_value -> value_array_element .)
    MINUS           reduce using rule 69 (primitive_value -> value_array_element .)
    STRCAT          reduce using rule 69 (primitive_value -> value_array_element .)
    AND             reduce using rule 69 (primitive_value -> value_array_element .)
    OR              reduce using rule 69 (primitive_value -> value_array_element .)
    EQUAL           reduce using rule 69 (primitive_value -> value_array_element .)
    DIFF            reduce using rule 69 (primitive_value -> value_array_element .)
    GREATER         reduce using rule 69 (primitive_value -> value_array_element .)
    GREATEREQ       reduce using rule 69 (primitive_value -> value_array_element .)
    LESS            reduce using rule 69 (primitive_value -> value_array_element .)
    LESSEQ          reduce using rule 69 (primitive_value -> value_array_element .)
    IN              reduce using rule 69 (primitive_value -> value_array_element .)
    SEMI            reduce using rule 69 (primitive_value -> value_array_element .)
    ID              reduce using rule 69 (primitive_value -> value_array_element .)
    LBRACKET        reduce using rule 69 (primitive_value -> value_array_element .)
    RBRACKET        reduce using rule 69 (primitive_value -> value_array_element .)
    COMMA           reduce using rule 69 (primitive_value -> value_array_element .)
    THEN            reduce using rule 69 (primitive_value -> value_array_element .)
    COLON           reduce using rule 69 (primitive_value -> value_array_element .)
    RPAREN          reduce using rule 69 (primitive_value -> value_array_element .)
    ELSE            reduce using rule 69 (primitive_value -> value_array_element .)
    ELSIF           reduce using rule 69 (primitive_value -> value_array_element .)
    TO              reduce using rule 69 (primitive_value -> value_array_element .)
    DOWN            reduce using rule 69 (primitive_value -> value_array_element .)
    BY              reduce using rule 69 (primitive_value -> value_array_element .)
    FI              reduce using rule 69 (primitive_value -> value_array_element .)
    WHILE           reduce using rule 69 (primitive_value -> value_array_element .)


state 77

    (68) primitive_value -> literal .

    TIMES           reduce using rule 68 (primitive_value -> literal .)
    DIVIDE          reduce using rule 68 (primitive_value -> literal .)
    MOD             reduce using rule 68 (primitive_value -> literal .)
    PLUS            reduce using rule 68 (primitive_value -> literal .)
    MINUS           reduce using rule 68 (primitive_value -> literal .)
    STRCAT          reduce using rule 68 (primitive_value -> literal .)
    AND             reduce using rule 68 (primitive_value -> literal .)
    OR              reduce using rule 68 (primitive_value -> literal .)
    EQUAL           reduce using rule 68 (primitive_value -> literal .)
    DIFF            reduce using rule 68 (primitive_value -> literal .)
    GREATER         reduce using rule 68 (primitive_value -> literal .)
    GREATEREQ       reduce using rule 68 (primitive_value -> literal .)
    LESS            reduce using rule 68 (primitive_value -> literal .)
    LESSEQ          reduce using rule 68 (primitive_value -> literal .)
    IN              reduce using rule 68 (primitive_value -> literal .)
    SEMI            reduce using rule 68 (primitive_value -> literal .)
    ID              reduce using rule 68 (primitive_value -> literal .)
    LBRACKET        reduce using rule 68 (primitive_value -> literal .)
    RBRACKET        reduce using rule 68 (primitive_value -> literal .)
    COMMA           reduce using rule 68 (primitive_value -> literal .)
    THEN            reduce using rule 68 (primitive_value -> literal .)
    COLON           reduce using rule 68 (primitive_value -> literal .)
    RPAREN          reduce using rule 68 (primitive_value -> literal .)
    ELSE            reduce using rule 68 (primitive_value -> literal .)
    ELSIF           reduce using rule 68 (primitive_value -> literal .)
    TO              reduce using rule 68 (primitive_value -> literal .)
    DOWN            reduce using rule 68 (primitive_value -> literal .)
    BY              reduce using rule 68 (primitive_value -> literal .)
    FI              reduce using rule 68 (primitive_value -> literal .)
    WHILE           reduce using rule 68 (primitive_value -> literal .)


state 78

    (72) literal -> integer_literal .

    TIMES           reduce using rule 72 (literal -> integer_literal .)
    DIVIDE          reduce using rule 72 (literal -> integer_literal .)
    MOD             reduce using rule 72 (literal -> integer_literal .)
    PLUS            reduce using rule 72 (literal -> integer_literal .)
    MINUS           reduce using rule 72 (literal -> integer_literal .)
    STRCAT          reduce using rule 72 (literal -> integer_literal .)
    AND             reduce using rule 72 (literal -> integer_literal .)
    OR              reduce using rule 72 (literal -> integer_literal .)
    EQUAL           reduce using rule 72 (literal -> integer_literal .)
    DIFF            reduce using rule 72 (literal -> integer_literal .)
    GREATER         reduce using rule 72 (literal -> integer_literal .)
    GREATEREQ       reduce using rule 72 (literal -> integer_literal .)
    LESS            reduce using rule 72 (literal -> integer_literal .)
    LESSEQ          reduce using rule 72 (literal -> integer_literal .)
    IN              reduce using rule 72 (literal -> integer_literal .)
    THEN            reduce using rule 72 (literal -> integer_literal .)
    LBRACKET        reduce using rule 72 (literal -> integer_literal .)
    COLON           reduce using rule 72 (literal -> integer_literal .)
    SEMI            reduce using rule 72 (literal -> integer_literal .)
    WHILE           reduce using rule 72 (literal -> integer_literal .)
    RPAREN          reduce using rule 72 (literal -> integer_literal .)
    RBRACKET        reduce using rule 72 (literal -> integer_literal .)
    COMMA           reduce using rule 72 (literal -> integer_literal .)
    ID              reduce using rule 72 (literal -> integer_literal .)
    ELSE            reduce using rule 72 (literal -> integer_literal .)
    ELSIF           reduce using rule 72 (literal -> integer_literal .)
    TO              reduce using rule 72 (literal -> integer_literal .)
    DOWN            reduce using rule 72 (literal -> integer_literal .)
    BY              reduce using rule 72 (literal -> integer_literal .)
    FI              reduce using rule 72 (literal -> integer_literal .)


state 79

    (96) operand0 -> operand1 .
    (110) operand1 -> operand1 . operator2 operand2
    (111) operator2 -> . arithmetic_additive_operator
    (112) operator2 -> . string_concatenation_operator
    (113) arithmetic_additive_operator -> . PLUS
    (114) arithmetic_additive_operator -> . MINUS
    (115) string_concatenation_operator -> . STRCAT

    AND             reduce using rule 96 (operand0 -> operand1 .)
    OR              reduce using rule 96 (operand0 -> operand1 .)
    EQUAL           reduce using rule 96 (operand0 -> operand1 .)
    DIFF            reduce using rule 96 (operand0 -> operand1 .)
    GREATER         reduce using rule 96 (operand0 -> operand1 .)
    GREATEREQ       reduce using rule 96 (operand0 -> operand1 .)
    LESS            reduce using rule 96 (operand0 -> operand1 .)
    LESSEQ          reduce using rule 96 (operand0 -> operand1 .)
    IN              reduce using rule 96 (operand0 -> operand1 .)
    COLON           reduce using rule 96 (operand0 -> operand1 .)
    RPAREN          reduce using rule 96 (operand0 -> operand1 .)
    COMMA           reduce using rule 96 (operand0 -> operand1 .)
    WHILE           reduce using rule 96 (operand0 -> operand1 .)
    SEMI            reduce using rule 96 (operand0 -> operand1 .)
    RBRACKET        reduce using rule 96 (operand0 -> operand1 .)
    ID              reduce using rule 96 (operand0 -> operand1 .)
    ELSE            reduce using rule 96 (operand0 -> operand1 .)
    ELSIF           reduce using rule 96 (operand0 -> operand1 .)
    THEN            reduce using rule 96 (operand0 -> operand1 .)
    TO              reduce using rule 96 (operand0 -> operand1 .)
    DOWN            reduce using rule 96 (operand0 -> operand1 .)
    BY              reduce using rule 96 (operand0 -> operand1 .)
    FI              reduce using rule 96 (operand0 -> operand1 .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    STRCAT          shift and go to state 158

    operator2                      shift and go to state 154
    arithmetic_additive_operator   shift and go to state 159
    string_concatenation_operator  shift and go to state 157

state 80

    (71) primitive_value -> parenthesized_expression .

    TIMES           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    DIVIDE          reduce using rule 71 (primitive_value -> parenthesized_expression .)
    MOD             reduce using rule 71 (primitive_value -> parenthesized_expression .)
    PLUS            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    MINUS           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    STRCAT          reduce using rule 71 (primitive_value -> parenthesized_expression .)
    AND             reduce using rule 71 (primitive_value -> parenthesized_expression .)
    OR              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    EQUAL           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    DIFF            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    GREATER         reduce using rule 71 (primitive_value -> parenthesized_expression .)
    GREATEREQ       reduce using rule 71 (primitive_value -> parenthesized_expression .)
    LESS            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    LESSEQ          reduce using rule 71 (primitive_value -> parenthesized_expression .)
    IN              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    SEMI            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    ID              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    LBRACKET        reduce using rule 71 (primitive_value -> parenthesized_expression .)
    RBRACKET        reduce using rule 71 (primitive_value -> parenthesized_expression .)
    COMMA           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    THEN            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    COLON           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    RPAREN          reduce using rule 71 (primitive_value -> parenthesized_expression .)
    ELSE            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    ELSIF           reduce using rule 71 (primitive_value -> parenthesized_expression .)
    TO              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    DOWN            reduce using rule 71 (primitive_value -> parenthesized_expression .)
    BY              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    FI              reduce using rule 71 (primitive_value -> parenthesized_expression .)
    WHILE           reduce using rule 71 (primitive_value -> parenthesized_expression .)


state 81

    (121) operand3 -> operand4 .

    TIMES           reduce using rule 121 (operand3 -> operand4 .)
    DIVIDE          reduce using rule 121 (operand3 -> operand4 .)
    MOD             reduce using rule 121 (operand3 -> operand4 .)
    PLUS            reduce using rule 121 (operand3 -> operand4 .)
    MINUS           reduce using rule 121 (operand3 -> operand4 .)
    STRCAT          reduce using rule 121 (operand3 -> operand4 .)
    AND             reduce using rule 121 (operand3 -> operand4 .)
    OR              reduce using rule 121 (operand3 -> operand4 .)
    EQUAL           reduce using rule 121 (operand3 -> operand4 .)
    DIFF            reduce using rule 121 (operand3 -> operand4 .)
    GREATER         reduce using rule 121 (operand3 -> operand4 .)
    GREATEREQ       reduce using rule 121 (operand3 -> operand4 .)
    LESS            reduce using rule 121 (operand3 -> operand4 .)
    LESSEQ          reduce using rule 121 (operand3 -> operand4 .)
    IN              reduce using rule 121 (operand3 -> operand4 .)
    ELSE            reduce using rule 121 (operand3 -> operand4 .)
    ELSIF           reduce using rule 121 (operand3 -> operand4 .)
    RPAREN          reduce using rule 121 (operand3 -> operand4 .)
    RBRACKET        reduce using rule 121 (operand3 -> operand4 .)
    COMMA           reduce using rule 121 (operand3 -> operand4 .)
    SEMI            reduce using rule 121 (operand3 -> operand4 .)
    THEN            reduce using rule 121 (operand3 -> operand4 .)
    COLON           reduce using rule 121 (operand3 -> operand4 .)
    TO              reduce using rule 121 (operand3 -> operand4 .)
    DOWN            reduce using rule 121 (operand3 -> operand4 .)
    ID              reduce using rule 121 (operand3 -> operand4 .)
    BY              reduce using rule 121 (operand3 -> operand4 .)
    FI              reduce using rule 121 (operand3 -> operand4 .)
    WHILE           reduce using rule 121 (operand3 -> operand4 .)


state 82

    (128) referenced_location -> ARROW . location
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    ID              shift and go to state 22
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    location                       shift and go to state 160
    array_element                  shift and go to state 9
    procedure_call                 shift and go to state 34
    array_slice                    shift and go to state 18
    array_location                 shift and go to state 16
    builtin_name                   shift and go to state 38
    call_action                    shift and go to state 98
    identifier                     shift and go to state 72
    dereferenced_reference         shift and go to state 30
    builtin_call                   shift and go to state 24

state 83

    (80) character_literal -> CCONST .

    TIMES           reduce using rule 80 (character_literal -> CCONST .)
    DIVIDE          reduce using rule 80 (character_literal -> CCONST .)
    MOD             reduce using rule 80 (character_literal -> CCONST .)
    PLUS            reduce using rule 80 (character_literal -> CCONST .)
    MINUS           reduce using rule 80 (character_literal -> CCONST .)
    STRCAT          reduce using rule 80 (character_literal -> CCONST .)
    AND             reduce using rule 80 (character_literal -> CCONST .)
    OR              reduce using rule 80 (character_literal -> CCONST .)
    EQUAL           reduce using rule 80 (character_literal -> CCONST .)
    DIFF            reduce using rule 80 (character_literal -> CCONST .)
    GREATER         reduce using rule 80 (character_literal -> CCONST .)
    GREATEREQ       reduce using rule 80 (character_literal -> CCONST .)
    LESS            reduce using rule 80 (character_literal -> CCONST .)
    LESSEQ          reduce using rule 80 (character_literal -> CCONST .)
    IN              reduce using rule 80 (character_literal -> CCONST .)
    RBRACKET        reduce using rule 80 (character_literal -> CCONST .)
    COMMA           reduce using rule 80 (character_literal -> CCONST .)
    LBRACKET        reduce using rule 80 (character_literal -> CCONST .)
    RPAREN          reduce using rule 80 (character_literal -> CCONST .)
    COLON           reduce using rule 80 (character_literal -> CCONST .)
    SEMI            reduce using rule 80 (character_literal -> CCONST .)
    ID              reduce using rule 80 (character_literal -> CCONST .)
    THEN            reduce using rule 80 (character_literal -> CCONST .)
    ELSE            reduce using rule 80 (character_literal -> CCONST .)
    ELSIF           reduce using rule 80 (character_literal -> CCONST .)
    TO              reduce using rule 80 (character_literal -> CCONST .)
    DOWN            reduce using rule 80 (character_literal -> CCONST .)
    BY              reduce using rule 80 (character_literal -> CCONST .)
    FI              reduce using rule 80 (character_literal -> CCONST .)
    WHILE           reduce using rule 80 (character_literal -> CCONST .)


state 84

    (125) operand4 -> location .
    (62) dereferenced_reference -> location . ARROW
    (67) array_location -> location .

    TIMES           reduce using rule 125 (operand4 -> location .)
    DIVIDE          reduce using rule 125 (operand4 -> location .)
    MOD             reduce using rule 125 (operand4 -> location .)
    PLUS            reduce using rule 125 (operand4 -> location .)
    MINUS           reduce using rule 125 (operand4 -> location .)
    STRCAT          reduce using rule 125 (operand4 -> location .)
    AND             reduce using rule 125 (operand4 -> location .)
    OR              reduce using rule 125 (operand4 -> location .)
    EQUAL           reduce using rule 125 (operand4 -> location .)
    DIFF            reduce using rule 125 (operand4 -> location .)
    GREATER         reduce using rule 125 (operand4 -> location .)
    GREATEREQ       reduce using rule 125 (operand4 -> location .)
    LESS            reduce using rule 125 (operand4 -> location .)
    LESSEQ          reduce using rule 125 (operand4 -> location .)
    IN              reduce using rule 125 (operand4 -> location .)
    WHILE           reduce using rule 125 (operand4 -> location .)
    SEMI            reduce using rule 125 (operand4 -> location .)
    THEN            reduce using rule 125 (operand4 -> location .)
    RBRACKET        reduce using rule 125 (operand4 -> location .)
    COMMA           reduce using rule 125 (operand4 -> location .)
    COLON           reduce using rule 125 (operand4 -> location .)
    RPAREN          reduce using rule 125 (operand4 -> location .)
    ID              reduce using rule 125 (operand4 -> location .)
    ELSE            reduce using rule 125 (operand4 -> location .)
    ELSIF           reduce using rule 125 (operand4 -> location .)
    TO              reduce using rule 125 (operand4 -> location .)
    DOWN            reduce using rule 125 (operand4 -> location .)
    BY              reduce using rule 125 (operand4 -> location .)
    FI              reduce using rule 125 (operand4 -> location .)
    ARROW           shift and go to state 53
    LBRACKET        reduce using rule 67 (array_location -> location .)


state 85

    (70) primitive_value -> value_array_slice .

    TIMES           reduce using rule 70 (primitive_value -> value_array_slice .)
    DIVIDE          reduce using rule 70 (primitive_value -> value_array_slice .)
    MOD             reduce using rule 70 (primitive_value -> value_array_slice .)
    PLUS            reduce using rule 70 (primitive_value -> value_array_slice .)
    MINUS           reduce using rule 70 (primitive_value -> value_array_slice .)
    STRCAT          reduce using rule 70 (primitive_value -> value_array_slice .)
    AND             reduce using rule 70 (primitive_value -> value_array_slice .)
    OR              reduce using rule 70 (primitive_value -> value_array_slice .)
    EQUAL           reduce using rule 70 (primitive_value -> value_array_slice .)
    DIFF            reduce using rule 70 (primitive_value -> value_array_slice .)
    GREATER         reduce using rule 70 (primitive_value -> value_array_slice .)
    GREATEREQ       reduce using rule 70 (primitive_value -> value_array_slice .)
    LESS            reduce using rule 70 (primitive_value -> value_array_slice .)
    LESSEQ          reduce using rule 70 (primitive_value -> value_array_slice .)
    IN              reduce using rule 70 (primitive_value -> value_array_slice .)
    SEMI            reduce using rule 70 (primitive_value -> value_array_slice .)
    ID              reduce using rule 70 (primitive_value -> value_array_slice .)
    LBRACKET        reduce using rule 70 (primitive_value -> value_array_slice .)
    RBRACKET        reduce using rule 70 (primitive_value -> value_array_slice .)
    COMMA           reduce using rule 70 (primitive_value -> value_array_slice .)
    THEN            reduce using rule 70 (primitive_value -> value_array_slice .)
    COLON           reduce using rule 70 (primitive_value -> value_array_slice .)
    RPAREN          reduce using rule 70 (primitive_value -> value_array_slice .)
    ELSE            reduce using rule 70 (primitive_value -> value_array_slice .)
    ELSIF           reduce using rule 70 (primitive_value -> value_array_slice .)
    TO              reduce using rule 70 (primitive_value -> value_array_slice .)
    DOWN            reduce using rule 70 (primitive_value -> value_array_slice .)
    BY              reduce using rule 70 (primitive_value -> value_array_slice .)
    FI              reduce using rule 70 (primitive_value -> value_array_slice .)
    WHILE           reduce using rule 70 (primitive_value -> value_array_slice .)


state 86

    (190) result_action -> RESULT result .

    SEMI            reduce using rule 190 (result_action -> RESULT result .)


state 87

    (127) operand4 -> primitive_value .
    (85) array_primitive_value -> primitive_value .

    TIMES           reduce using rule 127 (operand4 -> primitive_value .)
    DIVIDE          reduce using rule 127 (operand4 -> primitive_value .)
    MOD             reduce using rule 127 (operand4 -> primitive_value .)
    PLUS            reduce using rule 127 (operand4 -> primitive_value .)
    MINUS           reduce using rule 127 (operand4 -> primitive_value .)
    STRCAT          reduce using rule 127 (operand4 -> primitive_value .)
    AND             reduce using rule 127 (operand4 -> primitive_value .)
    OR              reduce using rule 127 (operand4 -> primitive_value .)
    EQUAL           reduce using rule 127 (operand4 -> primitive_value .)
    DIFF            reduce using rule 127 (operand4 -> primitive_value .)
    GREATER         reduce using rule 127 (operand4 -> primitive_value .)
    GREATEREQ       reduce using rule 127 (operand4 -> primitive_value .)
    LESS            reduce using rule 127 (operand4 -> primitive_value .)
    LESSEQ          reduce using rule 127 (operand4 -> primitive_value .)
    IN              reduce using rule 127 (operand4 -> primitive_value .)
    WHILE           reduce using rule 127 (operand4 -> primitive_value .)
    SEMI            reduce using rule 127 (operand4 -> primitive_value .)
    THEN            reduce using rule 127 (operand4 -> primitive_value .)
    RBRACKET        reduce using rule 127 (operand4 -> primitive_value .)
    COMMA           reduce using rule 127 (operand4 -> primitive_value .)
    COLON           reduce using rule 127 (operand4 -> primitive_value .)
    RPAREN          reduce using rule 127 (operand4 -> primitive_value .)
    ID              reduce using rule 127 (operand4 -> primitive_value .)
    ELSE            reduce using rule 127 (operand4 -> primitive_value .)
    ELSIF           reduce using rule 127 (operand4 -> primitive_value .)
    TO              reduce using rule 127 (operand4 -> primitive_value .)
    DOWN            reduce using rule 127 (operand4 -> primitive_value .)
    BY              reduce using rule 127 (operand4 -> primitive_value .)
    FI              reduce using rule 127 (operand4 -> primitive_value .)
    LBRACKET        reduce using rule 85 (array_primitive_value -> primitive_value .)


state 88

    (82) character_string_literal -> SCONST .

    TIMES           reduce using rule 82 (character_string_literal -> SCONST .)
    DIVIDE          reduce using rule 82 (character_string_literal -> SCONST .)
    MOD             reduce using rule 82 (character_string_literal -> SCONST .)
    PLUS            reduce using rule 82 (character_string_literal -> SCONST .)
    MINUS           reduce using rule 82 (character_string_literal -> SCONST .)
    STRCAT          reduce using rule 82 (character_string_literal -> SCONST .)
    AND             reduce using rule 82 (character_string_literal -> SCONST .)
    OR              reduce using rule 82 (character_string_literal -> SCONST .)
    EQUAL           reduce using rule 82 (character_string_literal -> SCONST .)
    DIFF            reduce using rule 82 (character_string_literal -> SCONST .)
    GREATER         reduce using rule 82 (character_string_literal -> SCONST .)
    GREATEREQ       reduce using rule 82 (character_string_literal -> SCONST .)
    LESS            reduce using rule 82 (character_string_literal -> SCONST .)
    LESSEQ          reduce using rule 82 (character_string_literal -> SCONST .)
    IN              reduce using rule 82 (character_string_literal -> SCONST .)
    RBRACKET        reduce using rule 82 (character_string_literal -> SCONST .)
    COMMA           reduce using rule 82 (character_string_literal -> SCONST .)
    LBRACKET        reduce using rule 82 (character_string_literal -> SCONST .)
    SEMI            reduce using rule 82 (character_string_literal -> SCONST .)
    THEN            reduce using rule 82 (character_string_literal -> SCONST .)
    RPAREN          reduce using rule 82 (character_string_literal -> SCONST .)
    ID              reduce using rule 82 (character_string_literal -> SCONST .)
    COLON           reduce using rule 82 (character_string_literal -> SCONST .)
    FI              reduce using rule 82 (character_string_literal -> SCONST .)
    TO              reduce using rule 82 (character_string_literal -> SCONST .)
    DOWN            reduce using rule 82 (character_string_literal -> SCONST .)
    BY              reduce using rule 82 (character_string_literal -> SCONST .)
    ELSE            reduce using rule 82 (character_string_literal -> SCONST .)
    ELSIF           reduce using rule 82 (character_string_literal -> SCONST .)
    WHILE           reduce using rule 82 (character_string_literal -> SCONST .)


state 89

    (87) expression -> operand0 .
    (97) operand0 -> operand0 . operator1 operand1
    (98) operator1 -> . relational_operator
    (99) operator1 -> . membership_operator
    (100) relational_operator -> . AND
    (101) relational_operator -> . OR
    (102) relational_operator -> . EQUAL
    (103) relational_operator -> . DIFF
    (104) relational_operator -> . GREATER
    (105) relational_operator -> . GREATEREQ
    (106) relational_operator -> . LESS
    (107) relational_operator -> . LESSEQ
    (108) membership_operator -> . IN

    RPAREN          reduce using rule 87 (expression -> operand0 .)
    COMMA           reduce using rule 87 (expression -> operand0 .)
    SEMI            reduce using rule 87 (expression -> operand0 .)
    RBRACKET        reduce using rule 87 (expression -> operand0 .)
    COLON           reduce using rule 87 (expression -> operand0 .)
    WHILE           reduce using rule 87 (expression -> operand0 .)
    FI              reduce using rule 87 (expression -> operand0 .)
    THEN            reduce using rule 87 (expression -> operand0 .)
    ELSE            reduce using rule 87 (expression -> operand0 .)
    ELSIF           reduce using rule 87 (expression -> operand0 .)
    ID              reduce using rule 87 (expression -> operand0 .)
    TO              reduce using rule 87 (expression -> operand0 .)
    DOWN            reduce using rule 87 (expression -> operand0 .)
    BY              reduce using rule 87 (expression -> operand0 .)
    AND             shift and go to state 166
    OR              shift and go to state 164
    EQUAL           shift and go to state 162
    DIFF            shift and go to state 172
    GREATER         shift and go to state 163
    GREATEREQ       shift and go to state 170
    LESS            shift and go to state 167
    LESSEQ          shift and go to state 169
    IN              shift and go to state 168

    membership_operator            shift and go to state 161
    relational_operator            shift and go to state 171
    operator1                      shift and go to state 165

state 90

    (109) operand1 -> operand2 .
    (117) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (118) arithmetic_multiplicative_operator -> . TIMES
    (119) arithmetic_multiplicative_operator -> . DIVIDE
    (120) arithmetic_multiplicative_operator -> . MOD

    PLUS            reduce using rule 109 (operand1 -> operand2 .)
    MINUS           reduce using rule 109 (operand1 -> operand2 .)
    STRCAT          reduce using rule 109 (operand1 -> operand2 .)
    AND             reduce using rule 109 (operand1 -> operand2 .)
    OR              reduce using rule 109 (operand1 -> operand2 .)
    EQUAL           reduce using rule 109 (operand1 -> operand2 .)
    DIFF            reduce using rule 109 (operand1 -> operand2 .)
    GREATER         reduce using rule 109 (operand1 -> operand2 .)
    GREATEREQ       reduce using rule 109 (operand1 -> operand2 .)
    LESS            reduce using rule 109 (operand1 -> operand2 .)
    LESSEQ          reduce using rule 109 (operand1 -> operand2 .)
    IN              reduce using rule 109 (operand1 -> operand2 .)
    SEMI            reduce using rule 109 (operand1 -> operand2 .)
    TO              reduce using rule 109 (operand1 -> operand2 .)
    DOWN            reduce using rule 109 (operand1 -> operand2 .)
    RPAREN          reduce using rule 109 (operand1 -> operand2 .)
    COMMA           reduce using rule 109 (operand1 -> operand2 .)
    RBRACKET        reduce using rule 109 (operand1 -> operand2 .)
    FI              reduce using rule 109 (operand1 -> operand2 .)
    COLON           reduce using rule 109 (operand1 -> operand2 .)
    ELSE            reduce using rule 109 (operand1 -> operand2 .)
    ELSIF           reduce using rule 109 (operand1 -> operand2 .)
    THEN            reduce using rule 109 (operand1 -> operand2 .)
    ID              reduce using rule 109 (operand1 -> operand2 .)
    WHILE           reduce using rule 109 (operand1 -> operand2 .)
    BY              reduce using rule 109 (operand1 -> operand2 .)
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    MOD             shift and go to state 175

    arithmetic_multiplicative_operator shift and go to state 176

state 91

    (77) integer_literal -> ICONST .

    TIMES           reduce using rule 77 (integer_literal -> ICONST .)
    DIVIDE          reduce using rule 77 (integer_literal -> ICONST .)
    MOD             reduce using rule 77 (integer_literal -> ICONST .)
    PLUS            reduce using rule 77 (integer_literal -> ICONST .)
    MINUS           reduce using rule 77 (integer_literal -> ICONST .)
    STRCAT          reduce using rule 77 (integer_literal -> ICONST .)
    AND             reduce using rule 77 (integer_literal -> ICONST .)
    OR              reduce using rule 77 (integer_literal -> ICONST .)
    EQUAL           reduce using rule 77 (integer_literal -> ICONST .)
    DIFF            reduce using rule 77 (integer_literal -> ICONST .)
    GREATER         reduce using rule 77 (integer_literal -> ICONST .)
    GREATEREQ       reduce using rule 77 (integer_literal -> ICONST .)
    LESS            reduce using rule 77 (integer_literal -> ICONST .)
    LESSEQ          reduce using rule 77 (integer_literal -> ICONST .)
    IN              reduce using rule 77 (integer_literal -> ICONST .)
    THEN            reduce using rule 77 (integer_literal -> ICONST .)
    LBRACKET        reduce using rule 77 (integer_literal -> ICONST .)
    WHILE           reduce using rule 77 (integer_literal -> ICONST .)
    SEMI            reduce using rule 77 (integer_literal -> ICONST .)
    RPAREN          reduce using rule 77 (integer_literal -> ICONST .)
    COMMA           reduce using rule 77 (integer_literal -> ICONST .)
    COLON           reduce using rule 77 (integer_literal -> ICONST .)
    ID              reduce using rule 77 (integer_literal -> ICONST .)
    RBRACKET        reduce using rule 77 (integer_literal -> ICONST .)
    ELSE            reduce using rule 77 (integer_literal -> ICONST .)
    ELSIF           reduce using rule 77 (integer_literal -> ICONST .)
    TO              reduce using rule 77 (integer_literal -> ICONST .)
    DOWN            reduce using rule 77 (integer_literal -> ICONST .)
    BY              reduce using rule 77 (integer_literal -> ICONST .)
    FI              reduce using rule 77 (integer_literal -> ICONST .)


state 92

    (116) operand2 -> operand3 .

    TIMES           reduce using rule 116 (operand2 -> operand3 .)
    DIVIDE          reduce using rule 116 (operand2 -> operand3 .)
    MOD             reduce using rule 116 (operand2 -> operand3 .)
    PLUS            reduce using rule 116 (operand2 -> operand3 .)
    MINUS           reduce using rule 116 (operand2 -> operand3 .)
    STRCAT          reduce using rule 116 (operand2 -> operand3 .)
    AND             reduce using rule 116 (operand2 -> operand3 .)
    OR              reduce using rule 116 (operand2 -> operand3 .)
    EQUAL           reduce using rule 116 (operand2 -> operand3 .)
    DIFF            reduce using rule 116 (operand2 -> operand3 .)
    GREATER         reduce using rule 116 (operand2 -> operand3 .)
    GREATEREQ       reduce using rule 116 (operand2 -> operand3 .)
    LESS            reduce using rule 116 (operand2 -> operand3 .)
    LESSEQ          reduce using rule 116 (operand2 -> operand3 .)
    IN              reduce using rule 116 (operand2 -> operand3 .)
    SEMI            reduce using rule 116 (operand2 -> operand3 .)
    COLON           reduce using rule 116 (operand2 -> operand3 .)
    THEN            reduce using rule 116 (operand2 -> operand3 .)
    ELSE            reduce using rule 116 (operand2 -> operand3 .)
    ELSIF           reduce using rule 116 (operand2 -> operand3 .)
    TO              reduce using rule 116 (operand2 -> operand3 .)
    DOWN            reduce using rule 116 (operand2 -> operand3 .)
    BY              reduce using rule 116 (operand2 -> operand3 .)
    RPAREN          reduce using rule 116 (operand2 -> operand3 .)
    COMMA           reduce using rule 116 (operand2 -> operand3 .)
    FI              reduce using rule 116 (operand2 -> operand3 .)
    RBRACKET        reduce using rule 116 (operand2 -> operand3 .)
    ID              reduce using rule 116 (operand2 -> operand3 .)
    WHILE           reduce using rule 116 (operand2 -> operand3 .)


state 93

    (191) result -> expression .

    SEMI            reduce using rule 191 (result -> expression .)


state 94

    (74) literal -> character_literal .

    TIMES           reduce using rule 74 (literal -> character_literal .)
    DIVIDE          reduce using rule 74 (literal -> character_literal .)
    MOD             reduce using rule 74 (literal -> character_literal .)
    PLUS            reduce using rule 74 (literal -> character_literal .)
    MINUS           reduce using rule 74 (literal -> character_literal .)
    STRCAT          reduce using rule 74 (literal -> character_literal .)
    AND             reduce using rule 74 (literal -> character_literal .)
    OR              reduce using rule 74 (literal -> character_literal .)
    EQUAL           reduce using rule 74 (literal -> character_literal .)
    DIFF            reduce using rule 74 (literal -> character_literal .)
    GREATER         reduce using rule 74 (literal -> character_literal .)
    GREATEREQ       reduce using rule 74 (literal -> character_literal .)
    LESS            reduce using rule 74 (literal -> character_literal .)
    LESSEQ          reduce using rule 74 (literal -> character_literal .)
    IN              reduce using rule 74 (literal -> character_literal .)
    THEN            reduce using rule 74 (literal -> character_literal .)
    LBRACKET        reduce using rule 74 (literal -> character_literal .)
    COLON           reduce using rule 74 (literal -> character_literal .)
    SEMI            reduce using rule 74 (literal -> character_literal .)
    WHILE           reduce using rule 74 (literal -> character_literal .)
    RPAREN          reduce using rule 74 (literal -> character_literal .)
    RBRACKET        reduce using rule 74 (literal -> character_literal .)
    COMMA           reduce using rule 74 (literal -> character_literal .)
    ID              reduce using rule 74 (literal -> character_literal .)
    ELSE            reduce using rule 74 (literal -> character_literal .)
    ELSIF           reduce using rule 74 (literal -> character_literal .)
    TO              reduce using rule 74 (literal -> character_literal .)
    DOWN            reduce using rule 74 (literal -> character_literal .)
    BY              reduce using rule 74 (literal -> character_literal .)
    FI              reduce using rule 74 (literal -> character_literal .)


state 95

    (89) conditional_expression -> IF . boolean_expression then_expression else_expression FI
    (90) conditional_expression -> IF . boolean_expression then_expression elsif_expression else_expression FI
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    expression                     shift and go to state 116
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    boolean_expression             shift and go to state 177
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 96

    (88) expression -> conditional_expression .

    RPAREN          reduce using rule 88 (expression -> conditional_expression .)
    COMMA           reduce using rule 88 (expression -> conditional_expression .)
    SEMI            reduce using rule 88 (expression -> conditional_expression .)
    RBRACKET        reduce using rule 88 (expression -> conditional_expression .)
    COLON           reduce using rule 88 (expression -> conditional_expression .)
    WHILE           reduce using rule 88 (expression -> conditional_expression .)
    FI              reduce using rule 88 (expression -> conditional_expression .)
    THEN            reduce using rule 88 (expression -> conditional_expression .)
    ELSE            reduce using rule 88 (expression -> conditional_expression .)
    ELSIF           reduce using rule 88 (expression -> conditional_expression .)
    ID              reduce using rule 88 (expression -> conditional_expression .)
    TO              reduce using rule 88 (expression -> conditional_expression .)
    DOWN            reduce using rule 88 (expression -> conditional_expression .)
    BY              reduce using rule 88 (expression -> conditional_expression .)


state 97

    (81) empty_literal -> NULL .

    TIMES           reduce using rule 81 (empty_literal -> NULL .)
    DIVIDE          reduce using rule 81 (empty_literal -> NULL .)
    MOD             reduce using rule 81 (empty_literal -> NULL .)
    PLUS            reduce using rule 81 (empty_literal -> NULL .)
    MINUS           reduce using rule 81 (empty_literal -> NULL .)
    STRCAT          reduce using rule 81 (empty_literal -> NULL .)
    AND             reduce using rule 81 (empty_literal -> NULL .)
    OR              reduce using rule 81 (empty_literal -> NULL .)
    EQUAL           reduce using rule 81 (empty_literal -> NULL .)
    DIFF            reduce using rule 81 (empty_literal -> NULL .)
    GREATER         reduce using rule 81 (empty_literal -> NULL .)
    GREATEREQ       reduce using rule 81 (empty_literal -> NULL .)
    LESS            reduce using rule 81 (empty_literal -> NULL .)
    LESSEQ          reduce using rule 81 (empty_literal -> NULL .)
    IN              reduce using rule 81 (empty_literal -> NULL .)
    RPAREN          reduce using rule 81 (empty_literal -> NULL .)
    RBRACKET        reduce using rule 81 (empty_literal -> NULL .)
    COMMA           reduce using rule 81 (empty_literal -> NULL .)
    LBRACKET        reduce using rule 81 (empty_literal -> NULL .)
    SEMI            reduce using rule 81 (empty_literal -> NULL .)
    THEN            reduce using rule 81 (empty_literal -> NULL .)
    COLON           reduce using rule 81 (empty_literal -> NULL .)
    ID              reduce using rule 81 (empty_literal -> NULL .)
    ELSE            reduce using rule 81 (empty_literal -> NULL .)
    ELSIF           reduce using rule 81 (empty_literal -> NULL .)
    TO              reduce using rule 81 (empty_literal -> NULL .)
    DOWN            reduce using rule 81 (empty_literal -> NULL .)
    BY              reduce using rule 81 (empty_literal -> NULL .)
    FI              reduce using rule 81 (empty_literal -> NULL .)
    WHILE           reduce using rule 81 (empty_literal -> NULL .)


state 98

    (61) location -> call_action .

    ARROW           reduce using rule 61 (location -> call_action .)
    TIMES           reduce using rule 61 (location -> call_action .)
    DIVIDE          reduce using rule 61 (location -> call_action .)
    MOD             reduce using rule 61 (location -> call_action .)
    PLUS            reduce using rule 61 (location -> call_action .)
    MINUS           reduce using rule 61 (location -> call_action .)
    STRCAT          reduce using rule 61 (location -> call_action .)
    AND             reduce using rule 61 (location -> call_action .)
    OR              reduce using rule 61 (location -> call_action .)
    EQUAL           reduce using rule 61 (location -> call_action .)
    DIFF            reduce using rule 61 (location -> call_action .)
    GREATER         reduce using rule 61 (location -> call_action .)
    GREATEREQ       reduce using rule 61 (location -> call_action .)
    LESS            reduce using rule 61 (location -> call_action .)
    LESSEQ          reduce using rule 61 (location -> call_action .)
    IN              reduce using rule 61 (location -> call_action .)
    THEN            reduce using rule 61 (location -> call_action .)
    LBRACKET        reduce using rule 61 (location -> call_action .)
    COLON           reduce using rule 61 (location -> call_action .)
    RPAREN          reduce using rule 61 (location -> call_action .)
    COMMA           reduce using rule 61 (location -> call_action .)
    SEMI            reduce using rule 61 (location -> call_action .)
    RBRACKET        reduce using rule 61 (location -> call_action .)
    ID              reduce using rule 61 (location -> call_action .)
    ELSE            reduce using rule 61 (location -> call_action .)
    ELSIF           reduce using rule 61 (location -> call_action .)
    TO              reduce using rule 61 (location -> call_action .)
    DOWN            reduce using rule 61 (location -> call_action .)
    BY              reduce using rule 61 (location -> call_action .)
    FI              reduce using rule 61 (location -> call_action .)
    WHILE           reduce using rule 61 (location -> call_action .)


state 99

    (124) monadic_operator -> NOT .

    ARROW           reduce using rule 124 (monadic_operator -> NOT .)
    ID              reduce using rule 124 (monadic_operator -> NOT .)
    LPAREN          reduce using rule 124 (monadic_operator -> NOT .)
    ICONST          reduce using rule 124 (monadic_operator -> NOT .)
    FALSE           reduce using rule 124 (monadic_operator -> NOT .)
    TRUE            reduce using rule 124 (monadic_operator -> NOT .)
    CCONST          reduce using rule 124 (monadic_operator -> NOT .)
    NULL            reduce using rule 124 (monadic_operator -> NOT .)
    SCONST          reduce using rule 124 (monadic_operator -> NOT .)
    ABS             reduce using rule 124 (monadic_operator -> NOT .)
    ASC             reduce using rule 124 (monadic_operator -> NOT .)
    NUM             reduce using rule 124 (monadic_operator -> NOT .)
    UPPER           reduce using rule 124 (monadic_operator -> NOT .)
    LOWER           reduce using rule 124 (monadic_operator -> NOT .)
    LENGTH          reduce using rule 124 (monadic_operator -> NOT .)
    READ            reduce using rule 124 (monadic_operator -> NOT .)
    PRINT           reduce using rule 124 (monadic_operator -> NOT .)


state 100

    (181) procedure_call -> identifier LPAREN . RPAREN
    (182) procedure_call -> identifier LPAREN . parameter_list RPAREN
    (183) parameter_list -> . parameter
    (184) parameter_list -> . parameter_list COMMA parameter
    (185) parameter -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    RPAREN          shift and go to state 180
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    location                       shift and go to state 84
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    parameter_list                 shift and go to state 178
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    parameter                      shift and go to state 179
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    expression                     shift and go to state 181
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 101

    (9) declaration_statement -> DCL declaration_list . SEMI
    (11) declaration_list -> declaration_list . COMMA declaration

    SEMI            shift and go to state 182
    COMMA           shift and go to state 183


state 102

    (10) declaration_list -> declaration .

    SEMI            reduce using rule 10 (declaration_list -> declaration .)
    COMMA           reduce using rule 10 (declaration_list -> declaration .)


state 103

    (12) declaration -> identifier_list . mode
    (13) declaration -> identifier_list . mode initialization
    (16) identifier_list -> identifier_list . COMMA identifier
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    COMMA           shift and go to state 121
    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 137
    mode                           shift and go to state 184
    reference_mode                 shift and go to state 127
    string_mode                    shift and go to state 136
    array_mode                     shift and go to state 129
    discrete_range_mode            shift and go to state 132
    composite_mode                 shift and go to state 131
    mode_name                      shift and go to state 128
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 104

    (3) statement_list -> statement_list statement .

    DCL             reduce using rule 3 (statement_list -> statement_list statement .)
    SYN             reduce using rule 3 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    RESULT          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    DO              reduce using rule 3 (statement_list -> statement_list statement .)
    ABS             reduce using rule 3 (statement_list -> statement_list statement .)
    ASC             reduce using rule 3 (statement_list -> statement_list statement .)
    NUM             reduce using rule 3 (statement_list -> statement_list statement .)
    UPPER           reduce using rule 3 (statement_list -> statement_list statement .)
    LOWER           reduce using rule 3 (statement_list -> statement_list statement .)
    LENGTH          reduce using rule 3 (statement_list -> statement_list statement .)
    READ            reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    END             reduce using rule 3 (statement_list -> statement_list statement .)


state 105

    (129) action_statement -> action SEMI .

    OD              reduce using rule 129 (action_statement -> action SEMI .)
    EXIT            reduce using rule 129 (action_statement -> action SEMI .)
    RETURN          reduce using rule 129 (action_statement -> action SEMI .)
    RESULT          reduce using rule 129 (action_statement -> action SEMI .)
    ID              reduce using rule 129 (action_statement -> action SEMI .)
    IF              reduce using rule 129 (action_statement -> action SEMI .)
    DO              reduce using rule 129 (action_statement -> action SEMI .)
    ABS             reduce using rule 129 (action_statement -> action SEMI .)
    ASC             reduce using rule 129 (action_statement -> action SEMI .)
    NUM             reduce using rule 129 (action_statement -> action SEMI .)
    UPPER           reduce using rule 129 (action_statement -> action SEMI .)
    LOWER           reduce using rule 129 (action_statement -> action SEMI .)
    LENGTH          reduce using rule 129 (action_statement -> action SEMI .)
    READ            reduce using rule 129 (action_statement -> action SEMI .)
    PRINT           reduce using rule 129 (action_statement -> action SEMI .)
    END             reduce using rule 129 (action_statement -> action SEMI .)
    DCL             reduce using rule 129 (action_statement -> action SEMI .)
    SYN             reduce using rule 129 (action_statement -> action SEMI .)
    TYPE            reduce using rule 129 (action_statement -> action SEMI .)
    FI              reduce using rule 129 (action_statement -> action SEMI .)
    ELSE            reduce using rule 129 (action_statement -> action SEMI .)
    ELSIF           reduce using rule 129 (action_statement -> action SEMI .)
    $end            reduce using rule 129 (action_statement -> action SEMI .)


state 106

    (130) action_statement -> label_id . COLON action SEMI

    COLON           shift and go to state 185


state 107

    (152) action_statement_list -> action_statement .

    EXIT            reduce using rule 152 (action_statement_list -> action_statement .)
    RETURN          reduce using rule 152 (action_statement_list -> action_statement .)
    RESULT          reduce using rule 152 (action_statement_list -> action_statement .)
    ID              reduce using rule 152 (action_statement_list -> action_statement .)
    IF              reduce using rule 152 (action_statement_list -> action_statement .)
    DO              reduce using rule 152 (action_statement_list -> action_statement .)
    ABS             reduce using rule 152 (action_statement_list -> action_statement .)
    ASC             reduce using rule 152 (action_statement_list -> action_statement .)
    NUM             reduce using rule 152 (action_statement_list -> action_statement .)
    UPPER           reduce using rule 152 (action_statement_list -> action_statement .)
    LOWER           reduce using rule 152 (action_statement_list -> action_statement .)
    LENGTH          reduce using rule 152 (action_statement_list -> action_statement .)
    READ            reduce using rule 152 (action_statement_list -> action_statement .)
    PRINT           reduce using rule 152 (action_statement_list -> action_statement .)
    FI              reduce using rule 152 (action_statement_list -> action_statement .)
    ELSE            reduce using rule 152 (action_statement_list -> action_statement .)
    ELSIF           reduce using rule 152 (action_statement_list -> action_statement .)
    OD              reduce using rule 152 (action_statement_list -> action_statement .)


state 108

    (163) control_part -> FOR . for_control
    (164) control_part -> FOR . for_control while_control
    (165) for_control -> . iteration
    (166) iteration -> . step_enumeration
    (167) iteration -> . range_enumeration
    (168) step_enumeration -> . loop_counter ASSIGN start_value end_value
    (169) step_enumeration -> . loop_counter ASSIGN start_value step_value end_value
    (176) range_enumeration -> . loop_counter IN discrete_mode
    (177) range_enumeration -> . loop_counter DOWN IN discrete_mode
    (170) loop_counter -> . identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    loop_counter                   shift and go to state 186
    identifier                     shift and go to state 187
    for_control                    shift and go to state 190
    range_enumeration              shift and go to state 188
    iteration                      shift and go to state 189
    step_enumeration               shift and go to state 191

state 109

    (178) while_control -> WHILE . boolean_expression
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    expression                     shift and go to state 116
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    boolean_expression             shift and go to state 192
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 110

    (159) do_action -> DO control_part . SEMI OD
    (161) do_action -> DO control_part . SEMI action_statement_list OD

    SEMI            shift and go to state 193


state 111

    (158) do_action -> DO OD .

    SEMI            reduce using rule 158 (do_action -> DO OD .)


state 112

    (160) do_action -> DO action_statement_list . OD
    (153) action_statement_list -> action_statement_list . action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    OD              shift and go to state 194
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 195
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 113

    (162) control_part -> while_control .

    SEMI            reduce using rule 162 (control_part -> while_control .)


state 114

    (192) builtin_call -> builtin_name LPAREN . RPAREN
    (193) builtin_call -> builtin_name LPAREN . parameter_list RPAREN
    (183) parameter_list -> . parameter
    (184) parameter_list -> . parameter_list COMMA parameter
    (185) parameter -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    RPAREN          shift and go to state 197
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    parameter_list                 shift and go to state 196
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    parameter                      shift and go to state 179
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    expression                     shift and go to state 181
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 115

    (189) return_action -> RETURN result .

    SEMI            reduce using rule 189 (return_action -> RETURN result .)


state 116

    (91) boolean_expression -> expression .

    SEMI            reduce using rule 91 (boolean_expression -> expression .)
    THEN            reduce using rule 91 (boolean_expression -> expression .)


state 117

    (148) if_action -> IF boolean_expression . then_clause FI
    (149) if_action -> IF boolean_expression . then_clause else_clause FI
    (150) then_clause -> . THEN
    (151) then_clause -> . THEN action_statement_list

    THEN            shift and go to state 198

    then_clause                    shift and go to state 199

state 118

    (24) newmode_statement -> TYPE newmode_list SEMI .

    END             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    DCL             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    SYN             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    TYPE            reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    ID              reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    EXIT            reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    RETURN          reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    RESULT          reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    IF              reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    DO              reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    ABS             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    ASC             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    NUM             reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    UPPER           reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    LOWER           reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    LENGTH          reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    READ            reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    PRINT           reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)
    $end            reduce using rule 24 (newmode_statement -> TYPE newmode_list SEMI .)


state 119

    (26) newmode_list -> newmode_list COMMA . mode_definition
    (27) mode_definition -> . identifier_list ASSIGN mode
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 45
    mode_definition                shift and go to state 200
    identifier_list                shift and go to state 47

state 120

    (27) mode_definition -> identifier_list ASSIGN . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 137
    mode                           shift and go to state 201
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    array_mode                     shift and go to state 129
    mode_name                      shift and go to state 128
    composite_mode                 shift and go to state 131
    discrete_range_mode            shift and go to state 132
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 121

    (16) identifier_list -> identifier_list COMMA . identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 202

state 122

    (20) synonym_list -> synonym_list synonym_definition .

    SEMI            reduce using rule 20 (synonym_list -> synonym_list synonym_definition .)
    ID              reduce using rule 20 (synonym_list -> synonym_list synonym_definition .)


state 123

    (18) synonym_statement -> SYN synonym_list SEMI .

    DCL             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    SYN             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    TYPE            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ID              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    EXIT            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    RETURN          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    RESULT          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    IF              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    DO              reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ABS             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    ASC             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    NUM             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    UPPER           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    LOWER           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    LENGTH          reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    READ            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    PRINT           reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    $end            reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)
    END             reduce using rule 18 (synonym_statement -> SYN synonym_list SEMI .)


state 124

    (33) discrete_mode -> boolean_mode .

    LPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    WHILE           reduce using rule 33 (discrete_mode -> boolean_mode .)
    SEMI            reduce using rule 33 (discrete_mode -> boolean_mode .)
    ASSIGN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    COMMA           reduce using rule 33 (discrete_mode -> boolean_mode .)
    LOC             reduce using rule 33 (discrete_mode -> boolean_mode .)
    RPAREN          reduce using rule 33 (discrete_mode -> boolean_mode .)
    RBRACKET        reduce using rule 33 (discrete_mode -> boolean_mode .)


state 125

    (32) discrete_mode -> integer_mode .

    LPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    WHILE           reduce using rule 32 (discrete_mode -> integer_mode .)
    SEMI            reduce using rule 32 (discrete_mode -> integer_mode .)
    ASSIGN          reduce using rule 32 (discrete_mode -> integer_mode .)
    COMMA           reduce using rule 32 (discrete_mode -> integer_mode .)
    LOC             reduce using rule 32 (discrete_mode -> integer_mode .)
    RPAREN          reduce using rule 32 (discrete_mode -> integer_mode .)
    RBRACKET        reduce using rule 32 (discrete_mode -> integer_mode .)


state 126

    (21) synonym_definition -> identifier_list ASSIGN . constant_expression
    (23) constant_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    expression                     shift and go to state 203
    boolean_literal                shift and go to state 67
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    value_array_element            shift and go to state 76
    constant_expression            shift and go to state 204
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    dereferenced_reference         shift and go to state 30
    array_primitive_value          shift and go to state 75
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    location                       shift and go to state 84
    value_array_slice              shift and go to state 85
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 127

    (30) mode -> reference_mode .

    ASSIGN          reduce using rule 30 (mode -> reference_mode .)
    SEMI            reduce using rule 30 (mode -> reference_mode .)
    COMMA           reduce using rule 30 (mode -> reference_mode .)
    LOC             reduce using rule 30 (mode -> reference_mode .)
    RPAREN          reduce using rule 30 (mode -> reference_mode .)


state 128

    (28) mode -> mode_name .

    ASSIGN          reduce using rule 28 (mode -> mode_name .)
    SEMI            reduce using rule 28 (mode -> mode_name .)
    COMMA           reduce using rule 28 (mode -> mode_name .)
    LOC             reduce using rule 28 (mode -> mode_name .)
    RPAREN          reduce using rule 28 (mode -> mode_name .)


state 129

    (47) composite_mode -> array_mode .

    SEMI            reduce using rule 47 (composite_mode -> array_mode .)
    COMMA           reduce using rule 47 (composite_mode -> array_mode .)
    ASSIGN          reduce using rule 47 (composite_mode -> array_mode .)
    LOC             reduce using rule 47 (composite_mode -> array_mode .)
    RPAREN          reduce using rule 47 (composite_mode -> array_mode .)


state 130

    (37) boolean_mode -> BOOL .

    LPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    ASSIGN          reduce using rule 37 (boolean_mode -> BOOL .)
    SEMI            reduce using rule 37 (boolean_mode -> BOOL .)
    COMMA           reduce using rule 37 (boolean_mode -> BOOL .)
    LOC             reduce using rule 37 (boolean_mode -> BOOL .)
    RPAREN          reduce using rule 37 (boolean_mode -> BOOL .)
    WHILE           reduce using rule 37 (boolean_mode -> BOOL .)
    RBRACKET        reduce using rule 37 (boolean_mode -> BOOL .)


state 131

    (31) mode -> composite_mode .

    ASSIGN          reduce using rule 31 (mode -> composite_mode .)
    SEMI            reduce using rule 31 (mode -> composite_mode .)
    COMMA           reduce using rule 31 (mode -> composite_mode .)
    LOC             reduce using rule 31 (mode -> composite_mode .)
    RPAREN          reduce using rule 31 (mode -> composite_mode .)


state 132

    (35) discrete_mode -> discrete_range_mode .

    LPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    WHILE           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    SEMI            reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    ASSIGN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    COMMA           reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    LOC             reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RPAREN          reduce using rule 35 (discrete_mode -> discrete_range_mode .)
    RBRACKET        reduce using rule 35 (discrete_mode -> discrete_range_mode .)


state 133

    (29) mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 29 (mode -> discrete_mode .)
    SEMI            reduce using rule 29 (mode -> discrete_mode .)
    COMMA           reduce using rule 29 (mode -> discrete_mode .)
    LOC             reduce using rule 29 (mode -> discrete_mode .)
    RPAREN          reduce using rule 29 (mode -> discrete_mode .)
    LPAREN          shift and go to state 205


state 134

    (22) synonym_definition -> identifier_list mode . ASSIGN constant_expression

    ASSIGN          shift and go to state 206


state 135

    (45) reference_mode -> REF . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 137
    mode                           shift and go to state 207
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    array_mode                     shift and go to state 129
    composite_mode                 shift and go to state 131
    mode_name                      shift and go to state 128
    discrete_range_mode            shift and go to state 132
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 136

    (46) composite_mode -> string_mode .

    SEMI            reduce using rule 46 (composite_mode -> string_mode .)
    COMMA           reduce using rule 46 (composite_mode -> string_mode .)
    ASSIGN          reduce using rule 46 (composite_mode -> string_mode .)
    LOC             reduce using rule 46 (composite_mode -> string_mode .)
    RPAREN          reduce using rule 46 (composite_mode -> string_mode .)


state 137

    (41) mode_name -> identifier .
    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    ASSIGN          reduce using rule 41 (mode_name -> identifier .)
    SEMI            reduce using rule 41 (mode_name -> identifier .)
    COMMA           reduce using rule 41 (mode_name -> identifier .)
    LOC             reduce using rule 41 (mode_name -> identifier .)
    RPAREN          reduce using rule 41 (mode_name -> identifier .)
    LPAREN          shift and go to state 208


state 138

    (36) integer_mode -> INT .

    LPAREN          reduce using rule 36 (integer_mode -> INT .)
    WHILE           reduce using rule 36 (integer_mode -> INT .)
    SEMI            reduce using rule 36 (integer_mode -> INT .)
    ASSIGN          reduce using rule 36 (integer_mode -> INT .)
    COMMA           reduce using rule 36 (integer_mode -> INT .)
    LOC             reduce using rule 36 (integer_mode -> INT .)
    RPAREN          reduce using rule 36 (integer_mode -> INT .)
    RBRACKET        reduce using rule 36 (integer_mode -> INT .)


state 139

    (50) array_mode -> ARRAY . LBRACKET index_mode_list RBRACKET element_mode

    LBRACKET        shift and go to state 209


state 140

    (48) string_mode -> CHARS . LBRACKET string_length RBRACKET

    LBRACKET        shift and go to state 210


state 141

    (38) character_mode -> CHAR .

    LPAREN          reduce using rule 38 (character_mode -> CHAR .)
    ASSIGN          reduce using rule 38 (character_mode -> CHAR .)
    SEMI            reduce using rule 38 (character_mode -> CHAR .)
    COMMA           reduce using rule 38 (character_mode -> CHAR .)
    LOC             reduce using rule 38 (character_mode -> CHAR .)
    RPAREN          reduce using rule 38 (character_mode -> CHAR .)
    RBRACKET        reduce using rule 38 (character_mode -> CHAR .)
    WHILE           reduce using rule 38 (character_mode -> CHAR .)


state 142

    (34) discrete_mode -> character_mode .

    LPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    WHILE           reduce using rule 34 (discrete_mode -> character_mode .)
    SEMI            reduce using rule 34 (discrete_mode -> character_mode .)
    ASSIGN          reduce using rule 34 (discrete_mode -> character_mode .)
    COMMA           reduce using rule 34 (discrete_mode -> character_mode .)
    LOC             reduce using rule 34 (discrete_mode -> character_mode .)
    RPAREN          reduce using rule 34 (discrete_mode -> character_mode .)
    RBRACKET        reduce using rule 34 (discrete_mode -> character_mode .)


state 143

    (202) procedure_statement -> label_id COLON procedure_definition . SEMI

    SEMI            shift and go to state 211


state 144

    (203) procedure_definition -> formal_procedure_head . END
    (204) procedure_definition -> formal_procedure_head . statement_list END
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (24) newmode_statement -> . TYPE newmode_list SEMI
    (202) procedure_statement -> . label_id COLON procedure_definition SEMI
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (131) label_id -> . identifier
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (17) identifier -> . ID
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    END             shift and go to state 213
    DCL             shift and go to state 31
    SYN             shift and go to state 4
    TYPE            shift and go to state 1
    ID              shift and go to state 22
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    statement                      shift and go to state 5
    label_id                       shift and go to state 6
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    array_location                 shift and go to state 16
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    newmode_statement              shift and go to state 21
    builtin_call                   shift and go to state 24
    synonym_statement              shift and go to state 25
    array_slice                    shift and go to state 18
    location                       shift and go to state 13
    dereferenced_reference         shift and go to state 30
    statement_list                 shift and go to state 212
    return_action                  shift and go to state 44
    procedure_call                 shift and go to state 34
    declaration_statement          shift and go to state 36
    action_statement               shift and go to state 10
    builtin_name                   shift and go to state 38
    procedure_statement            shift and go to state 42
    exit_action                    shift and go to state 17
    action                         shift and go to state 33

state 145

    (205) formal_procedure_head -> PROC . parenthesis_gambiarra SEMI
    (206) formal_procedure_head -> PROC . parenthesis_gambiarra result_spec SEMI
    (207) parenthesis_gambiarra -> . LPAREN RPAREN
    (208) parenthesis_gambiarra -> . LPAREN formal_parameter_list RPAREN

    LPAREN          shift and go to state 214

    parenthesis_gambiarra          shift and go to state 215

state 146

    (130) action_statement -> label_id COLON action . SEMI

    SEMI            shift and go to state 216


state 147

    (140) assignment_action -> location assigning_operator expression .

    SEMI            reduce using rule 140 (assignment_action -> location assigning_operator expression .)


state 148

    (66) array_slice -> array_location LBRACKET lower_bound . COLON upper_bound RBRACKET

    COLON           shift and go to state 217


state 149

    (63) array_element -> array_location LBRACKET expression_list . RBRACKET
    (65) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 218
    COMMA           shift and go to state 219


state 150

    (64) expression_list -> expression .
    (43) lower_bound -> expression .

    RBRACKET        reduce using rule 64 (expression_list -> expression .)
    COMMA           reduce using rule 64 (expression_list -> expression .)
    COLON           reduce using rule 43 (lower_bound -> expression .)


state 151

    (122) operand3 -> monadic_operator operand4 .

    TIMES           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    DIVIDE          reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    MOD             reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    PLUS            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    MINUS           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    STRCAT          reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    AND             reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    OR              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    EQUAL           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    DIFF            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    GREATER         reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    GREATEREQ       reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    LESS            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    LESSEQ          reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    IN              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    ELSE            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    ELSIF           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    RPAREN          reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    RBRACKET        reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    COMMA           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    SEMI            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    THEN            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    COLON           reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    TO              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    DOWN            reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    ID              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    BY              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    FI              reduce using rule 122 (operand3 -> monadic_operator operand4 .)
    WHILE           reduce using rule 122 (operand3 -> monadic_operator operand4 .)


state 152

    (86) parenthesized_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 220


state 153

    (83) value_array_element -> array_primitive_value LBRACKET . integer_expression RBRACKET
    (84) value_array_slice -> array_primitive_value LBRACKET . lower_bound COLON upper_bound RBRACKET
    (56) integer_expression -> . expression
    (43) lower_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    expression                     shift and go to state 221
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    lower_bound                    shift and go to state 222
    identifier                     shift and go to state 72
    operand2                       shift and go to state 90
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    conditional_expression         shift and go to state 96
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    integer_expression             shift and go to state 223
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_primitive_value          shift and go to state 75
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 154

    (110) operand1 -> operand1 operator2 . operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand2                       shift and go to state 224
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    array_primitive_value          shift and go to state 75
    operand4                       shift and go to state 81
    value_array_element            shift and go to state 76
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 155

    (113) arithmetic_additive_operator -> PLUS .

    MINUS           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    NOT             reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    ARROW           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    ID              reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    LPAREN          reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    ICONST          reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    FALSE           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    TRUE            reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    CCONST          reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    NULL            reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    SCONST          reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    ABS             reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    ASC             reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    NUM             reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    UPPER           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    LOWER           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    LENGTH          reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    READ            reduce using rule 113 (arithmetic_additive_operator -> PLUS .)
    PRINT           reduce using rule 113 (arithmetic_additive_operator -> PLUS .)


state 156

    (114) arithmetic_additive_operator -> MINUS .

    MINUS           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    NOT             reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    ARROW           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    ID              reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    LPAREN          reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    ICONST          reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    FALSE           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    TRUE            reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    CCONST          reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    NULL            reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    SCONST          reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    ABS             reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    ASC             reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    NUM             reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    UPPER           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    LOWER           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    LENGTH          reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    READ            reduce using rule 114 (arithmetic_additive_operator -> MINUS .)
    PRINT           reduce using rule 114 (arithmetic_additive_operator -> MINUS .)


state 157

    (112) operator2 -> string_concatenation_operator .

    MINUS           reduce using rule 112 (operator2 -> string_concatenation_operator .)
    NOT             reduce using rule 112 (operator2 -> string_concatenation_operator .)
    ARROW           reduce using rule 112 (operator2 -> string_concatenation_operator .)
    ID              reduce using rule 112 (operator2 -> string_concatenation_operator .)
    LPAREN          reduce using rule 112 (operator2 -> string_concatenation_operator .)
    ICONST          reduce using rule 112 (operator2 -> string_concatenation_operator .)
    FALSE           reduce using rule 112 (operator2 -> string_concatenation_operator .)
    TRUE            reduce using rule 112 (operator2 -> string_concatenation_operator .)
    CCONST          reduce using rule 112 (operator2 -> string_concatenation_operator .)
    NULL            reduce using rule 112 (operator2 -> string_concatenation_operator .)
    SCONST          reduce using rule 112 (operator2 -> string_concatenation_operator .)
    ABS             reduce using rule 112 (operator2 -> string_concatenation_operator .)
    ASC             reduce using rule 112 (operator2 -> string_concatenation_operator .)
    NUM             reduce using rule 112 (operator2 -> string_concatenation_operator .)
    UPPER           reduce using rule 112 (operator2 -> string_concatenation_operator .)
    LOWER           reduce using rule 112 (operator2 -> string_concatenation_operator .)
    LENGTH          reduce using rule 112 (operator2 -> string_concatenation_operator .)
    READ            reduce using rule 112 (operator2 -> string_concatenation_operator .)
    PRINT           reduce using rule 112 (operator2 -> string_concatenation_operator .)


state 158

    (115) string_concatenation_operator -> STRCAT .

    MINUS           reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    NOT             reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    ARROW           reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    ID              reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    LPAREN          reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    ICONST          reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    FALSE           reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    TRUE            reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    CCONST          reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    NULL            reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    SCONST          reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    ABS             reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    ASC             reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    NUM             reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    UPPER           reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    LOWER           reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    LENGTH          reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    READ            reduce using rule 115 (string_concatenation_operator -> STRCAT .)
    PRINT           reduce using rule 115 (string_concatenation_operator -> STRCAT .)


state 159

    (111) operator2 -> arithmetic_additive_operator .

    MINUS           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    NOT             reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    ARROW           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    ID              reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    LPAREN          reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    ICONST          reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    FALSE           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    TRUE            reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    CCONST          reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    NULL            reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    SCONST          reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    ABS             reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    ASC             reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    NUM             reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    UPPER           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    LOWER           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    LENGTH          reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    READ            reduce using rule 111 (operator2 -> arithmetic_additive_operator .)
    PRINT           reduce using rule 111 (operator2 -> arithmetic_additive_operator .)


state 160

    (128) referenced_location -> ARROW location .
    (62) dereferenced_reference -> location . ARROW
    (67) array_location -> location .

    TIMES           reduce using rule 128 (referenced_location -> ARROW location .)
    DIVIDE          reduce using rule 128 (referenced_location -> ARROW location .)
    MOD             reduce using rule 128 (referenced_location -> ARROW location .)
    PLUS            reduce using rule 128 (referenced_location -> ARROW location .)
    MINUS           reduce using rule 128 (referenced_location -> ARROW location .)
    STRCAT          reduce using rule 128 (referenced_location -> ARROW location .)
    AND             reduce using rule 128 (referenced_location -> ARROW location .)
    OR              reduce using rule 128 (referenced_location -> ARROW location .)
    EQUAL           reduce using rule 128 (referenced_location -> ARROW location .)
    DIFF            reduce using rule 128 (referenced_location -> ARROW location .)
    GREATER         reduce using rule 128 (referenced_location -> ARROW location .)
    GREATEREQ       reduce using rule 128 (referenced_location -> ARROW location .)
    LESS            reduce using rule 128 (referenced_location -> ARROW location .)
    LESSEQ          reduce using rule 128 (referenced_location -> ARROW location .)
    IN              reduce using rule 128 (referenced_location -> ARROW location .)
    THEN            reduce using rule 128 (referenced_location -> ARROW location .)
    SEMI            reduce using rule 128 (referenced_location -> ARROW location .)
    RBRACKET        reduce using rule 128 (referenced_location -> ARROW location .)
    COMMA           reduce using rule 128 (referenced_location -> ARROW location .)
    COLON           reduce using rule 128 (referenced_location -> ARROW location .)
    RPAREN          reduce using rule 128 (referenced_location -> ARROW location .)
    ID              reduce using rule 128 (referenced_location -> ARROW location .)
    ELSE            reduce using rule 128 (referenced_location -> ARROW location .)
    ELSIF           reduce using rule 128 (referenced_location -> ARROW location .)
    TO              reduce using rule 128 (referenced_location -> ARROW location .)
    DOWN            reduce using rule 128 (referenced_location -> ARROW location .)
    BY              reduce using rule 128 (referenced_location -> ARROW location .)
    FI              reduce using rule 128 (referenced_location -> ARROW location .)
    WHILE           reduce using rule 128 (referenced_location -> ARROW location .)
    ARROW           shift and go to state 53
    LBRACKET        reduce using rule 67 (array_location -> location .)


state 161

    (99) operator1 -> membership_operator .

    MINUS           reduce using rule 99 (operator1 -> membership_operator .)
    NOT             reduce using rule 99 (operator1 -> membership_operator .)
    ARROW           reduce using rule 99 (operator1 -> membership_operator .)
    ID              reduce using rule 99 (operator1 -> membership_operator .)
    LPAREN          reduce using rule 99 (operator1 -> membership_operator .)
    ICONST          reduce using rule 99 (operator1 -> membership_operator .)
    FALSE           reduce using rule 99 (operator1 -> membership_operator .)
    TRUE            reduce using rule 99 (operator1 -> membership_operator .)
    CCONST          reduce using rule 99 (operator1 -> membership_operator .)
    NULL            reduce using rule 99 (operator1 -> membership_operator .)
    SCONST          reduce using rule 99 (operator1 -> membership_operator .)
    ABS             reduce using rule 99 (operator1 -> membership_operator .)
    ASC             reduce using rule 99 (operator1 -> membership_operator .)
    NUM             reduce using rule 99 (operator1 -> membership_operator .)
    UPPER           reduce using rule 99 (operator1 -> membership_operator .)
    LOWER           reduce using rule 99 (operator1 -> membership_operator .)
    LENGTH          reduce using rule 99 (operator1 -> membership_operator .)
    READ            reduce using rule 99 (operator1 -> membership_operator .)
    PRINT           reduce using rule 99 (operator1 -> membership_operator .)


state 162

    (102) relational_operator -> EQUAL .

    MINUS           reduce using rule 102 (relational_operator -> EQUAL .)
    NOT             reduce using rule 102 (relational_operator -> EQUAL .)
    ARROW           reduce using rule 102 (relational_operator -> EQUAL .)
    ID              reduce using rule 102 (relational_operator -> EQUAL .)
    LPAREN          reduce using rule 102 (relational_operator -> EQUAL .)
    ICONST          reduce using rule 102 (relational_operator -> EQUAL .)
    FALSE           reduce using rule 102 (relational_operator -> EQUAL .)
    TRUE            reduce using rule 102 (relational_operator -> EQUAL .)
    CCONST          reduce using rule 102 (relational_operator -> EQUAL .)
    NULL            reduce using rule 102 (relational_operator -> EQUAL .)
    SCONST          reduce using rule 102 (relational_operator -> EQUAL .)
    ABS             reduce using rule 102 (relational_operator -> EQUAL .)
    ASC             reduce using rule 102 (relational_operator -> EQUAL .)
    NUM             reduce using rule 102 (relational_operator -> EQUAL .)
    UPPER           reduce using rule 102 (relational_operator -> EQUAL .)
    LOWER           reduce using rule 102 (relational_operator -> EQUAL .)
    LENGTH          reduce using rule 102 (relational_operator -> EQUAL .)
    READ            reduce using rule 102 (relational_operator -> EQUAL .)
    PRINT           reduce using rule 102 (relational_operator -> EQUAL .)


state 163

    (104) relational_operator -> GREATER .

    MINUS           reduce using rule 104 (relational_operator -> GREATER .)
    NOT             reduce using rule 104 (relational_operator -> GREATER .)
    ARROW           reduce using rule 104 (relational_operator -> GREATER .)
    ID              reduce using rule 104 (relational_operator -> GREATER .)
    LPAREN          reduce using rule 104 (relational_operator -> GREATER .)
    ICONST          reduce using rule 104 (relational_operator -> GREATER .)
    FALSE           reduce using rule 104 (relational_operator -> GREATER .)
    TRUE            reduce using rule 104 (relational_operator -> GREATER .)
    CCONST          reduce using rule 104 (relational_operator -> GREATER .)
    NULL            reduce using rule 104 (relational_operator -> GREATER .)
    SCONST          reduce using rule 104 (relational_operator -> GREATER .)
    ABS             reduce using rule 104 (relational_operator -> GREATER .)
    ASC             reduce using rule 104 (relational_operator -> GREATER .)
    NUM             reduce using rule 104 (relational_operator -> GREATER .)
    UPPER           reduce using rule 104 (relational_operator -> GREATER .)
    LOWER           reduce using rule 104 (relational_operator -> GREATER .)
    LENGTH          reduce using rule 104 (relational_operator -> GREATER .)
    READ            reduce using rule 104 (relational_operator -> GREATER .)
    PRINT           reduce using rule 104 (relational_operator -> GREATER .)


state 164

    (101) relational_operator -> OR .

    MINUS           reduce using rule 101 (relational_operator -> OR .)
    NOT             reduce using rule 101 (relational_operator -> OR .)
    ARROW           reduce using rule 101 (relational_operator -> OR .)
    ID              reduce using rule 101 (relational_operator -> OR .)
    LPAREN          reduce using rule 101 (relational_operator -> OR .)
    ICONST          reduce using rule 101 (relational_operator -> OR .)
    FALSE           reduce using rule 101 (relational_operator -> OR .)
    TRUE            reduce using rule 101 (relational_operator -> OR .)
    CCONST          reduce using rule 101 (relational_operator -> OR .)
    NULL            reduce using rule 101 (relational_operator -> OR .)
    SCONST          reduce using rule 101 (relational_operator -> OR .)
    ABS             reduce using rule 101 (relational_operator -> OR .)
    ASC             reduce using rule 101 (relational_operator -> OR .)
    NUM             reduce using rule 101 (relational_operator -> OR .)
    UPPER           reduce using rule 101 (relational_operator -> OR .)
    LOWER           reduce using rule 101 (relational_operator -> OR .)
    LENGTH          reduce using rule 101 (relational_operator -> OR .)
    READ            reduce using rule 101 (relational_operator -> OR .)
    PRINT           reduce using rule 101 (relational_operator -> OR .)


state 165

    (97) operand0 -> operand0 operator1 . operand1
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 225
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand2                       shift and go to state 90
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    array_primitive_value          shift and go to state 75
    operand4                       shift and go to state 81
    value_array_element            shift and go to state 76
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 166

    (100) relational_operator -> AND .

    MINUS           reduce using rule 100 (relational_operator -> AND .)
    NOT             reduce using rule 100 (relational_operator -> AND .)
    ARROW           reduce using rule 100 (relational_operator -> AND .)
    ID              reduce using rule 100 (relational_operator -> AND .)
    LPAREN          reduce using rule 100 (relational_operator -> AND .)
    ICONST          reduce using rule 100 (relational_operator -> AND .)
    FALSE           reduce using rule 100 (relational_operator -> AND .)
    TRUE            reduce using rule 100 (relational_operator -> AND .)
    CCONST          reduce using rule 100 (relational_operator -> AND .)
    NULL            reduce using rule 100 (relational_operator -> AND .)
    SCONST          reduce using rule 100 (relational_operator -> AND .)
    ABS             reduce using rule 100 (relational_operator -> AND .)
    ASC             reduce using rule 100 (relational_operator -> AND .)
    NUM             reduce using rule 100 (relational_operator -> AND .)
    UPPER           reduce using rule 100 (relational_operator -> AND .)
    LOWER           reduce using rule 100 (relational_operator -> AND .)
    LENGTH          reduce using rule 100 (relational_operator -> AND .)
    READ            reduce using rule 100 (relational_operator -> AND .)
    PRINT           reduce using rule 100 (relational_operator -> AND .)


state 167

    (106) relational_operator -> LESS .

    MINUS           reduce using rule 106 (relational_operator -> LESS .)
    NOT             reduce using rule 106 (relational_operator -> LESS .)
    ARROW           reduce using rule 106 (relational_operator -> LESS .)
    ID              reduce using rule 106 (relational_operator -> LESS .)
    LPAREN          reduce using rule 106 (relational_operator -> LESS .)
    ICONST          reduce using rule 106 (relational_operator -> LESS .)
    FALSE           reduce using rule 106 (relational_operator -> LESS .)
    TRUE            reduce using rule 106 (relational_operator -> LESS .)
    CCONST          reduce using rule 106 (relational_operator -> LESS .)
    NULL            reduce using rule 106 (relational_operator -> LESS .)
    SCONST          reduce using rule 106 (relational_operator -> LESS .)
    ABS             reduce using rule 106 (relational_operator -> LESS .)
    ASC             reduce using rule 106 (relational_operator -> LESS .)
    NUM             reduce using rule 106 (relational_operator -> LESS .)
    UPPER           reduce using rule 106 (relational_operator -> LESS .)
    LOWER           reduce using rule 106 (relational_operator -> LESS .)
    LENGTH          reduce using rule 106 (relational_operator -> LESS .)
    READ            reduce using rule 106 (relational_operator -> LESS .)
    PRINT           reduce using rule 106 (relational_operator -> LESS .)


state 168

    (108) membership_operator -> IN .

    MINUS           reduce using rule 108 (membership_operator -> IN .)
    NOT             reduce using rule 108 (membership_operator -> IN .)
    ARROW           reduce using rule 108 (membership_operator -> IN .)
    ID              reduce using rule 108 (membership_operator -> IN .)
    LPAREN          reduce using rule 108 (membership_operator -> IN .)
    ICONST          reduce using rule 108 (membership_operator -> IN .)
    FALSE           reduce using rule 108 (membership_operator -> IN .)
    TRUE            reduce using rule 108 (membership_operator -> IN .)
    CCONST          reduce using rule 108 (membership_operator -> IN .)
    NULL            reduce using rule 108 (membership_operator -> IN .)
    SCONST          reduce using rule 108 (membership_operator -> IN .)
    ABS             reduce using rule 108 (membership_operator -> IN .)
    ASC             reduce using rule 108 (membership_operator -> IN .)
    NUM             reduce using rule 108 (membership_operator -> IN .)
    UPPER           reduce using rule 108 (membership_operator -> IN .)
    LOWER           reduce using rule 108 (membership_operator -> IN .)
    LENGTH          reduce using rule 108 (membership_operator -> IN .)
    READ            reduce using rule 108 (membership_operator -> IN .)
    PRINT           reduce using rule 108 (membership_operator -> IN .)


state 169

    (107) relational_operator -> LESSEQ .

    MINUS           reduce using rule 107 (relational_operator -> LESSEQ .)
    NOT             reduce using rule 107 (relational_operator -> LESSEQ .)
    ARROW           reduce using rule 107 (relational_operator -> LESSEQ .)
    ID              reduce using rule 107 (relational_operator -> LESSEQ .)
    LPAREN          reduce using rule 107 (relational_operator -> LESSEQ .)
    ICONST          reduce using rule 107 (relational_operator -> LESSEQ .)
    FALSE           reduce using rule 107 (relational_operator -> LESSEQ .)
    TRUE            reduce using rule 107 (relational_operator -> LESSEQ .)
    CCONST          reduce using rule 107 (relational_operator -> LESSEQ .)
    NULL            reduce using rule 107 (relational_operator -> LESSEQ .)
    SCONST          reduce using rule 107 (relational_operator -> LESSEQ .)
    ABS             reduce using rule 107 (relational_operator -> LESSEQ .)
    ASC             reduce using rule 107 (relational_operator -> LESSEQ .)
    NUM             reduce using rule 107 (relational_operator -> LESSEQ .)
    UPPER           reduce using rule 107 (relational_operator -> LESSEQ .)
    LOWER           reduce using rule 107 (relational_operator -> LESSEQ .)
    LENGTH          reduce using rule 107 (relational_operator -> LESSEQ .)
    READ            reduce using rule 107 (relational_operator -> LESSEQ .)
    PRINT           reduce using rule 107 (relational_operator -> LESSEQ .)


state 170

    (105) relational_operator -> GREATEREQ .

    MINUS           reduce using rule 105 (relational_operator -> GREATEREQ .)
    NOT             reduce using rule 105 (relational_operator -> GREATEREQ .)
    ARROW           reduce using rule 105 (relational_operator -> GREATEREQ .)
    ID              reduce using rule 105 (relational_operator -> GREATEREQ .)
    LPAREN          reduce using rule 105 (relational_operator -> GREATEREQ .)
    ICONST          reduce using rule 105 (relational_operator -> GREATEREQ .)
    FALSE           reduce using rule 105 (relational_operator -> GREATEREQ .)
    TRUE            reduce using rule 105 (relational_operator -> GREATEREQ .)
    CCONST          reduce using rule 105 (relational_operator -> GREATEREQ .)
    NULL            reduce using rule 105 (relational_operator -> GREATEREQ .)
    SCONST          reduce using rule 105 (relational_operator -> GREATEREQ .)
    ABS             reduce using rule 105 (relational_operator -> GREATEREQ .)
    ASC             reduce using rule 105 (relational_operator -> GREATEREQ .)
    NUM             reduce using rule 105 (relational_operator -> GREATEREQ .)
    UPPER           reduce using rule 105 (relational_operator -> GREATEREQ .)
    LOWER           reduce using rule 105 (relational_operator -> GREATEREQ .)
    LENGTH          reduce using rule 105 (relational_operator -> GREATEREQ .)
    READ            reduce using rule 105 (relational_operator -> GREATEREQ .)
    PRINT           reduce using rule 105 (relational_operator -> GREATEREQ .)


state 171

    (98) operator1 -> relational_operator .

    MINUS           reduce using rule 98 (operator1 -> relational_operator .)
    NOT             reduce using rule 98 (operator1 -> relational_operator .)
    ARROW           reduce using rule 98 (operator1 -> relational_operator .)
    ID              reduce using rule 98 (operator1 -> relational_operator .)
    LPAREN          reduce using rule 98 (operator1 -> relational_operator .)
    ICONST          reduce using rule 98 (operator1 -> relational_operator .)
    FALSE           reduce using rule 98 (operator1 -> relational_operator .)
    TRUE            reduce using rule 98 (operator1 -> relational_operator .)
    CCONST          reduce using rule 98 (operator1 -> relational_operator .)
    NULL            reduce using rule 98 (operator1 -> relational_operator .)
    SCONST          reduce using rule 98 (operator1 -> relational_operator .)
    ABS             reduce using rule 98 (operator1 -> relational_operator .)
    ASC             reduce using rule 98 (operator1 -> relational_operator .)
    NUM             reduce using rule 98 (operator1 -> relational_operator .)
    UPPER           reduce using rule 98 (operator1 -> relational_operator .)
    LOWER           reduce using rule 98 (operator1 -> relational_operator .)
    LENGTH          reduce using rule 98 (operator1 -> relational_operator .)
    READ            reduce using rule 98 (operator1 -> relational_operator .)
    PRINT           reduce using rule 98 (operator1 -> relational_operator .)


state 172

    (103) relational_operator -> DIFF .

    MINUS           reduce using rule 103 (relational_operator -> DIFF .)
    NOT             reduce using rule 103 (relational_operator -> DIFF .)
    ARROW           reduce using rule 103 (relational_operator -> DIFF .)
    ID              reduce using rule 103 (relational_operator -> DIFF .)
    LPAREN          reduce using rule 103 (relational_operator -> DIFF .)
    ICONST          reduce using rule 103 (relational_operator -> DIFF .)
    FALSE           reduce using rule 103 (relational_operator -> DIFF .)
    TRUE            reduce using rule 103 (relational_operator -> DIFF .)
    CCONST          reduce using rule 103 (relational_operator -> DIFF .)
    NULL            reduce using rule 103 (relational_operator -> DIFF .)
    SCONST          reduce using rule 103 (relational_operator -> DIFF .)
    ABS             reduce using rule 103 (relational_operator -> DIFF .)
    ASC             reduce using rule 103 (relational_operator -> DIFF .)
    NUM             reduce using rule 103 (relational_operator -> DIFF .)
    UPPER           reduce using rule 103 (relational_operator -> DIFF .)
    LOWER           reduce using rule 103 (relational_operator -> DIFF .)
    LENGTH          reduce using rule 103 (relational_operator -> DIFF .)
    READ            reduce using rule 103 (relational_operator -> DIFF .)
    PRINT           reduce using rule 103 (relational_operator -> DIFF .)


state 173

    (118) arithmetic_multiplicative_operator -> TIMES .

    MINUS           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    NOT             reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    ARROW           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    ID              reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    LPAREN          reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    ICONST          reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    FALSE           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    TRUE            reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    CCONST          reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    NULL            reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    SCONST          reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    ABS             reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    ASC             reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    NUM             reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    UPPER           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    LOWER           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    LENGTH          reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    READ            reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)
    PRINT           reduce using rule 118 (arithmetic_multiplicative_operator -> TIMES .)


state 174

    (119) arithmetic_multiplicative_operator -> DIVIDE .

    MINUS           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    NOT             reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    ARROW           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    ID              reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    LPAREN          reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    ICONST          reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    FALSE           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    TRUE            reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    CCONST          reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    NULL            reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    SCONST          reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    ABS             reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    ASC             reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    NUM             reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    UPPER           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    LOWER           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    LENGTH          reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    READ            reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)
    PRINT           reduce using rule 119 (arithmetic_multiplicative_operator -> DIVIDE .)


state 175

    (120) arithmetic_multiplicative_operator -> MOD .

    MINUS           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    NOT             reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    ARROW           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    ID              reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    LPAREN          reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    ICONST          reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    FALSE           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    TRUE            reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    CCONST          reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    NULL            reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    SCONST          reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    ABS             reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    ASC             reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    NUM             reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    UPPER           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    LOWER           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    LENGTH          reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    READ            reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)
    PRINT           reduce using rule 120 (arithmetic_multiplicative_operator -> MOD .)


state 176

    (117) operand2 -> operand2 arithmetic_multiplicative_operator . operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    primitive_value                shift and go to state 87
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 226
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    array_primitive_value          shift and go to state 75
    operand4                       shift and go to state 81
    value_array_element            shift and go to state 76
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 177

    (89) conditional_expression -> IF boolean_expression . then_expression else_expression FI
    (90) conditional_expression -> IF boolean_expression . then_expression elsif_expression else_expression FI
    (92) then_expression -> . THEN expression

    THEN            shift and go to state 227

    then_expression                shift and go to state 228

state 178

    (182) procedure_call -> identifier LPAREN parameter_list . RPAREN
    (184) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 230
    COMMA           shift and go to state 229


state 179

    (183) parameter_list -> parameter .

    RPAREN          reduce using rule 183 (parameter_list -> parameter .)
    COMMA           reduce using rule 183 (parameter_list -> parameter .)


state 180

    (181) procedure_call -> identifier LPAREN RPAREN .

    SEMI            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    ARROW           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    ASSIGN          reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    INCREASE        reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    DECREASE        reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    MULCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    DIVCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    MODCREASE       reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    LBRACKET        reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    TIMES           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    MOD             reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    PLUS            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    MINUS           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    STRCAT          reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    AND             reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    OR              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    EQUAL           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    DIFF            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    GREATER         reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    GREATEREQ       reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    LESS            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    LESSEQ          reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    IN              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    COMMA           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    THEN            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    WHILE           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    RBRACKET        reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    COLON           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    ID              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    ELSE            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    ELSIF           reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    TO              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    DOWN            reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    BY              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)
    FI              reduce using rule 181 (procedure_call -> identifier LPAREN RPAREN .)


state 181

    (185) parameter -> expression .

    RPAREN          reduce using rule 185 (parameter -> expression .)
    COMMA           reduce using rule 185 (parameter -> expression .)


state 182

    (9) declaration_statement -> DCL declaration_list SEMI .

    DCL             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    SYN             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    TYPE            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ID              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    EXIT            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    RETURN          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    RESULT          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    IF              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    DO              reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ABS             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    ASC             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    NUM             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    UPPER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    LOWER           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    LENGTH          reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    READ            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    PRINT           reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    $end            reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)
    END             reduce using rule 9 (declaration_statement -> DCL declaration_list SEMI .)


state 183

    (11) declaration_list -> declaration_list COMMA . declaration
    (12) declaration -> . identifier_list mode
    (13) declaration -> . identifier_list mode initialization
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier                     shift and go to state 45
    declaration                    shift and go to state 231
    identifier_list                shift and go to state 103

state 184

    (12) declaration -> identifier_list mode .
    (13) declaration -> identifier_list mode . initialization
    (14) initialization -> . ASSIGN expression

    SEMI            reduce using rule 12 (declaration -> identifier_list mode .)
    COMMA           reduce using rule 12 (declaration -> identifier_list mode .)
    ASSIGN          shift and go to state 232

    initialization                 shift and go to state 233

state 185

    (130) action_statement -> label_id COLON . action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ID              shift and go to state 22
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    location                       shift and go to state 13
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    return_action                  shift and go to state 44
    action                         shift and go to state 146
    builtin_call                   shift and go to state 24

state 186

    (168) step_enumeration -> loop_counter . ASSIGN start_value end_value
    (169) step_enumeration -> loop_counter . ASSIGN start_value step_value end_value
    (176) range_enumeration -> loop_counter . IN discrete_mode
    (177) range_enumeration -> loop_counter . DOWN IN discrete_mode

    ASSIGN          shift and go to state 235
    IN              shift and go to state 234
    DOWN            shift and go to state 236


state 187

    (170) loop_counter -> identifier .

    ASSIGN          reduce using rule 170 (loop_counter -> identifier .)
    IN              reduce using rule 170 (loop_counter -> identifier .)
    DOWN            reduce using rule 170 (loop_counter -> identifier .)


state 188

    (167) iteration -> range_enumeration .

    WHILE           reduce using rule 167 (iteration -> range_enumeration .)
    SEMI            reduce using rule 167 (iteration -> range_enumeration .)


state 189

    (165) for_control -> iteration .

    WHILE           reduce using rule 165 (for_control -> iteration .)
    SEMI            reduce using rule 165 (for_control -> iteration .)


state 190

    (163) control_part -> FOR for_control .
    (164) control_part -> FOR for_control . while_control
    (178) while_control -> . WHILE boolean_expression

    SEMI            reduce using rule 163 (control_part -> FOR for_control .)
    WHILE           shift and go to state 109

    while_control                  shift and go to state 237

state 191

    (166) iteration -> step_enumeration .

    WHILE           reduce using rule 166 (iteration -> step_enumeration .)
    SEMI            reduce using rule 166 (iteration -> step_enumeration .)


state 192

    (178) while_control -> WHILE boolean_expression .

    SEMI            reduce using rule 178 (while_control -> WHILE boolean_expression .)


state 193

    (159) do_action -> DO control_part SEMI . OD
    (161) do_action -> DO control_part SEMI . action_statement_list OD
    (152) action_statement_list -> . action_statement
    (153) action_statement_list -> . action_statement_list action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    OD              shift and go to state 238
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 107
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 239
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 194

    (160) do_action -> DO action_statement_list OD .

    SEMI            reduce using rule 160 (do_action -> DO action_statement_list OD .)


state 195

    (153) action_statement_list -> action_statement_list action_statement .

    EXIT            reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    RETURN          reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    RESULT          reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    ID              reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    IF              reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    DO              reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    ABS             reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    ASC             reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    NUM             reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    UPPER           reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    LOWER           reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    LENGTH          reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    READ            reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    PRINT           reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    FI              reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    ELSE            reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    ELSIF           reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)
    OD              reduce using rule 153 (action_statement_list -> action_statement_list action_statement .)


state 196

    (193) builtin_call -> builtin_name LPAREN parameter_list . RPAREN
    (184) parameter_list -> parameter_list . COMMA parameter

    RPAREN          shift and go to state 240
    COMMA           shift and go to state 229


state 197

    (192) builtin_call -> builtin_name LPAREN RPAREN .

    ARROW           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    TIMES           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVIDE          reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    MOD             reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    PLUS            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    MINUS           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    STRCAT          reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    AND             reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    OR              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    EQUAL           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIFF            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    GREATER         reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    GREATEREQ       reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    LESS            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    LESSEQ          reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    IN              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    SEMI            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    LBRACKET        reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    WHILE           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    THEN            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    RBRACKET        reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    COMMA           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    COLON           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    RPAREN          reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    ID              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSE            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    ELSIF           reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    TO              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    DOWN            reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    BY              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    FI              reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    ASSIGN          reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    INCREASE        reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    DECREASE        reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    MULCREASE       reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    DIVCREASE       reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)
    MODCREASE       reduce using rule 192 (builtin_call -> builtin_name LPAREN RPAREN .)


state 198

    (150) then_clause -> THEN .
    (151) then_clause -> THEN . action_statement_list
    (152) action_statement_list -> . action_statement
    (153) action_statement_list -> . action_statement_list action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    FI              reduce using rule 150 (then_clause -> THEN .)
    ELSE            reduce using rule 150 (then_clause -> THEN .)
    ELSIF           reduce using rule 150 (then_clause -> THEN .)
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 107
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 241
    bracketed_action               shift and go to state 19
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 199

    (148) if_action -> IF boolean_expression then_clause . FI
    (149) if_action -> IF boolean_expression then_clause . else_clause FI
    (154) else_clause -> . ELSE
    (155) else_clause -> . ELSE action_statement_list
    (156) else_clause -> . ELSIF boolean_expression then_clause
    (157) else_clause -> . ELSIF boolean_expression then_clause else_clause

    FI              shift and go to state 245
    ELSE            shift and go to state 242
    ELSIF           shift and go to state 243

    else_clause                    shift and go to state 244

state 200

    (26) newmode_list -> newmode_list COMMA mode_definition .

    SEMI            reduce using rule 26 (newmode_list -> newmode_list COMMA mode_definition .)
    COMMA           reduce using rule 26 (newmode_list -> newmode_list COMMA mode_definition .)


state 201

    (27) mode_definition -> identifier_list ASSIGN mode .

    SEMI            reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)
    COMMA           reduce using rule 27 (mode_definition -> identifier_list ASSIGN mode .)


state 202

    (16) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    REF             reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ID              reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    INT             reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    BOOL            reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    CHAR            reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    CHARS           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ARRAY           reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)
    ASSIGN          reduce using rule 16 (identifier_list -> identifier_list COMMA identifier .)


state 203

    (23) constant_expression -> expression .

    SEMI            reduce using rule 23 (constant_expression -> expression .)
    ID              reduce using rule 23 (constant_expression -> expression .)


state 204

    (21) synonym_definition -> identifier_list ASSIGN constant_expression .

    SEMI            reduce using rule 21 (synonym_definition -> identifier_list ASSIGN constant_expression .)
    ID              reduce using rule 21 (synonym_definition -> identifier_list ASSIGN constant_expression .)


state 205

    (40) discrete_range_mode -> discrete_mode LPAREN . literal_range RPAREN
    (42) literal_range -> . lower_bound COLON upper_bound
    (43) lower_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    boolean_literal                shift and go to state 67
    lower_bound                    shift and go to state 247
    literal_range                  shift and go to state 248
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    call_action                    shift and go to state 98
    dereferenced_reference         shift and go to state 30
    array_primitive_value          shift and go to state 75
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    location                       shift and go to state 84
    value_array_slice              shift and go to state 85
    value_array_element            shift and go to state 76
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    expression                     shift and go to state 246
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 206

    (22) synonym_definition -> identifier_list mode ASSIGN . constant_expression
    (23) constant_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    boolean_literal                shift and go to state 67
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    value_array_element            shift and go to state 76
    constant_expression            shift and go to state 249
    identifier                     shift and go to state 72
    array_location                 shift and go to state 16
    call_action                    shift and go to state 98
    dereferenced_reference         shift and go to state 30
    conditional_expression         shift and go to state 96
    array_primitive_value          shift and go to state 75
    primitive_value                shift and go to state 87
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    location                       shift and go to state 84
    value_array_slice              shift and go to state 85
    referenced_location            shift and go to state 74
    literal                        shift and go to state 77
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    expression                     shift and go to state 203
    character_literal              shift and go to state 94

state 207

    (45) reference_mode -> REF mode .

    ASSIGN          reduce using rule 45 (reference_mode -> REF mode .)
    SEMI            reduce using rule 45 (reference_mode -> REF mode .)
    COMMA           reduce using rule 45 (reference_mode -> REF mode .)
    LOC             reduce using rule 45 (reference_mode -> REF mode .)
    RPAREN          reduce using rule 45 (reference_mode -> REF mode .)


state 208

    (39) discrete_range_mode -> identifier LPAREN . literal_range RPAREN
    (42) literal_range -> . lower_bound COLON upper_bound
    (43) lower_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    value_array_slice              shift and go to state 85
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 246
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    lower_bound                    shift and go to state 247
    array_primitive_value          shift and go to state 75
    location                       shift and go to state 84
    literal_range                  shift and go to state 250
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 209

    (50) array_mode -> ARRAY LBRACKET . index_mode_list RBRACKET element_mode
    (51) index_mode_list -> . index_mode
    (52) index_mode_list -> . index_mode_list COMMA index_mode
    (53) index_mode -> . discrete_mode
    (54) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (42) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (43) lower_bound -> . expression
    (17) identifier -> . ID
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    ID              shift and go to state 22
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    array_element                  shift and go to state 9
    location                       shift and go to state 84
    empty_literal                  shift and go to state 66
    expression                     shift and go to state 246
    boolean_literal                shift and go to state 67
    lower_bound                    shift and go to state 247
    literal_range                  shift and go to state 251
    monadic_operator               shift and go to state 68
    discrete_range_mode            shift and go to state 132
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 252
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    dereferenced_reference         shift and go to state 30
    index_mode_list                shift and go to state 253
    array_primitive_value          shift and go to state 75
    conditional_expression         shift and go to state 96
    value_array_element            shift and go to state 76
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    index_mode                     shift and go to state 254
    value_array_slice              shift and go to state 85
    discrete_mode                  shift and go to state 255
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    operand4                       shift and go to state 81
    character_mode                 shift and go to state 142

state 210

    (48) string_mode -> CHARS LBRACKET . string_length RBRACKET
    (49) string_length -> . ICONST

    ICONST          shift and go to state 256

    string_length                  shift and go to state 257

state 211

    (202) procedure_statement -> label_id COLON procedure_definition SEMI .

    DCL             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    SYN             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    TYPE            reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ID              reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    EXIT            reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    RETURN          reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    RESULT          reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    IF              reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    DO              reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ABS             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    ASC             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    NUM             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    UPPER           reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    LOWER           reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    LENGTH          reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    READ            reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    PRINT           reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    $end            reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)
    END             reduce using rule 202 (procedure_statement -> label_id COLON procedure_definition SEMI .)


state 212

    (204) procedure_definition -> formal_procedure_head statement_list . END
    (3) statement_list -> statement_list . statement
    (4) statement -> . declaration_statement
    (5) statement -> . synonym_statement
    (6) statement -> . newmode_statement
    (7) statement -> . procedure_statement
    (8) statement -> . action_statement
    (9) declaration_statement -> . DCL declaration_list SEMI
    (18) synonym_statement -> . SYN synonym_list SEMI
    (24) newmode_statement -> . TYPE newmode_list SEMI
    (202) procedure_statement -> . label_id COLON procedure_definition SEMI
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (131) label_id -> . identifier
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (17) identifier -> . ID
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    END             shift and go to state 258
    DCL             shift and go to state 31
    SYN             shift and go to state 4
    TYPE            shift and go to state 1
    ID              shift and go to state 22
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    statement                      shift and go to state 104
    label_id                       shift and go to state 6
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    array_location                 shift and go to state 16
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    newmode_statement              shift and go to state 21
    builtin_call                   shift and go to state 24
    synonym_statement              shift and go to state 25
    array_slice                    shift and go to state 18
    location                       shift and go to state 13
    dereferenced_reference         shift and go to state 30
    return_action                  shift and go to state 44
    procedure_call                 shift and go to state 34
    declaration_statement          shift and go to state 36
    action_statement               shift and go to state 10
    builtin_name                   shift and go to state 38
    procedure_statement            shift and go to state 42
    exit_action                    shift and go to state 17
    action                         shift and go to state 33

state 213

    (203) procedure_definition -> formal_procedure_head END .

    SEMI            reduce using rule 203 (procedure_definition -> formal_procedure_head END .)


state 214

    (207) parenthesis_gambiarra -> LPAREN . RPAREN
    (208) parenthesis_gambiarra -> LPAREN . formal_parameter_list RPAREN
    (209) formal_parameter_list -> . formal_parameter
    (210) formal_parameter_list -> . formal_parameter_list COMMA formal_parameter
    (211) formal_parameter -> . identifier_list parameter_spec
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    RPAREN          shift and go to state 261
    ID              shift and go to state 22

    identifier_list                shift and go to state 259
    formal_parameter_list          shift and go to state 260
    identifier                     shift and go to state 45
    formal_parameter               shift and go to state 262

state 215

    (205) formal_procedure_head -> PROC parenthesis_gambiarra . SEMI
    (206) formal_procedure_head -> PROC parenthesis_gambiarra . result_spec SEMI
    (214) result_spec -> . RETURNS LPAREN mode RPAREN
    (215) result_spec -> . RETURNS LPAREN mode LOC RPAREN

    SEMI            shift and go to state 263
    RETURNS         shift and go to state 265

    result_spec                    shift and go to state 264

state 216

    (130) action_statement -> label_id COLON action SEMI .

    OD              reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    EXIT            reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    RETURN          reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    RESULT          reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    ID              reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    IF              reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    DO              reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    ABS             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    ASC             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    NUM             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    UPPER           reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    LOWER           reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    LENGTH          reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    READ            reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    PRINT           reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    END             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    DCL             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    SYN             reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    TYPE            reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    FI              reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    ELSE            reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    ELSIF           reduce using rule 130 (action_statement -> label_id COLON action SEMI .)
    $end            reduce using rule 130 (action_statement -> label_id COLON action SEMI .)


state 217

    (66) array_slice -> array_location LBRACKET lower_bound COLON . upper_bound RBRACKET
    (44) upper_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    upper_bound                    shift and go to state 267
    expression                     shift and go to state 266
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    operand2                       shift and go to state 90
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    array_location                 shift and go to state 16
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 218

    (63) array_element -> array_location LBRACKET expression_list RBRACKET .

    ARROW           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ASSIGN          reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    INCREASE        reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DECREASE        reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MULCREASE       reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIVCREASE       reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MODCREASE       reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LBRACKET        reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    STRCAT          reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    EQUAL           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DIFF            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    GREATER         reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    GREATEREQ       reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LESS            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    LESSEQ          reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    IN              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    SEMI            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ID              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    ELSIF           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    TO              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    DOWN            reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    BY              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    FI              reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)
    WHILE           reduce using rule 63 (array_element -> array_location LBRACKET expression_list RBRACKET .)


state 219

    (65) expression_list -> expression_list COMMA . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    expression                     shift and go to state 268
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 220

    (86) parenthesized_expression -> LPAREN expression RPAREN .

    TIMES           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    STRCAT          reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    DIFF            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    DOWN            reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    BY              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 86 (parenthesized_expression -> LPAREN expression RPAREN .)


state 221

    (56) integer_expression -> expression .
    (43) lower_bound -> expression .

    RBRACKET        reduce using rule 56 (integer_expression -> expression .)
    COLON           reduce using rule 43 (lower_bound -> expression .)


state 222

    (84) value_array_slice -> array_primitive_value LBRACKET lower_bound . COLON upper_bound RBRACKET

    COLON           shift and go to state 269


state 223

    (83) value_array_element -> array_primitive_value LBRACKET integer_expression . RBRACKET

    RBRACKET        shift and go to state 270


state 224

    (110) operand1 -> operand1 operator2 operand2 .
    (117) operand2 -> operand2 . arithmetic_multiplicative_operator operand3
    (118) arithmetic_multiplicative_operator -> . TIMES
    (119) arithmetic_multiplicative_operator -> . DIVIDE
    (120) arithmetic_multiplicative_operator -> . MOD

    PLUS            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    MINUS           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    STRCAT          reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    AND             reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    OR              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    EQUAL           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    DIFF            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    GREATER         reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    GREATEREQ       reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    LESS            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    LESSEQ          reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    IN              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    SEMI            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    TO              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    DOWN            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    RPAREN          reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    COMMA           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    RBRACKET        reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    FI              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    COLON           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    ELSE            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    ELSIF           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    THEN            reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    ID              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    WHILE           reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    BY              reduce using rule 110 (operand1 -> operand1 operator2 operand2 .)
    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    MOD             shift and go to state 175

    arithmetic_multiplicative_operator shift and go to state 176

state 225

    (97) operand0 -> operand0 operator1 operand1 .
    (110) operand1 -> operand1 . operator2 operand2
    (111) operator2 -> . arithmetic_additive_operator
    (112) operator2 -> . string_concatenation_operator
    (113) arithmetic_additive_operator -> . PLUS
    (114) arithmetic_additive_operator -> . MINUS
    (115) string_concatenation_operator -> . STRCAT

    AND             reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    OR              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    EQUAL           reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    DIFF            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    GREATER         reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    GREATEREQ       reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    LESS            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    LESSEQ          reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    IN              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    COLON           reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    RPAREN          reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    COMMA           reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    WHILE           reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    SEMI            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    RBRACKET        reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    ID              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    ELSE            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    ELSIF           reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    THEN            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    TO              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    DOWN            reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    BY              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    FI              reduce using rule 97 (operand0 -> operand0 operator1 operand1 .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    STRCAT          shift and go to state 158

    operator2                      shift and go to state 154
    string_concatenation_operator  shift and go to state 157
    arithmetic_additive_operator   shift and go to state 159

state 226

    (117) operand2 -> operand2 arithmetic_multiplicative_operator operand3 .

    TIMES           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIVIDE          reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MOD             reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    PLUS            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    MINUS           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    STRCAT          reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    AND             reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    OR              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    EQUAL           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DIFF            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GREATER         reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    GREATEREQ       reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LESS            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    LESSEQ          reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    IN              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    SEMI            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COLON           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    THEN            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSE            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ELSIF           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    TO              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    DOWN            reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    BY              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RPAREN          reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    COMMA           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    FI              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    RBRACKET        reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    ID              reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)
    WHILE           reduce using rule 117 (operand2 -> operand2 arithmetic_multiplicative_operator operand3 .)


state 227

    (92) then_expression -> THEN . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 271
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 228

    (89) conditional_expression -> IF boolean_expression then_expression . else_expression FI
    (90) conditional_expression -> IF boolean_expression then_expression . elsif_expression else_expression FI
    (93) else_expression -> . ELSE expression
    (94) elsif_expression -> . ELSIF boolean_expression then_expression
    (95) elsif_expression -> . elsif_expression ELSIF boolean_expression then_expression

    ELSE            shift and go to state 272
    ELSIF           shift and go to state 275

    else_expression                shift and go to state 273
    elsif_expression               shift and go to state 274

state 229

    (184) parameter_list -> parameter_list COMMA . parameter
    (185) parameter -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    parameter                      shift and go to state 276
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    expression                     shift and go to state 181
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 230

    (182) procedure_call -> identifier LPAREN parameter_list RPAREN .

    SEMI            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ARROW           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    INCREASE        reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DECREASE        reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MULCREASE       reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIVCREASE       reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MODCREASE       reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LBRACKET        reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MOD             reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    STRCAT          reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    AND             reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    OR              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    EQUAL           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DIFF            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    GREATER         reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    GREATEREQ       reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LESS            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    LESSEQ          reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    IN              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    RBRACKET        reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ID              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    TO              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    BY              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)
    FI              reduce using rule 182 (procedure_call -> identifier LPAREN parameter_list RPAREN .)


state 231

    (11) declaration_list -> declaration_list COMMA declaration .

    SEMI            reduce using rule 11 (declaration_list -> declaration_list COMMA declaration .)
    COMMA           reduce using rule 11 (declaration_list -> declaration_list COMMA declaration .)


state 232

    (14) initialization -> ASSIGN . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 277
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 233

    (13) declaration -> identifier_list mode initialization .

    SEMI            reduce using rule 13 (declaration -> identifier_list mode initialization .)
    COMMA           reduce using rule 13 (declaration -> identifier_list mode initialization .)


state 234

    (176) range_enumeration -> loop_counter IN . discrete_mode
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (17) identifier -> . ID

    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    ID              shift and go to state 22

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 278
    discrete_range_mode            shift and go to state 132
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 279

state 235

    (168) step_enumeration -> loop_counter ASSIGN . start_value end_value
    (169) step_enumeration -> loop_counter ASSIGN . start_value step_value end_value
    (171) start_value -> . discrete_expression
    (175) discrete_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    start_value                    shift and go to state 280
    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    boolean_literal                shift and go to state 67
    monadic_operator               shift and go to state 68
    location                       shift and go to state 84
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 72
    integer_literal                shift and go to state 78
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    call_action                    shift and go to state 98
    dereferenced_reference         shift and go to state 30
    array_primitive_value          shift and go to state 75
    value_array_element            shift and go to state 76
    literal                        shift and go to state 77
    discrete_expression            shift and go to state 282
    builtin_call                   shift and go to state 24
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    value_array_slice              shift and go to state 85
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    expression                     shift and go to state 281
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 236

    (177) range_enumeration -> loop_counter DOWN . IN discrete_mode

    IN              shift and go to state 283


state 237

    (164) control_part -> FOR for_control while_control .

    SEMI            reduce using rule 164 (control_part -> FOR for_control while_control .)


state 238

    (159) do_action -> DO control_part SEMI OD .

    SEMI            reduce using rule 159 (do_action -> DO control_part SEMI OD .)


state 239

    (161) do_action -> DO control_part SEMI action_statement_list . OD
    (153) action_statement_list -> action_statement_list . action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    OD              shift and go to state 284
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 195
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    call_action                    shift and go to state 20
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 240

    (193) builtin_call -> builtin_name LPAREN parameter_list RPAREN .

    ARROW           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TIMES           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVIDE          reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MOD             reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    PLUS            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MINUS           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    STRCAT          reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    AND             reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    OR              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    EQUAL           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIFF            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GREATER         reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    GREATEREQ       reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LESS            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LESSEQ          reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    IN              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    SEMI            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    LBRACKET        reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    WHILE           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    THEN            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RBRACKET        reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    COLON           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ID              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSE            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ELSIF           reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    TO              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DOWN            reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    BY              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    FI              reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    ASSIGN          reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    INCREASE        reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DECREASE        reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MULCREASE       reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    DIVCREASE       reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)
    MODCREASE       reduce using rule 193 (builtin_call -> builtin_name LPAREN parameter_list RPAREN .)


state 241

    (151) then_clause -> THEN action_statement_list .
    (153) action_statement_list -> action_statement_list . action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    FI              reduce using rule 151 (then_clause -> THEN action_statement_list .)
    ELSE            reduce using rule 151 (then_clause -> THEN action_statement_list .)
    ELSIF           reduce using rule 151 (then_clause -> THEN action_statement_list .)
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 195
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 242

    (154) else_clause -> ELSE .
    (155) else_clause -> ELSE . action_statement_list
    (152) action_statement_list -> . action_statement
    (153) action_statement_list -> . action_statement_list action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    FI              reduce using rule 154 (else_clause -> ELSE .)
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 107
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    action_statement_list          shift and go to state 285
    bracketed_action               shift and go to state 19
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 243

    (156) else_clause -> ELSIF . boolean_expression then_clause
    (157) else_clause -> ELSIF . boolean_expression then_clause else_clause
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    expression                     shift and go to state 116
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 72
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    dereferenced_reference         shift and go to state 30
    boolean_expression             shift and go to state 286
    array_primitive_value          shift and go to state 75
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    location                       shift and go to state 84
    boolean_literal                shift and go to state 67
    value_array_slice              shift and go to state 85
    value_array_element            shift and go to state 76
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 244

    (149) if_action -> IF boolean_expression then_clause else_clause . FI

    FI              shift and go to state 287


state 245

    (148) if_action -> IF boolean_expression then_clause FI .

    SEMI            reduce using rule 148 (if_action -> IF boolean_expression then_clause FI .)


state 246

    (43) lower_bound -> expression .

    COLON           reduce using rule 43 (lower_bound -> expression .)


state 247

    (42) literal_range -> lower_bound . COLON upper_bound

    COLON           shift and go to state 288


state 248

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 289


state 249

    (22) synonym_definition -> identifier_list mode ASSIGN constant_expression .

    SEMI            reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)
    ID              reduce using rule 22 (synonym_definition -> identifier_list mode ASSIGN constant_expression .)


state 250

    (39) discrete_range_mode -> identifier LPAREN literal_range . RPAREN

    RPAREN          shift and go to state 290


state 251

    (54) index_mode -> literal_range .

    RBRACKET        reduce using rule 54 (index_mode -> literal_range .)
    COMMA           reduce using rule 54 (index_mode -> literal_range .)


state 252

    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN
    (57) location -> identifier .
    (181) procedure_call -> identifier . LPAREN RPAREN
    (182) procedure_call -> identifier . LPAREN parameter_list RPAREN

    LPAREN          shift and go to state 291
    ARROW           reduce using rule 57 (location -> identifier .)
    TIMES           reduce using rule 57 (location -> identifier .)
    DIVIDE          reduce using rule 57 (location -> identifier .)
    MOD             reduce using rule 57 (location -> identifier .)
    PLUS            reduce using rule 57 (location -> identifier .)
    MINUS           reduce using rule 57 (location -> identifier .)
    STRCAT          reduce using rule 57 (location -> identifier .)
    AND             reduce using rule 57 (location -> identifier .)
    OR              reduce using rule 57 (location -> identifier .)
    EQUAL           reduce using rule 57 (location -> identifier .)
    DIFF            reduce using rule 57 (location -> identifier .)
    GREATER         reduce using rule 57 (location -> identifier .)
    GREATEREQ       reduce using rule 57 (location -> identifier .)
    LESS            reduce using rule 57 (location -> identifier .)
    LESSEQ          reduce using rule 57 (location -> identifier .)
    IN              reduce using rule 57 (location -> identifier .)
    COLON           reduce using rule 57 (location -> identifier .)
    LBRACKET        reduce using rule 57 (location -> identifier .)


state 253

    (50) array_mode -> ARRAY LBRACKET index_mode_list . RBRACKET element_mode
    (52) index_mode_list -> index_mode_list . COMMA index_mode

    RBRACKET        shift and go to state 292
    COMMA           shift and go to state 293


state 254

    (51) index_mode_list -> index_mode .

    RBRACKET        reduce using rule 51 (index_mode_list -> index_mode .)
    COMMA           reduce using rule 51 (index_mode_list -> index_mode .)


state 255

    (53) index_mode -> discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    RBRACKET        reduce using rule 53 (index_mode -> discrete_mode .)
    COMMA           reduce using rule 53 (index_mode -> discrete_mode .)
    LPAREN          shift and go to state 205


state 256

    (49) string_length -> ICONST .

    RBRACKET        reduce using rule 49 (string_length -> ICONST .)


state 257

    (48) string_mode -> CHARS LBRACKET string_length . RBRACKET

    RBRACKET        shift and go to state 294


state 258

    (204) procedure_definition -> formal_procedure_head statement_list END .

    SEMI            reduce using rule 204 (procedure_definition -> formal_procedure_head statement_list END .)


state 259

    (211) formal_parameter -> identifier_list . parameter_spec
    (16) identifier_list -> identifier_list . COMMA identifier
    (212) parameter_spec -> . mode
    (213) parameter_spec -> . mode LOC
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    COMMA           shift and go to state 121
    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 137
    mode                           shift and go to state 296
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    array_mode                     shift and go to state 129
    parameter_spec                 shift and go to state 295
    discrete_range_mode            shift and go to state 132
    composite_mode                 shift and go to state 131
    mode_name                      shift and go to state 128
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 260

    (208) parenthesis_gambiarra -> LPAREN formal_parameter_list . RPAREN
    (210) formal_parameter_list -> formal_parameter_list . COMMA formal_parameter

    RPAREN          shift and go to state 298
    COMMA           shift and go to state 297


state 261

    (207) parenthesis_gambiarra -> LPAREN RPAREN .

    SEMI            reduce using rule 207 (parenthesis_gambiarra -> LPAREN RPAREN .)
    RETURNS         reduce using rule 207 (parenthesis_gambiarra -> LPAREN RPAREN .)


state 262

    (209) formal_parameter_list -> formal_parameter .

    RPAREN          reduce using rule 209 (formal_parameter_list -> formal_parameter .)
    COMMA           reduce using rule 209 (formal_parameter_list -> formal_parameter .)


state 263

    (205) formal_procedure_head -> PROC parenthesis_gambiarra SEMI .

    END             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    DCL             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    SYN             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    TYPE            reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ID              reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    EXIT            reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    RETURN          reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    RESULT          reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    IF              reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    DO              reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ABS             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    ASC             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    NUM             reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    UPPER           reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    LOWER           reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    LENGTH          reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    READ            reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)
    PRINT           reduce using rule 205 (formal_procedure_head -> PROC parenthesis_gambiarra SEMI .)


state 264

    (206) formal_procedure_head -> PROC parenthesis_gambiarra result_spec . SEMI

    SEMI            shift and go to state 299


state 265

    (214) result_spec -> RETURNS . LPAREN mode RPAREN
    (215) result_spec -> RETURNS . LPAREN mode LOC RPAREN

    LPAREN          shift and go to state 300


state 266

    (44) upper_bound -> expression .

    RBRACKET        reduce using rule 44 (upper_bound -> expression .)
    RPAREN          reduce using rule 44 (upper_bound -> expression .)
    COMMA           reduce using rule 44 (upper_bound -> expression .)


state 267

    (66) array_slice -> array_location LBRACKET lower_bound COLON upper_bound . RBRACKET

    RBRACKET        shift and go to state 301


state 268

    (65) expression_list -> expression_list COMMA expression .

    RBRACKET        reduce using rule 65 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 65 (expression_list -> expression_list COMMA expression .)


state 269

    (84) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON . upper_bound RBRACKET
    (44) upper_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    expression                     shift and go to state 266
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    conditional_expression         shift and go to state 96
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    upper_bound                    shift and go to state 302
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_primitive_value          shift and go to state 75
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 270

    (83) value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .

    TIMES           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DIVIDE          reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    MOD             reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    PLUS            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    MINUS           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    STRCAT          reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    AND             reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    OR              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    EQUAL           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DIFF            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    GREATER         reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    GREATEREQ       reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LESS            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LESSEQ          reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    IN              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    COLON           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    LBRACKET        reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    SEMI            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    THEN            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    RBRACKET        reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    COMMA           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    RPAREN          reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ID              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ELSE            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    ELSIF           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    TO              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    DOWN            reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    BY              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    FI              reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)
    WHILE           reduce using rule 83 (value_array_element -> array_primitive_value LBRACKET integer_expression RBRACKET .)


state 271

    (92) then_expression -> THEN expression .

    ELSIF           reduce using rule 92 (then_expression -> THEN expression .)
    ELSE            reduce using rule 92 (then_expression -> THEN expression .)


state 272

    (93) else_expression -> ELSE . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 303
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 273

    (89) conditional_expression -> IF boolean_expression then_expression else_expression . FI

    FI              shift and go to state 304


state 274

    (90) conditional_expression -> IF boolean_expression then_expression elsif_expression . else_expression FI
    (95) elsif_expression -> elsif_expression . ELSIF boolean_expression then_expression
    (93) else_expression -> . ELSE expression

    ELSIF           shift and go to state 306
    ELSE            shift and go to state 272

    else_expression                shift and go to state 305

state 275

    (94) elsif_expression -> ELSIF . boolean_expression then_expression
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    expression                     shift and go to state 116
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    boolean_expression             shift and go to state 307
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 276

    (184) parameter_list -> parameter_list COMMA parameter .

    RPAREN          reduce using rule 184 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 184 (parameter_list -> parameter_list COMMA parameter .)


state 277

    (14) initialization -> ASSIGN expression .

    SEMI            reduce using rule 14 (initialization -> ASSIGN expression .)
    COMMA           reduce using rule 14 (initialization -> ASSIGN expression .)


state 278

    (39) discrete_range_mode -> identifier . LPAREN literal_range RPAREN

    LPAREN          shift and go to state 208


state 279

    (176) range_enumeration -> loop_counter IN discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 176 (range_enumeration -> loop_counter IN discrete_mode .)
    SEMI            reduce using rule 176 (range_enumeration -> loop_counter IN discrete_mode .)
    LPAREN          shift and go to state 205


state 280

    (168) step_enumeration -> loop_counter ASSIGN start_value . end_value
    (169) step_enumeration -> loop_counter ASSIGN start_value . step_value end_value
    (173) end_value -> . TO discrete_expression
    (174) end_value -> . DOWN TO discrete_expression
    (172) step_value -> . BY integer_expression

    TO              shift and go to state 312
    DOWN            shift and go to state 310
    BY              shift and go to state 311

    step_value                     shift and go to state 309
    end_value                      shift and go to state 308

state 281

    (175) discrete_expression -> expression .

    WHILE           reduce using rule 175 (discrete_expression -> expression .)
    SEMI            reduce using rule 175 (discrete_expression -> expression .)
    TO              reduce using rule 175 (discrete_expression -> expression .)
    DOWN            reduce using rule 175 (discrete_expression -> expression .)
    BY              reduce using rule 175 (discrete_expression -> expression .)


state 282

    (171) start_value -> discrete_expression .

    TO              reduce using rule 171 (start_value -> discrete_expression .)
    DOWN            reduce using rule 171 (start_value -> discrete_expression .)
    BY              reduce using rule 171 (start_value -> discrete_expression .)


state 283

    (177) range_enumeration -> loop_counter DOWN IN . discrete_mode
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (17) identifier -> . ID

    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    ID              shift and go to state 22

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 278
    discrete_range_mode            shift and go to state 132
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 313

state 284

    (161) do_action -> DO control_part SEMI action_statement_list OD .

    SEMI            reduce using rule 161 (do_action -> DO control_part SEMI action_statement_list OD .)


state 285

    (155) else_clause -> ELSE action_statement_list .
    (153) action_statement_list -> action_statement_list . action_statement
    (129) action_statement -> . action SEMI
    (130) action_statement -> . label_id COLON action SEMI
    (132) action -> . bracketed_action
    (133) action -> . assignment_action
    (134) action -> . call_action
    (135) action -> . exit_action
    (136) action -> . return_action
    (137) action -> . result_action
    (131) label_id -> . identifier
    (138) bracketed_action -> . if_action
    (139) bracketed_action -> . do_action
    (140) assignment_action -> . location assigning_operator expression
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (186) exit_action -> . EXIT exit_label_id
    (188) return_action -> . RETURN
    (189) return_action -> . RETURN result
    (190) result_action -> . RESULT result
    (17) identifier -> . ID
    (148) if_action -> . IF boolean_expression then_clause FI
    (149) if_action -> . IF boolean_expression then_clause else_clause FI
    (158) do_action -> . DO OD
    (159) do_action -> . DO control_part SEMI OD
    (160) do_action -> . DO action_statement_list OD
    (161) do_action -> . DO control_part SEMI action_statement_list OD
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT
    (67) array_location -> . location

    FI              reduce using rule 155 (else_clause -> ELSE action_statement_list .)
    EXIT            shift and go to state 23
    RETURN          shift and go to state 40
    RESULT          shift and go to state 26
    ID              shift and go to state 22
    IF              shift and go to state 41
    DO              shift and go to state 35
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    do_action                      shift and go to state 3
    array_slice                    shift and go to state 18
    call_action                    shift and go to state 20
    builtin_name                   shift and go to state 38
    label_id                       shift and go to state 106
    location                       shift and go to state 13
    if_action                      shift and go to state 7
    array_element                  shift and go to state 9
    action_statement               shift and go to state 195
    dereferenced_reference         shift and go to state 30
    assignment_action              shift and go to state 11
    result_action                  shift and go to state 12
    identifier                     shift and go to state 28
    procedure_call                 shift and go to state 34
    array_location                 shift and go to state 16
    exit_action                    shift and go to state 17
    bracketed_action               shift and go to state 19
    action                         shift and go to state 33
    return_action                  shift and go to state 44
    builtin_call                   shift and go to state 24

state 286

    (156) else_clause -> ELSIF boolean_expression . then_clause
    (157) else_clause -> ELSIF boolean_expression . then_clause else_clause
    (150) then_clause -> . THEN
    (151) then_clause -> . THEN action_statement_list

    THEN            shift and go to state 198

    then_clause                    shift and go to state 314

state 287

    (149) if_action -> IF boolean_expression then_clause else_clause FI .

    SEMI            reduce using rule 149 (if_action -> IF boolean_expression then_clause else_clause FI .)


state 288

    (42) literal_range -> lower_bound COLON . upper_bound
    (44) upper_bound -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    character_string_literal       shift and go to state 70
    expression                     shift and go to state 266
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    conditional_expression         shift and go to state 96
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    upper_bound                    shift and go to state 315
    dereferenced_reference         shift and go to state 30
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 289

    (40) discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    SEMI            reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    LOC             reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)
    RBRACKET        reduce using rule 40 (discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN .)


state 290

    (39) discrete_range_mode -> identifier LPAREN literal_range RPAREN .

    LPAREN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    WHILE           reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    SEMI            reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    ASSIGN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    LOC             reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RPAREN          reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    COMMA           reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)
    RBRACKET        reduce using rule 39 (discrete_range_mode -> identifier LPAREN literal_range RPAREN .)


state 291

    (39) discrete_range_mode -> identifier LPAREN . literal_range RPAREN
    (181) procedure_call -> identifier LPAREN . RPAREN
    (182) procedure_call -> identifier LPAREN . parameter_list RPAREN
    (42) literal_range -> . lower_bound COLON upper_bound
    (183) parameter_list -> . parameter
    (184) parameter_list -> . parameter_list COMMA parameter
    (43) lower_bound -> . expression
    (185) parameter -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    RPAREN          shift and go to state 180
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    array_element                  shift and go to state 9
    empty_literal                  shift and go to state 66
    boolean_literal                shift and go to state 67
    lower_bound                    shift and go to state 247
    literal_range                  shift and go to state 250
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    parameter_list                 shift and go to state 178
    call_action                    shift and go to state 98
    dereferenced_reference         shift and go to state 30
    array_primitive_value          shift and go to state 75
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    operand4                       shift and go to state 81
    parameter                      shift and go to state 179
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    value_array_element            shift and go to state 76
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    expression                     shift and go to state 316
    character_literal              shift and go to state 94
    conditional_expression         shift and go to state 96

state 292

    (50) array_mode -> ARRAY LBRACKET index_mode_list RBRACKET . element_mode
    (55) element_mode -> . mode
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    element_mode                   shift and go to state 317
    mode                           shift and go to state 318
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    array_mode                     shift and go to state 129
    identifier                     shift and go to state 137
    composite_mode                 shift and go to state 131
    discrete_range_mode            shift and go to state 132
    mode_name                      shift and go to state 128
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 293

    (52) index_mode_list -> index_mode_list COMMA . index_mode
    (53) index_mode -> . discrete_mode
    (54) index_mode -> . literal_range
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (42) literal_range -> . lower_bound COLON upper_bound
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (43) lower_bound -> . expression
    (17) identifier -> . ID
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    ID              shift and go to state 22
    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    array_element                  shift and go to state 9
    location                       shift and go to state 84
    empty_literal                  shift and go to state 66
    expression                     shift and go to state 246
    boolean_literal                shift and go to state 67
    lower_bound                    shift and go to state 247
    literal_range                  shift and go to state 251
    monadic_operator               shift and go to state 68
    discrete_range_mode            shift and go to state 132
    character_string_literal       shift and go to state 70
    identifier                     shift and go to state 252
    referenced_location            shift and go to state 74
    array_location                 shift and go to state 16
    dereferenced_reference         shift and go to state 30
    array_primitive_value          shift and go to state 75
    conditional_expression         shift and go to state 96
    value_array_element            shift and go to state 76
    literal                        shift and go to state 77
    builtin_call                   shift and go to state 24
    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    index_mode                     shift and go to state 319
    value_array_slice              shift and go to state 85
    discrete_mode                  shift and go to state 255
    primitive_value                shift and go to state 87
    procedure_call                 shift and go to state 34
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    builtin_name                   shift and go to state 38
    operand3                       shift and go to state 92
    call_action                    shift and go to state 98
    character_literal              shift and go to state 94
    operand4                       shift and go to state 81
    character_mode                 shift and go to state 142

state 294

    (48) string_mode -> CHARS LBRACKET string_length RBRACKET .

    ASSIGN          reduce using rule 48 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    SEMI            reduce using rule 48 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    COMMA           reduce using rule 48 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    LOC             reduce using rule 48 (string_mode -> CHARS LBRACKET string_length RBRACKET .)
    RPAREN          reduce using rule 48 (string_mode -> CHARS LBRACKET string_length RBRACKET .)


state 295

    (211) formal_parameter -> identifier_list parameter_spec .

    RPAREN          reduce using rule 211 (formal_parameter -> identifier_list parameter_spec .)
    COMMA           reduce using rule 211 (formal_parameter -> identifier_list parameter_spec .)


state 296

    (212) parameter_spec -> mode .
    (213) parameter_spec -> mode . LOC

    RPAREN          reduce using rule 212 (parameter_spec -> mode .)
    COMMA           reduce using rule 212 (parameter_spec -> mode .)
    LOC             shift and go to state 320


state 297

    (210) formal_parameter_list -> formal_parameter_list COMMA . formal_parameter
    (211) formal_parameter -> . identifier_list parameter_spec
    (15) identifier_list -> . identifier
    (16) identifier_list -> . identifier_list COMMA identifier
    (17) identifier -> . ID

    ID              shift and go to state 22

    identifier_list                shift and go to state 259
    identifier                     shift and go to state 45
    formal_parameter               shift and go to state 321

state 298

    (208) parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .

    SEMI            reduce using rule 208 (parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .)
    RETURNS         reduce using rule 208 (parenthesis_gambiarra -> LPAREN formal_parameter_list RPAREN .)


state 299

    (206) formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .

    END             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    DCL             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    SYN             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    TYPE            reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ID              reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    EXIT            reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    RETURN          reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    RESULT          reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    IF              reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    DO              reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ABS             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    ASC             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    NUM             reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    UPPER           reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    LOWER           reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    LENGTH          reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    READ            reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)
    PRINT           reduce using rule 206 (formal_procedure_head -> PROC parenthesis_gambiarra result_spec SEMI .)


state 300

    (214) result_spec -> RETURNS LPAREN . mode RPAREN
    (215) result_spec -> RETURNS LPAREN . mode LOC RPAREN
    (28) mode -> . mode_name
    (29) mode -> . discrete_mode
    (30) mode -> . reference_mode
    (31) mode -> . composite_mode
    (41) mode_name -> . identifier
    (32) discrete_mode -> . integer_mode
    (33) discrete_mode -> . boolean_mode
    (34) discrete_mode -> . character_mode
    (35) discrete_mode -> . discrete_range_mode
    (45) reference_mode -> . REF mode
    (46) composite_mode -> . string_mode
    (47) composite_mode -> . array_mode
    (17) identifier -> . ID
    (36) integer_mode -> . INT
    (37) boolean_mode -> . BOOL
    (38) character_mode -> . CHAR
    (39) discrete_range_mode -> . identifier LPAREN literal_range RPAREN
    (40) discrete_range_mode -> . discrete_mode LPAREN literal_range RPAREN
    (48) string_mode -> . CHARS LBRACKET string_length RBRACKET
    (50) array_mode -> . ARRAY LBRACKET index_mode_list RBRACKET element_mode

    REF             shift and go to state 135
    ID              shift and go to state 22
    INT             shift and go to state 138
    BOOL            shift and go to state 130
    CHAR            shift and go to state 141
    CHARS           shift and go to state 140
    ARRAY           shift and go to state 139

    boolean_mode                   shift and go to state 124
    integer_mode                   shift and go to state 125
    identifier                     shift and go to state 137
    mode                           shift and go to state 322
    string_mode                    shift and go to state 136
    reference_mode                 shift and go to state 127
    array_mode                     shift and go to state 129
    composite_mode                 shift and go to state 131
    mode_name                      shift and go to state 128
    discrete_range_mode            shift and go to state 132
    character_mode                 shift and go to state 142
    discrete_mode                  shift and go to state 133

state 301

    (66) array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .

    ARROW           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TIMES           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVIDE          reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MOD             reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    PLUS            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MINUS           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    STRCAT          reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    AND             reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    OR              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    EQUAL           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIFF            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATER         reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATEREQ       reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESS            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESSEQ          reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    IN              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    WHILE           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    SEMI            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LBRACKET        reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    THEN            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ASSIGN          reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    INCREASE        reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DECREASE        reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MULCREASE       reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVCREASE       reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MODCREASE       reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RBRACKET        reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COMMA           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COLON           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RPAREN          reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ID              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSE            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSIF           reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TO              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DOWN            reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    BY              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)
    FI              reduce using rule 66 (array_slice -> array_location LBRACKET lower_bound COLON upper_bound RBRACKET .)


state 302

    (84) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound . RBRACKET

    RBRACKET        shift and go to state 323


state 303

    (93) else_expression -> ELSE expression .

    FI              reduce using rule 93 (else_expression -> ELSE expression .)


state 304

    (89) conditional_expression -> IF boolean_expression then_expression else_expression FI .

    TO              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    DOWN            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    BY              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    SEMI            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RPAREN          reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSE            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ELSIF           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COLON           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    WHILE           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    THEN            reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    ID              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    RBRACKET        reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    COMMA           reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)
    FI              reduce using rule 89 (conditional_expression -> IF boolean_expression then_expression else_expression FI .)


state 305

    (90) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression . FI

    FI              shift and go to state 324


state 306

    (95) elsif_expression -> elsif_expression ELSIF . boolean_expression then_expression
    (91) boolean_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    expression                     shift and go to state 116
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    boolean_expression             shift and go to state 325
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 307

    (94) elsif_expression -> ELSIF boolean_expression . then_expression
    (92) then_expression -> . THEN expression

    THEN            shift and go to state 227

    then_expression                shift and go to state 326

state 308

    (168) step_enumeration -> loop_counter ASSIGN start_value end_value .

    WHILE           reduce using rule 168 (step_enumeration -> loop_counter ASSIGN start_value end_value .)
    SEMI            reduce using rule 168 (step_enumeration -> loop_counter ASSIGN start_value end_value .)


state 309

    (169) step_enumeration -> loop_counter ASSIGN start_value step_value . end_value
    (173) end_value -> . TO discrete_expression
    (174) end_value -> . DOWN TO discrete_expression

    TO              shift and go to state 312
    DOWN            shift and go to state 310

    end_value                      shift and go to state 327

state 310

    (174) end_value -> DOWN . TO discrete_expression

    TO              shift and go to state 328


state 311

    (172) step_value -> BY . integer_expression
    (56) integer_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 329
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    operand2                       shift and go to state 90
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    integer_expression             shift and go to state 330
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    builtin_call                   shift and go to state 24

state 312

    (173) end_value -> TO . discrete_expression
    (175) discrete_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 281
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    discrete_expression            shift and go to state 331
    builtin_call                   shift and go to state 24

state 313

    (177) range_enumeration -> loop_counter DOWN IN discrete_mode .
    (40) discrete_range_mode -> discrete_mode . LPAREN literal_range RPAREN

    WHILE           reduce using rule 177 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    SEMI            reduce using rule 177 (range_enumeration -> loop_counter DOWN IN discrete_mode .)
    LPAREN          shift and go to state 205


state 314

    (156) else_clause -> ELSIF boolean_expression then_clause .
    (157) else_clause -> ELSIF boolean_expression then_clause . else_clause
    (154) else_clause -> . ELSE
    (155) else_clause -> . ELSE action_statement_list
    (156) else_clause -> . ELSIF boolean_expression then_clause
    (157) else_clause -> . ELSIF boolean_expression then_clause else_clause

    FI              reduce using rule 156 (else_clause -> ELSIF boolean_expression then_clause .)
    ELSE            shift and go to state 242
    ELSIF           shift and go to state 243

    else_clause                    shift and go to state 332

state 315

    (42) literal_range -> lower_bound COLON upper_bound .

    RPAREN          reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)
    RBRACKET        reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 42 (literal_range -> lower_bound COLON upper_bound .)


state 316

    (43) lower_bound -> expression .
    (185) parameter -> expression .

    COLON           reduce using rule 43 (lower_bound -> expression .)
    RPAREN          reduce using rule 185 (parameter -> expression .)
    COMMA           reduce using rule 185 (parameter -> expression .)


state 317

    (50) array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .

    ASSIGN          reduce using rule 50 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    SEMI            reduce using rule 50 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    COMMA           reduce using rule 50 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    LOC             reduce using rule 50 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)
    RPAREN          reduce using rule 50 (array_mode -> ARRAY LBRACKET index_mode_list RBRACKET element_mode .)


state 318

    (55) element_mode -> mode .

    ASSIGN          reduce using rule 55 (element_mode -> mode .)
    SEMI            reduce using rule 55 (element_mode -> mode .)
    COMMA           reduce using rule 55 (element_mode -> mode .)
    LOC             reduce using rule 55 (element_mode -> mode .)
    RPAREN          reduce using rule 55 (element_mode -> mode .)


state 319

    (52) index_mode_list -> index_mode_list COMMA index_mode .

    RBRACKET        reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)
    COMMA           reduce using rule 52 (index_mode_list -> index_mode_list COMMA index_mode .)


state 320

    (213) parameter_spec -> mode LOC .

    RPAREN          reduce using rule 213 (parameter_spec -> mode LOC .)
    COMMA           reduce using rule 213 (parameter_spec -> mode LOC .)


state 321

    (210) formal_parameter_list -> formal_parameter_list COMMA formal_parameter .

    RPAREN          reduce using rule 210 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)
    COMMA           reduce using rule 210 (formal_parameter_list -> formal_parameter_list COMMA formal_parameter .)


state 322

    (214) result_spec -> RETURNS LPAREN mode . RPAREN
    (215) result_spec -> RETURNS LPAREN mode . LOC RPAREN

    RPAREN          shift and go to state 333
    LOC             shift and go to state 334


state 323

    (84) value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .

    TIMES           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIVIDE          reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MOD             reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    PLUS            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    MINUS           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    STRCAT          reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    AND             reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    OR              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    EQUAL           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DIFF            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATER         reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    GREATEREQ       reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESS            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LESSEQ          reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    IN              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COLON           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    LBRACKET        reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RPAREN          reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    SEMI            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ID              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    RBRACKET        reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    THEN            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    COMMA           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSE            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    ELSIF           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    TO              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    DOWN            reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    BY              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    FI              reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)
    WHILE           reduce using rule 84 (value_array_slice -> array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET .)


state 324

    (90) conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .

    TO              reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    DOWN            reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    BY              reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    SEMI            reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RPAREN          reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSE            reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ELSIF           reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COLON           reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    WHILE           reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    THEN            reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    ID              reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    RBRACKET        reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    COMMA           reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)
    FI              reduce using rule 90 (conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI .)


state 325

    (95) elsif_expression -> elsif_expression ELSIF boolean_expression . then_expression
    (92) then_expression -> . THEN expression

    THEN            shift and go to state 227

    then_expression                shift and go to state 335

state 326

    (94) elsif_expression -> ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 94 (elsif_expression -> ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 94 (elsif_expression -> ELSIF boolean_expression then_expression .)


state 327

    (169) step_enumeration -> loop_counter ASSIGN start_value step_value end_value .

    WHILE           reduce using rule 169 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)
    SEMI            reduce using rule 169 (step_enumeration -> loop_counter ASSIGN start_value step_value end_value .)


state 328

    (174) end_value -> DOWN TO . discrete_expression
    (175) discrete_expression -> . expression
    (87) expression -> . operand0
    (88) expression -> . conditional_expression
    (96) operand0 -> . operand1
    (97) operand0 -> . operand0 operator1 operand1
    (89) conditional_expression -> . IF boolean_expression then_expression else_expression FI
    (90) conditional_expression -> . IF boolean_expression then_expression elsif_expression else_expression FI
    (109) operand1 -> . operand2
    (110) operand1 -> . operand1 operator2 operand2
    (116) operand2 -> . operand3
    (117) operand2 -> . operand2 arithmetic_multiplicative_operator operand3
    (121) operand3 -> . operand4
    (122) operand3 -> . monadic_operator operand4
    (125) operand4 -> . location
    (126) operand4 -> . referenced_location
    (127) operand4 -> . primitive_value
    (123) monadic_operator -> . MINUS
    (124) monadic_operator -> . NOT
    (57) location -> . identifier
    (58) location -> . dereferenced_reference
    (59) location -> . array_element
    (60) location -> . array_slice
    (61) location -> . call_action
    (128) referenced_location -> . ARROW location
    (68) primitive_value -> . literal
    (69) primitive_value -> . value_array_element
    (70) primitive_value -> . value_array_slice
    (71) primitive_value -> . parenthesized_expression
    (17) identifier -> . ID
    (62) dereferenced_reference -> . location ARROW
    (63) array_element -> . array_location LBRACKET expression_list RBRACKET
    (66) array_slice -> . array_location LBRACKET lower_bound COLON upper_bound RBRACKET
    (179) call_action -> . procedure_call
    (180) call_action -> . builtin_call
    (72) literal -> . integer_literal
    (73) literal -> . boolean_literal
    (74) literal -> . character_literal
    (75) literal -> . empty_literal
    (76) literal -> . character_string_literal
    (83) value_array_element -> . array_primitive_value LBRACKET integer_expression RBRACKET
    (84) value_array_slice -> . array_primitive_value LBRACKET lower_bound COLON upper_bound RBRACKET
    (86) parenthesized_expression -> . LPAREN expression RPAREN
    (67) array_location -> . location
    (181) procedure_call -> . identifier LPAREN RPAREN
    (182) procedure_call -> . identifier LPAREN parameter_list RPAREN
    (192) builtin_call -> . builtin_name LPAREN RPAREN
    (193) builtin_call -> . builtin_name LPAREN parameter_list RPAREN
    (77) integer_literal -> . ICONST
    (78) boolean_literal -> . FALSE
    (79) boolean_literal -> . TRUE
    (80) character_literal -> . CCONST
    (81) empty_literal -> . NULL
    (82) character_string_literal -> . SCONST
    (85) array_primitive_value -> . primitive_value
    (194) builtin_name -> . ABS
    (195) builtin_name -> . ASC
    (196) builtin_name -> . NUM
    (197) builtin_name -> . UPPER
    (198) builtin_name -> . LOWER
    (199) builtin_name -> . LENGTH
    (200) builtin_name -> . READ
    (201) builtin_name -> . PRINT

    IF              shift and go to state 95
    MINUS           shift and go to state 65
    NOT             shift and go to state 99
    ARROW           shift and go to state 82
    ID              shift and go to state 22
    LPAREN          shift and go to state 69
    ICONST          shift and go to state 91
    FALSE           shift and go to state 71
    TRUE            shift and go to state 73
    CCONST          shift and go to state 83
    NULL            shift and go to state 97
    SCONST          shift and go to state 88
    ABS             shift and go to state 14
    ASC             shift and go to state 39
    NUM             shift and go to state 43
    UPPER           shift and go to state 37
    LOWER           shift and go to state 27
    LENGTH          shift and go to state 8
    READ            shift and go to state 15
    PRINT           shift and go to state 2

    integer_literal                shift and go to state 78
    operand1                       shift and go to state 79
    procedure_call                 shift and go to state 34
    array_element                  shift and go to state 9
    array_slice                    shift and go to state 18
    parenthesized_expression       shift and go to state 80
    expression                     shift and go to state 281
    boolean_literal                shift and go to state 67
    builtin_name                   shift and go to state 38
    array_primitive_value          shift and go to state 75
    identifier                     shift and go to state 72
    value_array_slice              shift and go to state 85
    monadic_operator               shift and go to state 68
    character_string_literal       shift and go to state 70
    dereferenced_reference         shift and go to state 30
    primitive_value                shift and go to state 87
    call_action                    shift and go to state 98
    location                       shift and go to state 84
    referenced_location            shift and go to state 74
    operand0                       shift and go to state 89
    operand2                       shift and go to state 90
    conditional_expression         shift and go to state 96
    operand3                       shift and go to state 92
    character_literal              shift and go to state 94
    value_array_element            shift and go to state 76
    operand4                       shift and go to state 81
    array_location                 shift and go to state 16
    literal                        shift and go to state 77
    empty_literal                  shift and go to state 66
    discrete_expression            shift and go to state 336
    builtin_call                   shift and go to state 24

state 329

    (56) integer_expression -> expression .

    TO              reduce using rule 56 (integer_expression -> expression .)
    DOWN            reduce using rule 56 (integer_expression -> expression .)


state 330

    (172) step_value -> BY integer_expression .

    TO              reduce using rule 172 (step_value -> BY integer_expression .)
    DOWN            reduce using rule 172 (step_value -> BY integer_expression .)


state 331

    (173) end_value -> TO discrete_expression .

    WHILE           reduce using rule 173 (end_value -> TO discrete_expression .)
    SEMI            reduce using rule 173 (end_value -> TO discrete_expression .)


state 332

    (157) else_clause -> ELSIF boolean_expression then_clause else_clause .

    FI              reduce using rule 157 (else_clause -> ELSIF boolean_expression then_clause else_clause .)


state 333

    (214) result_spec -> RETURNS LPAREN mode RPAREN .

    SEMI            reduce using rule 214 (result_spec -> RETURNS LPAREN mode RPAREN .)


state 334

    (215) result_spec -> RETURNS LPAREN mode LOC . RPAREN

    RPAREN          shift and go to state 337


state 335

    (95) elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .

    ELSIF           reduce using rule 95 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)
    ELSE            reduce using rule 95 (elsif_expression -> elsif_expression ELSIF boolean_expression then_expression .)


state 336

    (174) end_value -> DOWN TO discrete_expression .

    WHILE           reduce using rule 174 (end_value -> DOWN TO discrete_expression .)
    SEMI            reduce using rule 174 (end_value -> DOWN TO discrete_expression .)


state 337

    (215) result_spec -> RETURNS LPAREN mode LOC RPAREN .

    SEMI            reduce using rule 215 (result_spec -> RETURNS LPAREN mode LOC RPAREN .)

